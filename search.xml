<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo页面中嵌入豆瓣插件展示豆瓣图书电影</title>
      <link href="/2022/11/29/Hexo%20%E9%A1%B5%E9%9D%A2%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6%E5%B1%95%E7%A4%BA%E8%B1%86%E7%93%A3%E5%9B%BE%E4%B9%A6%E7%94%B5%E5%BD%B1/"/>
      <url>/2022/11/29/Hexo%20%E9%A1%B5%E9%9D%A2%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6%E5%B1%95%E7%A4%BA%E8%B1%86%E7%93%A3%E5%9B%BE%E4%B9%A6%E7%94%B5%E5%BD%B1/</url>
      
        <content type="html"><![CDATA[<h2 id="Hexo页面中嵌入豆瓣插件展示豆瓣图书电影"><a href="#Hexo页面中嵌入豆瓣插件展示豆瓣图书电影" class="headerlink" title="Hexo页面中嵌入豆瓣插件展示豆瓣图书电影"></a>Hexo页面中嵌入豆瓣插件展示豆瓣图书电影</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 豆瓣 </span><br><span class="line">douban:</span><br><span class="line">  id: 191537030</span><br><span class="line">  book:</span><br><span class="line">    path: books/index.html</span><br><span class="line">    title: &#x27;CodeRain 的书架&#x27;</span><br><span class="line">    quote: &#x27;&#x27;</span><br><span class="line">  movie:</span><br><span class="line">    path: movies/index.html</span><br><span class="line">    title: &#x27;刻骨铭心的电影&#x27;</span><br><span class="line">    quote: &#x27;她&#x27;</span><br><span class="line">  timeout: 10000 </span><br></pre></td></tr></table></figure><ul><li>user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？</li><li>path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。</li><li>title: 该页面的标题。</li><li>quote: 写在页面开头的一段话,支持html语法。</li><li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</li></ul><h3 id="主题兼容"><a href="#主题兼容" class="headerlink" title="主题兼容"></a>主题兼容</h3><p>对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pjax:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - /movies/</span><br><span class="line">    - /books/</span><br><span class="line">    - /games/</span><br></pre></td></tr></table></figure><h3 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h3><p>如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  Books: /books     #This is your books page</span><br><span class="line">  Movies: /movies   #This is your movies page</span><br><span class="line">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure><p>注意这些页面不需要new创建<br>而是使用<code>hexo douban -bmg</code>创建</p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban -h</span><br><span class="line">Usage: hexo douban</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Generate pages from douban</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -b, --books   Generate douban books only</span><br><span class="line">  -g, --games   Generate douban games only</span><br><span class="line">  -m, --movies  Generate douban movies only</span><br><span class="line">如果不加参数，那么默认参数为-bgm。</span><br></pre></td></tr></table></figure><p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p><p>官方指导文档：<a href="https://github.com/mythsman/hexo-douban">https://github.com/mythsman/hexo-douban</a></p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>执行<code>hexo douban -bm</code></p><img src="/2022/11/29/Hexo%20%E9%A1%B5%E9%9D%A2%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6%E5%B1%95%E7%A4%BA%E8%B1%86%E7%93%A3%E5%9B%BE%E4%B9%A6%E7%94%B5%E5%BD%B1/2291368-20221129160808235-2056680578.png" class="">]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Centos7.X下Docker环境安装并配置加速镜像</title>
      <link href="/2022/11/28/Centos7.X%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/"/>
      <url>/2022/11/28/Centos7.X%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<p>1、安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker</span><br></pre></td></tr></table></figure><p>2、开启Docker服务</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker.service</span><br></pre></td></tr></table></figure><p>3、查看安装版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><img src="/2022/11/28/Centos7.X%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/2291368-20221128155713699-365566294.png" class=""><p>4、设置开机启动</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable docker.service</span><br></pre></td></tr></table></figure><p>5、配置DOCKER镜像下载加速<br>默认安装后的Docker 环境在拉取Docker 镜像时速度较慢</p><p>直接编辑配置⽂件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure><p>在其中加⼊加速镜像源地址(如网易)即可：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置完加速地址后，重新加载配置⽂件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure><p>重启docker 服务即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><p>6、常见国内镜像源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Docker中国官方镜像加速</span><br><span class="line">--registry-mirror=https://registry.docker-cn.com</span><br><span class="line"> </span><br><span class="line">网易163镜像加速</span><br><span class="line">--registry-mirror=http://hub-mirror.c.163.com</span><br><span class="line"> </span><br><span class="line">中科大镜像加速</span><br><span class="line">--registry-mirror=https://docker.mirrors.ustc.edu.cn</span><br><span class="line"> </span><br><span class="line">阿里云镜像加速（需要注册账号后使用）</span><br><span class="line">--registry-mirror=https://&#123;your_id&#125;.mirror.aliyuncs.com</span><br><span class="line"> </span><br><span class="line">daocloud镜像加速（需要注册账号后使用）</span><br><span class="line">--registry-mirror=http://&#123;your_id&#125;.m.daocloud.io</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下RabbitMQ下载安装</title>
      <link href="/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/"/>
      <url>/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Rabbitmq是一个消息队列</p><p>Erlang 可视化工具</p><p>注意Rabbitmq和Erlang是有版本对应关系的</p><p>查看地址：<a href="https://www.rabbitmq.com/which-erlang.html">https://www.rabbitmq.com/which-erlang.html</a></p><img src="/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221113170308568-904817832.png" class=""><p>下文安装使用24.2.2+v3.10</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>首先进入RabbitMQ官网，下载最新的RabbitMQ安装包  </p><p>网址：<a href="http://www.rabbitmq.com/install-windows.html">http://www.rabbitmq.com/install-windows.html</a></p><p>RabbitMQ的github地址：<a href="https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10">https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10</a></p><p>Erlang的github地址：<a href="https://github.com/erlang/otp/releases/tag/OTP-24.2.2">https://github.com/erlang/otp/releases/tag/OTP-24.2.2</a></p><p>1、下载好后傻瓜式安装<br>需要注意两点：</p><ul><li>先安装Erlang后，才能够安装RabbitMQ，因为RabbitMQ是基于Eralng语言开发的。</li><li>主机名不能是中文名称</li></ul><p>2、安装完成后进入RabbitMq安装目录下的\sbin目录下，输入下面命令，启动图形化界面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 开启图形化界面</span><br><span class="line">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure><p>本地浏览器输入 <a href="http://localhost:15672/">http://localhost:15672</a></p><p>会打开图形化管理页面，账号和密码都是  guest</p><img src="/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221126132613809-1055551774.png" class=""><p>登录成功后如图</p><img src="/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221126132646873-1365415137.png" class=""><p>==后续补充项目中使用==</p>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> RabbitMQ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下ElasticSearch8.5.1下载安装及使用</title>
      <link href="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="ElasticSearch下载安装及使用"><a href="#ElasticSearch下载安装及使用" class="headerlink" title="ElasticSearch下载安装及使用"></a>ElasticSearch下载安装及使用</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Elasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式的全文搜索引擎，基于restful web接口。Elasticsearch是用Java语言开发的，基于Apache协议的开源项目，是目前最受欢迎的企业搜索引擎。Elasticsearch广泛运用于云计算中，能够达到实时搜索，具有稳定，可靠，快速的特点。</p><p>由于是个人开发环境，准备尝试最新的版本，不怕核心业务出问题，而且可以享受新版本的新功能、高性能等优点，保持自己技术的不断演进。本次尝试新版本V8.5.1。</p><p>不过要注意一下版本对应关系</p><p><a href="https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features">https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features</a></p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153626401-341014184.png" class=""><ul><li>下载地址：<a href="https://www.elastic.co/cn/downloads/past-releases">https://www.elastic.co/cn/downloads/past-releases</a></li></ul><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153915252-1831743221.png" class=""><ul><li>elasticsearch默认端口为9200；</li><li>Kibana默认端口为5601。</li></ul><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><h4 id="Elasticsearch"><a href="#Elasticsearch" class="headerlink" title="Elasticsearch"></a>Elasticsearch</h4><p>1、下载</p><p>下载Elasticsearch zip包，并解压到指定目录，下载地址：<a href="https://www.elastic.co/cn/downloads/elasticsearch">https://www.elastic.co/cn/downloads/elasticsearch</a></p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123152941797-1053419929.png" class=""><p>2、启动（获取登录密码）</p><p>运行bin目录下的elasticsearch.bat启动Elasticsearch；</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153050837-236704868.png" class=""><p>出现如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">warning: ignoring JAVA_HOME=D:\Environment\Java\jdk1.8.0_281; using bundled JDK</span><br></pre></td></tr></table></figure><p>回车即可。</p><p>账号和密码记录起来关闭下面页面</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">elastic</span><br><span class="line">TetT4MAcOLew5x-nrUhR</span><br></pre></td></tr></table></figure><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153217942-618302738.png" class=""><p>3、修改yml配置文件</p><p>打开config 目录下面的 elasticsearch.yml 文件，把加密关闭</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153245736-1598997349.png" class=""><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153255337-1553269531.png" class=""><p>建议可以把所有的（4个）<code>enabled：true改成false</code></p><p>不然还会报错，当然修改也可以运行。</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153316742-1509047586.png" class=""><p>4、重启登录</p><p>修改之后记得保存关闭，重新双击bin目录下面的 elasticsearch.bat ，浏览器打开 localhost:9200输入账号密码</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153304496-1553677349.png" class=""><p>登录成功可见</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153308813-1108409909.png" class=""><p>5、其他操作</p><ul><li>其一，创建 “kibana_system”用户</li></ul><p>进入es的bin目录下打开命令行界面，创建用户保存密码，输入命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin\elasticsearch-reset-password -u kibana_system</span><br></pre></td></tr></table></figure><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153321534-953734721.png" class=""><p>注意创建用户要确定启动es</p><p>否则报错：<code>ERROR: Failed to determine the health of the cluster</code></p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153328602-574621719.png" class=""><p>保存密码<code>0xSAku3csJeFooqiVXOW</code>，后续配置Kibana会用到。</p><ul><li>其二，安装中文分词插件（后续补充详细操作）</li></ul><h4 id="Kibana"><a href="#Kibana" class="headerlink" title="Kibana"></a>Kibana</h4><p>1、下载Kibana（注意版本对应）</p><p>Kibana是访问Elasticsearch的客户端，下载完成后解压到指定目录，下载地址：<a href="https://www.elastic.co/cn/downloads/past-releases#kibana">https://www.elastic.co/cn/downloads/past-releases#kibana</a></p><p>2、配置</p><p>第一步，要有创建 的“kibana_system”用户（上文已创建），没有创建即可。</p><p>第二步，打开kibana的config文件夹中的kibana.yml，添加配置信息。    </p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153334434-1909134036.png" class=""><p>  kibana.yml添加如下配置</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server.port: 5601  </span><br><span class="line">server.host: &quot;0.0.0.0&quot;</span><br><span class="line"># 国际化中文</span><br><span class="line">i18n.locale: &quot;zh-CN&quot;</span><br><span class="line"># 配置es集群url</span><br><span class="line">elasticsearch.hosts: [&quot;http://localhost:9200&quot;] </span><br><span class="line"># 创建连接用户的账号和密码，注意此密码是创建连接用户时保存的密码</span><br><span class="line">elasticsearch.username: &quot;kibana_system&quot;</span><br><span class="line">elasticsearch.password: &quot;0xSAku3csJeFooqiVXOW&quot;   </span><br></pre></td></tr></table></figure><p>3、启动</p><p>运行bin目录下的kibana.bat，启动Kibana的用户界面</p><p>4、访问</p><p>浏览器打开 localhost:5601即可打开Kibana的用户界面，出现如下界面表示运行成功。</p><blockquote><p>注意密码为 elasticsearch的账号密码 </p><p>账号：elastic</p><p>密码：启动elasticsearch时保存的密码</p></blockquote><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153338693-731479448.png" class=""><p>登录后暂时选择自己浏览</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153343093-1497482917.png" class=""><p>进入到系统界面如图</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153346388-2038670210.png" class=""><h3 id="入门使用体验"><a href="#入门使用体验" class="headerlink" title="入门使用体验"></a>入门使用体验</h3><p>通过kibana登录elasticsearch进入控制台操作一下。</p><p>登录kibana点击左侧菜单 =&gt; Management =&gt; 开发工具</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153352114-920323856.png" class=""><p>进入控制台</p><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153356066-462304454.png" class=""><p>操作1：查询所有节点</p><p>控制台输入请求，点击发送请求，右侧展示结果。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /_cat/nodes?v </span><br></pre></td></tr></table></figure><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153359657-726233578.png" class=""><p>操作2：默认的分析器</p><p>standard 是默认的分析器。它提供了基于语法的标记化（基于Unicode文本分割算法），适用于大多数语言。</p><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">POST <span class="keyword">_analyze</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="string">&quot;analyzer&quot;</span><span class="operator">:</span> <span class="string">&quot;standard&quot;</span>,</span><br><span class="line">  <span class="string">&quot;text&quot;</span><span class="operator">:</span>     <span class="string">&quot;新年大吉&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153404682-549087824.png" class="">]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA设置单行注释符在代码行首部</title>
      <link href="/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/"/>
      <url>/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/</url>
      
        <content type="html"><![CDATA[<h4 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h4><p>默认 IntelliJ IDEA 对于 Java 代码的单行注释是把注释的斜杠放在行数的最开头，个人觉得看着不舒服，所以设置为单行注释的两个斜杠跟随在代码的头部</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><img src="/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/2291368-20220921110657870-1510098922.png" class=""><p>注：<br>1：斜杠显示在代码行首。<br>2：斜杠显示在整行的最前端<br>设置为1的效果如下：</p><img src="/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/2291368-20220921110702758-278199113.png" class="">]]></content>
      
      
      <categories>
          
          <category> 工具IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频</title>
      <link href="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/"/>
      <url>/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>目前国内比较火视频平台的视频平台有这么几家：腾讯、爱奇艺、优酷等，对于新剧、热播剧必须开通VIP会员才能观看，各大影视好剧作品分别被争相购买版权后垄断价格，甚至付费一集集购买观看，非常的不友好。作为一个折腾人，下面就带大家来折腾一下来免费观看付费视频。（实现人生自由的朋友们可以直接开通会员退出本文了）</p><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3>  <img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161524219-1891531800.png" class=""><h3 id="油猴脚本安装简述"><a href="#油猴脚本安装简述" class="headerlink" title="油猴脚本安装简述"></a>油猴脚本安装简述</h3><p>第一步，下载谷歌/edge浏览器。</p><p>第二步，下载tampermonkey。</p><p>第三步，下载的油猴文件(或者直接试用如下方式安装)，解压后得到的.crx文件拖拽到谷歌/edge浏览器的扩展管理页面（打开开发者模式）即可完成安装。</p><h2 id="安装步骤"><a href="#安装步骤" class="headerlink" title="安装步骤"></a>安装步骤</h2><h3 id="安装油猴扩展"><a href="#安装油猴扩展" class="headerlink" title="安装油猴扩展"></a>安装油猴扩展</h3><p>由于考虑到一些同学没有ti子，下文以Edge浏览器（内核Chrome）举例，谷歌浏览器也是大同小异。</p><p>1、点击<a href="https://microsoftedge.microsoft.com/addons?hl=zh-CN">获取 Microsoft Edge 扩展</a>，打开开发者模式。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161300895-837839242.png" class=""><p>2、跳转至扩展获取界面，热门中如有直接点击获取即可</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161315069-1517471827.png" class=""><p>或者搜索<strong>Tampermonkey</strong>，搜索到油猴之后点击获取。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161326879-2039517975.png" class=""><p>3、弹出添加扩展添加即可。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161340344-243788459.png" class=""><p>4、添加成功会出现<strong>Tampermonkey</strong> 已经成功安装!会跳转到此页面。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161409227-1151488737.png" class=""><p>5、点击用户脚本，有几种获取脚本的方式，笔者一般使用第二种<a href="https://greasyfork.org/">GreasyFork</a>去获取。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161422145-1659631518.png" class=""><p>可以看到有脚本使用安装简单介绍：</p><p>第一步：安装一个用户脚本管理器</p><p>第二步：安装一个用户脚本</p><p>第三步：使用用户脚本</p><p>到此第一步我们已经完成，接下来就是安装用户脚本了。</p><p>6、也可便捷三步安装油猴，点击传松门，<a href="https://www.tampermonkey.net/">Tampermonkey • 首页</a>，点击下载直接省略上文1、2、3步骤。以上省略步骤是为了方便用户可以自行安装其他扩展。下文会简单推荐个人好用扩展。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161517671-301035636.png" class=""><h3 id="安装用户脚本"><a href="#安装用户脚本" class="headerlink" title="安装用户脚本"></a>安装用户脚本</h3><p>1、点击<a href="https://greasyfork.org/">GreasyFork</a>去获取，首页如图：</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161431578-1856504518.png" class=""><p>2、搜索框输入脚本名称，支持模糊查询如直接搜索视频（下文以此举例），选择自己所需脚本点击进入安装界面。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161439551-1411541496.png" class=""><p>3、点击安装此脚本即可。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161447243-1322403015.png" class=""><p>4、然后点击管理面板即可查看到刚刚安装的脚本。建议之前先把油猴扩展展示，方便后续操作。</p><p>油猴扩展展示进行如下操作，点击隐藏标识取消隐藏。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161454039-1238665013.png" class=""><p>鼠标左击油猴扩展标识，点击管理面板</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161500321-1046594983.png" class=""><p>5、即可进入管理面板，可以查看到已经安装的脚本列表，默认已经启用。</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161507343-2040709033.png" class=""><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>打开你想看的视频，发现左边有按钮，点击后展开选择其中一个解析地址稍等片刻，如有解析失败的接口，更换接口即可。</p><ul><li><p>全网VIP视频破解去广告免费看+全网音乐下载+知乎增强+短视频无水印下载效果图</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161524219-1891531800.png" class=""></li><li><p>B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx效果图</p><img src="/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161532207-1251520737.png" class=""></li></ul><h2 id="扩展、脚本推荐"><a href="#扩展、脚本推荐" class="headerlink" title="扩展、脚本推荐"></a>扩展、脚本推荐</h2><h3 id="油猴脚本推荐"><a href="#油猴脚本推荐" class="headerlink" title="油猴脚本推荐"></a>油猴脚本推荐</h3><ul><li>计时器掌控者|视频广告跳过|视频广告加速器</li><li> 懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、知乎增强xxx</li><li>B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx</li><li>百度网盘视频播放尊享 VIP | 解锁视频倍数 | 解锁全部清晰度</li></ul><h3 id="Chrome-Edge扩展推荐"><a href="#Chrome-Edge扩展推荐" class="headerlink" title="Chrome/Edge扩展推荐"></a>Chrome/Edge扩展推荐</h3><ul><li><p>Infinity 新标签页</p></li><li><p>OneTab</p></li><li><p>Tampermonkey</p></li><li><p>扩展管理器（Extension Manager）</p></li><li><p>AdBlock/AdGuard</p></li><li><p>沙拉查词-聚合词典划词翻译</p></li><li><p>NeatDownloadManager Extension</p></li><li><p>SuperCopy 超级复制</p><p>开发者推荐</p></li><li><p>GitCodeTree</p></li><li><p>Octotree - GitHub code tree</p></li><li><p>FeHelper(前端助手)</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 油猴 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo主题Butterfly配置、踩坑及魔改</title>
      <link href="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/"/>
      <url>/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo主题Butterfly配置、踩坑及魔改"><a href="#Hexo主题Butterfly配置、踩坑及魔改" class="headerlink" title="Hexo主题Butterfly配置、踩坑及魔改"></a>Hexo主题Butterfly配置、踩坑及魔改</h1><h2 id="Butterfly配置"><a href="#Butterfly配置" class="headerlink" title="Butterfly配置"></a>Butterfly配置</h2><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p>已经特别详细了：<a href="https://butterfly.js.org/posts/21cfbf15/">https://butterfly.js.org/posts/21cfbf15/</a></p><h3 id="引入字数统计"><a href="#引入字数统计" class="headerlink" title="引入字数统计"></a>引入字数统计</h3><ol><li>引入字数统计相关插件：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><ol start="2"><li>修改主题配置文件_config.butterfly.yml</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">wordcount:</span><br><span class="line">  enable: true</span><br><span class="line">  post_wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  total_wordcount: true</span><br></pre></td></tr></table></figure><h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><h3 id="问题1"><a href="#问题1" class="headerlink" title="问题1"></a>问题1</h3><p>改导航菜单一定要hexo clean<br>然后再重新hexo g<br>否则可能会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">FATAL YAMLException: bad indentation of a mapping entry at line 26, column 7:</span><br><span class="line">        读书: /books/ || fas fa-book</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line"></span><br><span class="line">  message: &#x27;bad indentation of a mapping entry at line 26, column 7:\n&#x27; +</span><br><span class="line">    &#x27;        读书: /books/ || fas fa-book\n&#x27; +</span><br></pre></td></tr></table></figure><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/Snipaste_2022-11-29_19-45-45.png" class="" title="Snipaste_2022-11-29_19-45-45"><h3 id="问题2"><a href="#问题2" class="headerlink" title="问题2"></a>问题2</h3><h4 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h4><p>Hexo主题Butterfly启动后报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug block content include ./includes/mixins/post-ui</span><br><span class="line">.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure><h4 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h4><p>更换新主题Butterfly</p><h4 id="原因"><a href="#原因" class="headerlink" title="原因"></a>原因</h4><p>没有 pug 以及 stylus 的渲染器</p><h4 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class="line">npm install hexo-deployer-git --save / yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure><p>再次依次执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo s -p 4000</span><br></pre></td></tr></table></figure><h3 id="问题3"><a href="#问题3" class="headerlink" title="问题3"></a>问题3</h3><h4 id="问题-1"><a href="#问题-1" class="headerlink" title="问题"></a>问题</h4><p>Valine、Waline评论失效，评论失败，翻墙可以评论成功。</p><h4 id="场景-1"><a href="#场景-1" class="headerlink" title="场景"></a>场景</h4><p>Hexo主题Butterfly添加评论功能</p><h4 id="原因-1"><a href="#原因-1" class="headerlink" title="原因"></a>原因</h4><p>由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。</p><h4 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h4><p><a href="https://blog.csdn.net/Panzer_Jack/article/details/127418379?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-13-127418379-blog-127204331.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-13-127418379-blog-127204331.pc_relevant_recovery_v2&utm_relevant_index=14">关于waline国内无法使用的解决方案 （vercel.app国内无法使用问题）</a></p><p>博客更换为Waline评论系统</p><p><a href="https://blog.csdn.net/hubojing/article/details/122659549">https://blog.csdn.net/hubojing/article/details/122659549</a></p><h2 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h2><h3 id="嵌入豆瓣插件展示豆瓣图书电影"><a href="#嵌入豆瓣插件展示豆瓣图书电影" class="headerlink" title="嵌入豆瓣插件展示豆瓣图书电影"></a>嵌入豆瓣插件展示豆瓣图书电影</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><h4 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h4><p>在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 豆瓣 </span><br><span class="line">douban:</span><br><span class="line">  id: 191537030</span><br><span class="line">  book:</span><br><span class="line">    path: books/index.html</span><br><span class="line">    title: &#x27;CodeRain 的书架&#x27;</span><br><span class="line">    quote: &#x27;&#x27;</span><br><span class="line">  movie:</span><br><span class="line">    path: movies/index.html</span><br><span class="line">    title: &#x27;刻骨铭心的电影&#x27;</span><br><span class="line">    quote: &#x27;她&#x27;</span><br><span class="line">  timeout: 10000 </span><br></pre></td></tr></table></figure><ul><li>user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？</li><li>path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。</li><li>title: 该页面的标题。</li><li>quote: 写在页面开头的一段话,支持html语法。</li><li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</li></ul><h4 id="主题兼容"><a href="#主题兼容" class="headerlink" title="主题兼容"></a>主题兼容</h4><p>对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pjax:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - /movies/</span><br><span class="line">    - /books/</span><br><span class="line">    - /games/</span><br></pre></td></tr></table></figure><h4 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h4><p>如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: /</span><br><span class="line">  Archives: /archives</span><br><span class="line">  Books: /books     #This is your books page</span><br><span class="line">  Movies: /movies   #This is your movies page</span><br><span class="line">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure><p>注意这些页面不需要new创建<br>而是使用<code>hexo douban -bmg</code>创建</p><h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ hexo douban -h</span><br><span class="line">Usage: hexo douban</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">Generate pages from douban</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -b, --books   Generate douban books only</span><br><span class="line">  -g, --games   Generate douban games only</span><br><span class="line">  -m, --movies  Generate douban movies only</span><br><span class="line">如果不加参数，那么默认参数为-bgm。</span><br></pre></td></tr></table></figure><p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p><p>官方指导文档：<a href="https://github.com/mythsman/hexo-douban">https://github.com/mythsman/hexo-douban</a></p><h4 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h4><p>执行<code>hexo douban -bm</code></p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221129160808235-2056680578.png" class=""><h3 id="hexo-butterfly主题设置背景透明度和字体"><a href="#hexo-butterfly主题设置背景透明度和字体" class="headerlink" title="hexo butterfly主题设置背景透明度和字体"></a>hexo butterfly主题设置背景透明度和字体</h3><h4 id="效果-1"><a href="#效果-1" class="headerlink" title="效果"></a>效果</h4><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125458669-276341619.png" class=""><h4 id="新建css文件"><a href="#新建css文件" class="headerlink" title="新建css文件"></a>新建css文件</h4><p>引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\themes\Butterfly\source\css），这样系统升级可能会把自己的代码覆盖掉。本人是在<code>Blog\CodeRain\source\css</code>新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。</p><p>目录截图：</p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125502046-569979710.png" class=""><p><code>transpancy.css文件</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页背景 */</span></span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表透明度为0.7 可以自行修改*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 所有页面背景 */</span></span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>, <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>, <span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>), <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>, <span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="comment">/* 以下代表透明度为0.7 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*侧边卡片的透明度 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--card-bg</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line"><span class="comment">/* 以下代表透明度为0.7 */</span></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, .<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="引入css-文件"><a href="#引入css-文件" class="headerlink" title="引入css 文件"></a>引入css 文件</h4><p>在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段</p><p>位置图片：</p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125806511-17842588.png" class=""><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/transpancy.css&quot;&gt;</span><br></pre></td></tr></table></figure><h4 id="排查过程（页脚为例）"><a href="#排查过程（页脚为例）" class="headerlink" title="排查过程（页脚为例）"></a>排查过程（页脚为例）</h4><p>浏览器页面打开</p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203047705-1415002471.png" class=""><p>浏览器调试</p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203055675-805963954.png" class=""><p>去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将<code>footer_bg: false</code></p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203101693-1156912262.png" class=""><p>如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）</p><img src="/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203107165-240361835.png" class="">]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Butterfly主题设置背景透明度和字体</title>
      <link href="/2022/11/19/Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/"/>
      <url>/2022/11/19/Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/</url>
      
        <content type="html"><![CDATA[<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125458669-276341619.png"></p><h3 id="新建css文件"><a href="#新建css文件" class="headerlink" title="新建css文件"></a>新建css文件</h3><p>引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\themes\Butterfly\source\css），这样系统升级可能会把自己的代码覆盖掉。本人是在<code>Blog\CodeRain\source\css</code>新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。</p><p>目录截图：</p><p><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125502046-569979710.png"></p><p><code>transpancy.css文件</code></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 文章页背景 */</span></span><br><span class="line"><span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span> &#123;</span><br><span class="line">    <span class="comment">/* 以下代表透明度为0.7 可以自行修改*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 所有页面背景 */</span></span><br><span class="line"><span class="selector-id">#aside_content</span> <span class="selector-class">.card-widget</span>, <span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>, <span class="selector-class">.layout_page</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>), <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#page</span>, <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>, <span class="selector-class">.read-mode</span> <span class="selector-class">.layout_post</span>&gt;<span class="selector-id">#post</span>&#123;</span><br><span class="line">    <span class="comment">/* 以下代表透明度为0.7 */</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*侧边卡片的透明度 */</span></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attr">--card-bg</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">7</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* 页脚透明 */</span></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line"><span class="comment">/* 以下代表透明度为0.7 */</span></span><br><span class="line"><span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>, .<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="引入css-文件"><a href="#引入css-文件" class="headerlink" title="引入css 文件"></a>引入css 文件</h3><p>在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段</p><p>位置图片：</p><p><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125806511-17842588.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/transpancy.css&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="排查过程（页脚为例）"><a href="#排查过程（页脚为例）" class="headerlink" title="排查过程（页脚为例）"></a>排查过程（页脚为例）</h3><p>浏览器页面打开</p><p><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203047705-1415002471.png"></p><p>浏览器调试<br><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203055675-805963954.png"></p><p>去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将<code>footer_bg: false</code><br><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203101693-1156912262.png"></p><p>如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）<br><img src="Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203107165-240361835.png"></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOS7.x下在后台运行和关闭（Java）项目</title>
      <link href="/2022/11/12/CentOS7.x%E4%B8%8B%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E5%92%8C%E5%85%B3%E9%97%AD%EF%BC%88Java%EF%BC%89%E9%A1%B9%E7%9B%AE/"/>
      <url>/2022/11/12/CentOS7.x%E4%B8%8B%E5%9C%A8%E5%90%8E%E5%8F%B0%E8%BF%90%E8%A1%8C%E5%92%8C%E5%85%B3%E9%97%AD%EF%BC%88Java%EF%BC%89%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>在一般情况下，在服务器通过 java -jar xxx.jar 来运行一个jar包。但是如果退出了控制台，那么这个程序就将被关闭。因此让jar包后台运行十分必要。</p><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><h3 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h3><p>方式一：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar xx.jar &amp; </span><br></pre></td></tr></table></figure><p>&amp;代表在后台运行</p><p>方式二：</p><p>nohup java -jar xx.jar &amp;</p><p>方式三(推荐):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar xxx.jar  &gt;log.file  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>上面的意思如下:</p><ul><li>0    标准输入（一般是键盘）</li><li>1    标准输出（一般是显示屏，是用户终端控制台）</li><li>2    标准错误（错误信息输出）</li><li><code>&gt;log.file</code> 将运行的jar 错误日志信息输出到log.file文件中来,如果不指定，默认该项目所有输出被重定向到nohup.out的文件中。可查看运行的日志文件，查看jar包启动有没有报错</li><li><code>2&gt;&amp;1</code>就是表示将错误重定向输出到标准输出上</li><li>最后一个&amp;,表示在后台运行。</li></ul><p>推荐后两种方式，因为前者是直接后台运行jar包，并没有进入到java的dos窗口。<br>但假如我们的java程序需要我们进入到它的dos窗口，输入一些参数来运行的话，前两种是不可取的。因为可以在运行jar包后进入java的dos窗口来输入一些程序需要的参数，随后退出dos窗口让其在后台运行。</p><h3 id="关闭后台运行的Java-jar包项目"><a href="#关闭后台运行的Java-jar包项目" class="headerlink" title="关闭后台运行的Java jar包项目"></a>关闭后台运行的Java jar包项目</h3><p>方法一</p><p>直接杀死进程（根据端口）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo fuser -k -n tcp 8888</span><br></pre></td></tr></table></figure><p>方法二</p><p>根据pid 停止运行</p><p>1.查看进程命令为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux|grep myblog-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>2.将会看到此jar的进程信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root      9150  0.0  0.0 112708  1012 pts/1    S+   19:05   0:00 grep --color=auto blog-api-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>3.其中9150则为此jar的pid，杀掉命令为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kill -9 9150</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java集成ip2region2.x实现ip属地功能</title>
      <link href="/2022/11/03/Java%E9%9B%86%E6%88%90ip2region2.x%E5%AE%9E%E7%8E%B0ip%E5%B1%9E%E5%9C%B0%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/"/>
      <url>/2022/11/03/Java%E9%9B%86%E6%88%90ip2region2.x%E5%AE%9E%E7%8E%B0ip%E5%B1%9E%E5%9C%B0%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Java集成ip2region2-x实现ip属地功能"><a href="#Java集成ip2region2-x实现ip属地功能" class="headerlink" title="Java集成ip2region2.x实现ip属地功能"></a>Java集成ip2region2.x实现ip属地功能</h1><h2 id="效果图-封面"><a href="#效果图-封面" class="headerlink" title="效果图/封面"></a>效果图/封面</h2><img src="/2022/11/03/Java%E9%9B%86%E6%88%90ip2region2.x%E5%AE%9E%E7%8E%B0ip%E5%B1%9E%E5%9C%B0%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/Snipaste_2022-11-12_09-59-54.png" class=""><h2 id="一、前言"><a href="#一、前言" class="headerlink" title="一、前言"></a>一、前言</h2><p>如今许多软件如B站、微博、抖音等都加上 IP 归属地防止恶意评论，境外用户显示的是国家，国内的用户显示的省份。兴致一起，我便想自己的博客项目加上此功能。</p><p>目前存在几种方式：</p><ul><li><p>方式一：IP地址库ip2region（本文采取的方式）</p></li><li><p>方式二：使用第三方API（查询效率低，不稳定，容易失效）</p><ol><li><del>淘宝–IP库地址：<code>https://ip.taobao.com/</code>已经停止服务()</del></li><li>太平洋IP地址库<code>http://whois.pconline.com.cn/</code> </li></ol></li></ul><h2 id="二、ip2region简介"><a href="#二、ip2region简介" class="headerlink" title="二、ip2region简介"></a>二、ip2region简介</h2><p>   ip2region - 准确率99.9%的离线IP地址定位库，0.0x毫秒级查询，ip2region.db数据库只有数MB，提供了java、php、c、python、nodejs、golang、c#等查询绑定和Binary,<a href="https://so.csdn.net/so/search?q=B%E6%A0%91&spm=1001.2101.3001.7020">B树</a>,内存三种查询算法。</p><ul><li><p>地址：</p><p>GitHub地址：<a href="https://github.com/lionsoul2014/ip2region">https://github.com/lionsoul2014/ip2region</a></p><p>Gitee地址：<a href="https://gitee.com/lionsoul/ip2region">https://gitee.com/lionsoul/ip2region</a></p></li><li><p>特性/优势</p><ol><li>标准化的数据格式——每个 ip 数据段的 region 信息都固定了格式：国家|区域|省份|城市|ISP</li><li>数据去重和压缩</li><li>极速查询响应——即使是完全基于 xdb 文件的查询，单次查询响应时间在十微秒级别</li><li>IP 数据管理框架</li></ol></li></ul><h2 id="三、ip2region的使用"><a href="#三、ip2region的使用" class="headerlink" title="三、ip2region的使用"></a>三、ip2region的使用</h2><h3 id="1、下载ip2region-db"><a href="#1、下载ip2region-db" class="headerlink" title="1、下载ip2region.db"></a>1、下载ip2region.db</h3><p>将项目从GitHub/Gitee仓库down下来，找到data目录，有三种不同文件格式的ip地址库，进入找到<a href="https://gitee.com/lionsoul/ip2region/blob/master/data/ip2region.xdb">ip2region.xdb</a>，将ip2region.xdb复制出来放到resources下。</p><h3 id="2、pom-xml中引入依赖"><a href="#2、pom-xml中引入依赖" class="headerlink" title="2、pom.xml中引入依赖"></a>2、pom.xml中引入依赖</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.lionsoul<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ip2region<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.5<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3、IpUtils工具类"><a href="#3、IpUtils工具类" class="headerlink" title="3、IpUtils工具类"></a>3、IpUtils工具类</h3><p>其中有三个方法，</p><p>其一是去获取请求中的真实客户端ip。</p><p>其二是通过ip获取城市信息。</p><p>其三在服务启动时加载 ip2region.db 这个数据资源到内存中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lll.blog.utils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.lionsoul.ip2region.xdb.Searcher;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.LoggerFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="keyword">import</span> org.springframework.util.FileCopyUtils;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.annotation.PostConstruct;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.InetAddress;</span><br><span class="line"><span class="keyword">import</span> java.net.UnknownHostException;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IPUtils</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(IPUtils.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Searcher searcher;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取客户端IP地址</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * 使用Nginx等反向代理软件， 则不能通过request.getRemoteAddr()获取IP地址</span></span><br><span class="line"><span class="comment">     * 如果使用了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP地址，X-Forwarded-For中第一个非unknown的有效IP字符串，则为真实IP地址</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">getIpAddr</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            ip = request.getHeader(<span class="string">&quot;x-forwarded-for&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || ip.length() == <span class="number">0</span> || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getHeader(<span class="string">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (StringUtils.isEmpty(ip) || <span class="string">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class="line">                ip = request.getRemoteAddr();</span><br><span class="line">                <span class="keyword">if</span> (<span class="string">&quot;127.0.0.1&quot;</span>.equals(ip) || <span class="string">&quot;0:0:0:0:0:0:0:1&quot;</span>.equals(ip)) &#123;</span><br><span class="line">                    <span class="comment">//根据网卡取本机配置的IP</span></span><br><span class="line">                    <span class="type">InetAddress</span> <span class="variable">inet</span> <span class="operator">=</span> <span class="literal">null</span>;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        inet = InetAddress.getLocalHost();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (UnknownHostException e) &#123;</span><br><span class="line">                        log.error(<span class="string">&quot;getIpAddress exception:&quot;</span>, e);</span><br><span class="line">                    &#125;</span><br><span class="line">                    ip = inet.getHostAddress();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            logger.error(<span class="string">&quot;IPUtils ERROR &quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ip;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据ip从 ip2region.db 中获取地理位置</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> ip</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 地理位置</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> Map <span class="title function_">getCityInfo</span><span class="params">(String ip)</span> &#123;</span><br><span class="line">        <span class="comment">//数据格式： 国家|区域|省份|城市|ISP</span></span><br><span class="line">        <span class="comment">//192.168.31.160 0|0|0|内网IP|内网IP</span></span><br><span class="line">        <span class="comment">//47.52.236.180 中国|0|香港|0|阿里云</span></span><br><span class="line">        <span class="comment">//220.248.12.158 中国|0|上海|上海市|联通</span></span><br><span class="line">        <span class="comment">//164.114.53.60 美国|0|华盛顿|0|0</span></span><br><span class="line">        HashMap&lt;String, Object&gt; cityInfo = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">searchIpInfo</span> <span class="operator">=</span> searcher.search(ip);</span><br><span class="line">            String[] splitIpInfo = searchIpInfo.split(<span class="string">&quot;\\|&quot;</span>);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;ip&quot;</span>,ip);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;searchInfo&quot;</span>, searchIpInfo);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;country&quot;</span>,splitIpInfo[<span class="number">0</span>]);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;region&quot;</span>,splitIpInfo[<span class="number">1</span>]);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;province&quot;</span>,splitIpInfo[<span class="number">2</span>]);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;city&quot;</span>,splitIpInfo[<span class="number">3</span>]);</span><br><span class="line">            cityInfo.put(<span class="string">&quot;ISP&quot;</span>,splitIpInfo[<span class="number">3</span>]);</span><br><span class="line">            <span class="keyword">return</span> cityInfo;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;failed to search(%s): %s\n&quot;</span>, ip, e);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 在服务启动时加载 ip2region.db 到内存中</span></span><br><span class="line"><span class="comment">     * 解决打包jar后找不到 ip2region.db 的问题</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception 出现异常应该直接抛出终止程序启动，避免后续invoke时出现更多错误</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@PostConstruct</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">initIp2regionResource</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="type">InputStream</span> <span class="variable">inputStream</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;/ipdb/ip2region.xdb&quot;</span>).getInputStream();</span><br><span class="line">            <span class="type">byte</span>[] dbBinStr = FileCopyUtils.copyToByteArray(inputStream);</span><br><span class="line">            <span class="comment">// 创建一个完全基于内存的查询对象</span></span><br><span class="line">            searcher = Searcher.newWithBuffer(dbBinStr);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            log.info(<span class="string">&quot;failed to create content cached searcher: %s\n&quot;</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4、测试类"><a href="#4、测试类" class="headerlink" title="4、测试类"></a>4、测试类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.lll.blog.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.lll.blog.utils.IPUtils;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Rain</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2022/10/28 15:57</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">IpController</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping(value = &quot;/testIp&quot;)</span></span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="keyword">public</span> Object <span class="title function_">testIp</span><span class="params">(HttpServletRequest request)</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">ipAddr</span> <span class="operator">=</span> IPUtils.getIpAddr(request);</span><br><span class="line">        <span class="type">Map</span> <span class="variable">cityInfo</span> <span class="operator">=</span> IPUtils.getCityInfo(ipAddr);</span><br><span class="line">        System.out.println(cityInfo.get(<span class="string">&quot;province&quot;</span>));</span><br><span class="line">        <span class="comment">//数据格式： 国家|区域|省份|城市|ISP</span></span><br><span class="line">        <span class="comment">//192.168.31.160 0|0|0|内网IP|内网IP</span></span><br><span class="line">        <span class="comment">//47.52.236.180 中国|0|香港|0|阿里云</span></span><br><span class="line">        <span class="comment">//220.248.12.158 中国|0|上海|上海市|联通</span></span><br><span class="line">        <span class="comment">//164.114.53.60 美国|0|华盛顿|0|0</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">ip</span> <span class="operator">=</span> <span class="string">&quot;183.213.81.138&quot;</span>;</span><br><span class="line">        <span class="type">Map</span> <span class="variable">result</span> <span class="operator">=</span> IPUtils.getCityInfo(ip);</span><br><span class="line">        System.out.println(result.get(<span class="string">&quot;province&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> cityInfo;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="四、需求实现-博客项目归属地"><a href="#四、需求实现-博客项目归属地" class="headerlink" title="四、需求实现-博客项目归属地"></a>四、需求实现-博客项目归属地</h2><p>项目技术：Springboot + Vue</p><h3 id="1、后端"><a href="#1、后端" class="headerlink" title="1、后端"></a>1、后端</h3><p><strong>Controller</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">package com.lll.blog.controller;</span><br><span class="line"></span><br><span class="line">import com.lll.blog.service.SysUserService;</span><br><span class="line">import com.lll.blog.utils.IPUtils;</span><br><span class="line">import com.lll.blog.vo.Result;</span><br><span class="line">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line">import org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line">import javax.servlet.http.HttpServletRequest;</span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line">@RestController</span><br><span class="line">@RequestMapping(&quot;users&quot;)</span><br><span class="line">public class UsersController &#123;</span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    private SysUserService SysUserService;</span><br><span class="line">    </span><br><span class="line">    @GetMapping(&quot;getIpRegion&quot;)</span><br><span class="line">    public Result getIpRegion(HttpServletRequest request)&#123;</span><br><span class="line">        String ipAddr = IPUtils.getIpAddr(request);</span><br><span class="line">        return SysUserService.getIpRegion(ipAddr);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Service</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">public interface SysUserService &#123;</span><br><span class="line"></span><br><span class="line">    Result getIpRegion(String ip);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Impl</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">package com.lll.blog.service.impl;</span><br><span class="line"></span><br><span class="line">import com.lll.blog.utils.IPUtils;</span><br><span class="line">import com.lll.blog.vo.ErrorCode;</span><br><span class="line">import com.lll.blog.vo.Result;</span><br><span class="line"></span><br><span class="line">import java.util.Map;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@Service</span><br><span class="line">public class SysUserServiceImpl implements SysUserService &#123;</span><br><span class="line"></span><br><span class="line">    @Override</span><br><span class="line">    public Result getIpRegion(String ip) &#123;</span><br><span class="line">        Map cityInfo = IPUtils.getCityInfo(ip);</span><br><span class="line">        if (&quot;中国&quot;.equals(cityInfo.get(&quot;country&quot;)))&#123;</span><br><span class="line">            System.out.println(cityInfo.get(&quot;province&quot;));</span><br><span class="line">            Object province = cityInfo.get(&quot;province&quot;);</span><br><span class="line">            return Result.success(province);</span><br><span class="line">        &#125;</span><br><span class="line">        else if (&quot;0&quot;.equals(cityInfo.get(&quot;country&quot;)))&#123;</span><br><span class="line">            System.out.println(cityInfo);</span><br><span class="line">            if (&quot;内网IP&quot;.equals(cityInfo.get(&quot;ISP&quot;)))&#123;</span><br><span class="line">                return Result.success(&quot;内网&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            return Result.success(&quot;未知&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">        else &#123;</span><br><span class="line">            System.out.println(cityInfo.get(&quot;country&quot;));</span><br><span class="line">            return Result.success(cityInfo.get(&quot;country&quot;));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、前端"><a href="#2、前端" class="headerlink" title="2、前端"></a>2、前端</h3><p>(下面仅仅展示部分关键代码)</p><p><strong>api</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export function getIpRegionInfo() &#123;</span><br><span class="line">  return request(&#123;</span><br><span class="line">    url: &#x27;/users/getIpRegion&#x27;,</span><br><span class="line">    method: &#x27;get&#x27;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><p><strong>vue页面</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;el-card&gt;</span><br><span class="line">    &lt;div class=&quot;me-author-description&quot; v-if=&quot;!user.login&quot;&gt;</span><br><span class="line">      &lt;span&gt;&lt;i class=&quot;el-icon-location-outline&quot;&gt;&lt;/i&gt; &amp;nbsp;IP属地:&#123;&#123;ip&#125;&#125;&lt;/span&gt;</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">  &lt;/el-card&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">  import &#123;getIpRegionInfo&#125; from &#x27;@/api/login&#x27;</span><br><span class="line"></span><br><span class="line">  export default &#123;</span><br><span class="line">    name: &#x27;CardMe&#x27;,</span><br><span class="line">    created() &#123;</span><br><span class="line">      this.getIpRegionInfo()</span><br><span class="line">    &#125;,</span><br><span class="line">    data() &#123;</span><br><span class="line">      return &#123;</span><br><span class="line">        ip: null,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">      getIpRegionInfo() &#123;</span><br><span class="line">        getIpRegionInfo().then((data =&gt; &#123;</span><br><span class="line">          this.ip = data.data</span><br><span class="line">        &#125;)).catch(error =&gt; &#123;</span><br><span class="line">          if (error !== &#x27;error&#x27;) &#123;</span><br><span class="line">            that.$message(&#123;type: &#x27;error&#x27;, message: &#x27;ip归属地获取失败!&#x27;, showClose: true&#125;)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="五、扩展"><a href="#五、扩展" class="headerlink" title="五、扩展"></a>五、扩展</h2><h3 id="1、好文"><a href="#1、好文" class="headerlink" title="1、好文"></a>1、好文</h3><ul><li><p><a href="https://segmentfault.com/a/1190000039019933">深入浅出之ip2region实现</a></p></li><li><p>ip2region2.x</p><p><a href="https://blog.csdn.net/weixin_42144379/article/details/84900446?spm=1001.2101.3001.6650.19&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-19-84900446-blog-120698683.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-19-84900446-blog-120698683.pc_relevant_default&utm_relevant_index=22">Java 根据 IP 地址来获取 位置 – 使用 ip2region</a></p><p><a href="https://blog.csdn.net/sinat_27933301/article/details/123170533?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-123170533-blog-124451706.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.1&utm_relevant_index=3">使用强大的离线IP地址定位库ip2region获取城市信息</a></p></li><li><p>1.x</p><p><a href="https://malian.tech/article/111345">IP获取城市-Java调用ip2region</a></p></li></ul><h3 id="2、待尝试"><a href="#2、待尝试" class="headerlink" title="2、待尝试"></a>2、待尝试</h3><ul><li><p><a href="https://segmentfault.com/a/1190000022622489">mica 2.0.1 发布新增最好用的 ip2region boot stater</a></p></li><li><p>@IP注解</p><p>后续有时间尝试一下 @IP注解切面开发<a href="https://blog.csdn.net/weixin_33005117/article/details/125599192?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-125599192-blog-107375608.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-125599192-blog-107375608.pc_relevant_default&utm_relevant_index=9">参考</a></p><p>之后在接口方法上加上 @IP 注解就可以实现监控Controller接口的访问地址</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ip属地 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA2021.3.3配置Maven（详细版）</title>
      <link href="/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/"/>
      <url>/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<p>0、需求</p><p>maven用来管理依赖，是专门用于构建和管理项目的工具，很大程度方便了我们对依赖导包等，然而Idea配置自己本地maven很有必要</p><p>1、准备</p><p>idea2021.3.3<br>maven 对应版本</p><p>2、步骤</p><p>首先打开File ==&gt; Setting</p><img src="/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831214155978-149933813.png" class=""><p>然后 Build ==&gt; Build Tools ==&gt; Maven，如下图选择对应的路径及配置应用确认即可。</p><img src="/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831214203083-833526346.png" class=""><p>注意的是：idea使用的JDK版本要和第二步试运行maven时显示的JDK版本一致。</p><p>3、扩展</p><p>全局设置maven配置（如果平时项目所用版本一致，可以考虑设置）</p><p>Idea启动页面找到设置</p><img src="/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831215842519-392248897.png" class=""><p>找到maven设置即可进行全局设置。</p><img src="/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831215848336-1055632127.png" class=""><p>此外maven helper插件是个宝藏插件，可以考虑下载使用解决依赖冲突。</p>]]></content>
      
      
      <categories>
          
          <category> 工具IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA热部署插件JRebel的安装与使用</title>
      <link href="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p>1、背景</p><p>一般更新了 Java 文件后要手动重启整个项目，才能生效，这很影响开发速度，于是热部署就出现了。</p><p>热部署就是正在运行状态的应用，修改了他的源码之后，在不重新启动的情况下能够把修改内容编译并部署到服务器上，使得修改立即生效。</p><p>使用JRebel后，可以不用重启便可将修改的代码有效，非常的高效。</p><p>2、下载安装</p><p>Idea下安装JRebel插件</p><p>File -&gt; Settings -&gt; Plugins 中搜索JRebel,安装插件,</p><img src="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727095004887-1021333814.png" class=""><p>下载完成后重启Idea，来到引导页面</p><img src="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727095323044-351600479.png" class=""><p><strong>3、激活（由于是付费软件，所以这里需要激活）</strong></p><p>激活前需要准备：GUID + 邮箱</p><p>这里给出一个在线生成GUID地址： <a href="https://www.guidgen.com/">https://www.guidgen.com/</a></p><img src="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727101157568-1260673146.png" class=""><p>如图界面拿到生成的一个 GUID ，并且准备好自己的邮箱（虚假邮箱也可，不校验），然后即可进入激活页面激活。</p><p>点击 Jrabel Activation 进入激活</p><img src="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727100744970-1033816311.png" class=""><p>地址格式是<a href="https://jrebel.qekang.com/GUID%EF%BC%8C%E5%85%B6%E4%B8%AD%E7%9A%84GUID%E6%98%AF%E4%B8%8A%E8%BF%B0%E7%BB%99%E5%87%BA%E5%9C%B0%E5%9D%80%E7%94%9F%E6%88%90%E7%9A%84">https://jrebel.qekang.com/GUID，其中的GUID是上述给出地址生成的</a></p><img src="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727101209601-1551997987.png" class=""><p>点击激活完成后跳转到jrebel快速开始官网</p><p>到此激活成功。</p><p>4、其他配置</p><p>File -&gt; Settings -&gt; Jrebel&amp;Xrebel 设置 Jrebel 离线工作，并且部署时间设置为1s</p><img src="/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220729162029857-1803090724.png" class=""><p><a href="https://www.cnblogs.com/shan333/p/16098637.html">参考文章</a></p><p><a href="https://blog.csdn.net/qq_16148137/article/details/99694566?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&utm_relevant_index=9">参考文章</a></p><p><a href="https://www.cnblogs.com/fantyovo/p/15682345.html">参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AJReport小白配置大屏教程</title>
      <link href="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/"/>
      <url>/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="AJ-Report小白配置大屏教程"><a href="#AJ-Report小白配置大屏教程" class="headerlink" title="AJ-Report小白配置大屏教程"></a>AJ-Report小白配置大屏教程</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>leader 上周周五快下班时给了我一个任务，问我说项目新集成的 AJ-Report 玩的怎么样了，下周给部门其他同事做个技术分享，快速教会其他人上手，刚来公司还算新人的我这叫一个受宠若惊啊，心想这是什么福报【手动狗头】，周六加班的理由来了啊，然后周六肝了一天，去官网探索后整理出这么一份算是操作手册吧。</p><p>由于项目已经集成到项目中，所以下文主要展开怎么配置大屏，对于怎么集成以后有机会再做介绍。</p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><h4 id="其他大屏可视化工具"><a href="#其他大屏可视化工具" class="headerlink" title="其他大屏可视化工具"></a>其他大屏可视化工具</h4><p>由于不知道大家对大屏可视化的了解程度，所以先大概聊一下大屏可视化以及AJ-report有哪些优点，</p><p>可能大家已经了解市面上DataEase、Superset等，这些大屏可视化技术目的都是为了让数据展示的更加直观，重点数据一目了然。<br>当然各有优缺点，如付费，技术栈支持等。有兴趣的话可以自己去研究一下，我就不多做赘述。</p><p><a href="https://blog.csdn.net/shunshuntuo/article/details/123739448">大屏可视化—DataEase、AJ-report、Superset调研对比</a></p><p><a href="https://blog.csdn.net/weixin_38500689/article/details/121290545?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-121290545-blog-123739448.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-121290545-blog-123739448.pc_relevant_aa&utm_relevant_index=4">dataease、AJ-report大屏可视化工具对比</a></p><h4 id="AJ-Report优点"><a href="#AJ-Report优点" class="headerlink" title="AJ-Report优点"></a>AJ-Report优点</h4><p>接下来回到AJ-report，来看一下AJ-report有哪些优点，当然这也是我个人认为学习新技术比较重要的一点，官网的东西一般是最全的，并且比较有权威。</p><p><a href="https://ajreport.beliefteam.cn/report-doc/">AJ-report官网操作指南</a></p><p>我简单总结了一下五点：</p><ul><li><p>完全开源的BI平台</p><p><a href="https://zhuanlan.zhihu.com/p/152340660">BI平台</a> BI(Business Intelligence)，也就是商业智能。</p></li><li><p>多数据源支持</p><p>内置mysql、elasticsearch、kudu等多种驱动</p></li><li><p>组件丰富</p><p>大屏酷炫支持20种大屏组件/图表</p></li><li><p>最新最稳定的技术栈</p></li><li><p>设计简单</p><p><strong>三步轻松完成大屏设计：配置数据源—-&gt;写SQL配置数据集—-&gt;拖拽配置大屏</strong>，保存发布即可。</p><p>  实际这三步很好理解</p><p>  配置数据源就是连接数据库的意思</p><p>  —-&gt;写SQL配置数据集就是写sql语句查询想要的数据</p><p>  —-&gt;拖拽配置大屏就是搞个前端页面把查询的数据展示出来</p></li></ul><p>实际很多可视化流程思路都是类似的。 也就是说理解这个思路其他看板的配置也应该难不倒大家了。</p><p>  数据流程图：</p> <img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191749922-146783398.png" class=""><h3 id="报表设计"><a href="#报表设计" class="headerlink" title="报表设计"></a>报表设计</h3><p>下面聊一下如何设计。</p><p>也就是以上三步，我们就直接来设计页面看一下。</p><h4 id="配置数据源（连接数据库）"><a href="#配置数据源（连接数据库）" class="headerlink" title="配置数据源（连接数据库）"></a>配置数据源（连接数据库）</h4><ol><li><p>步骤</p><p>点击菜单栏数据源 -&gt; 新增 -&gt; 项目基础配置,然后进行简单配置即可</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191906001-129999431.png" class=""><ul><li>驱动类、连接串、用户名、密码必须填写正确。</li><li>只有测试通过的数据源才可以保存。</li></ul></li></ol><h4 id="配置数据集（查表）"><a href="#配置数据集（查表）" class="headerlink" title="配置数据集（查表）"></a>配置数据集（查表）</h4><ol><li><p>步骤</p><p>点击菜单栏数据集 -&gt; 新增 -&gt; 编辑数据集，填写数据源，数据集编码及名称，sql语句即可。</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191926832-623454467.png" class=""></li><li><p>注意</p><p>SQL数据集尽量不要使用 “select *”，以及展示很大的数据量，图表不一定能展示、页面可能会卡死</p></li><li><p>功能栏</p><ul><li>查询参数(扩展)</li><li>数据转换(扩展)</li><li>测试预览</li></ul></li></ol><h4 id="配置大屏或报表（渲染展示）"><a href="#配置大屏或报表（渲染展示）" class="headerlink" title="配置大屏或报表（渲染展示）"></a>配置大屏或报表（渲染展示）</h4><ol><li><p>添加报表</p><p> 点击报表管理数据 -&gt; 新增 -&gt; 报表管理，填写报表名称、编码、类型。</p><p> 注意报表编码唯一。</p> <img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191945273-633031838.png" class=""></li><li><p>设计大屏（进入设计大屏）</p><pre><code> 进入设计大屏其一：报表管理 -&gt; 列表操作栏 -&gt; 更多 -&gt; 设计可进入；其二：大屏报表 -&gt; 列表 -&gt;  设计图标可进入。设计空白页如下图有工具栏、图层、保存和配置栏等。 &#123;% asset_img 2291368-20220721192015456-1643726883.png  %&#125;</code></pre><p>   点击工具栏组件拖到中间设计屏幕，鼠标选中组件可以看到右边有具体组件的配置，数据绑定及位置坐标设置，进行具体设置即可。</p>  <img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192029555-1871185722.png" class=""></li><li><p>保存、预览、分享</p><p>点击预览即可进入大屏展示界面。</p><p>这个分享还是有点意思的，像百度网盘一样分享需要密码才能打开。</p><p>具体如图。</p><p>操作 - &gt; 更多 -&gt; 分享</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192358791-779277970.png" class=""><p>然后跳转到如下界面</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192408284-1212976555.png" class=""><p>点击创建链接</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192416373-1191184138.png" class=""><p>复制链接和分享码到浏览器打开时候就需要输入密码了。</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192426073-764010738.png" class=""><p>输入密码确认即可进入大屏了。</p></li></ol><h3 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h3><h4 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h4><p>支持多种文件上传，如图片、pdf、视频等。</p><h4 id="数据字典"><a href="#数据字典" class="headerlink" title="数据字典"></a>数据字典</h4><p>系统设置 -&gt; 数据字典 -&gt; 新增 -&gt; 填写配置</p><p>字典列表操作 -&gt; 更多 -&gt; 编辑字典项</p><h3 id="扩展"><a href="#扩展" class="headerlink" title="扩展"></a>扩展</h3><p>数据库伪数据</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191608294-1205959101.png" class=""><h4 id="查询参数"><a href="#查询参数" class="headerlink" title="查询参数"></a>查询参数</h4><blockquote><p>查询参数主要是针对 sql 中存在的动态参数，需要在后续的大屏使用时动态传入的时候做的操作。http 类型数据源支持改请求路径。请求头，请求体内容。</p></blockquote><p>如图所示，查询 sql 中，定义了两个变量，startTime 和 endTime。那需要我们在查询参数中添加对应的两个参数。 参数名保持和查询 sql 中 ${param} 保持一致。</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191652637-703350503.png" class=""><p>测试预览：（展示的数据就只有startTime 和 endTime这段时间的数据了）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">    &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class="line">    &quot;unsales&quot;: 0,</span><br><span class="line">    &quot;manus&quot;: 7,</span><br><span class="line">    &quot;id&quot;: 8,</span><br><span class="line">    &quot;rework&quot;: 1,</span><br><span class="line">    &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class="line">    &quot;sales&quot;: 7,</span><br><span class="line">    &quot;return&quot;: 0</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">  ...</span><br><span class="line">]</span><br></pre></td></tr></table></figure><h4 id="数据转换"><a href="#数据转换" class="headerlink" title="数据转换"></a>数据转换</h4><p>步骤：数据转换 -&gt; 新增 -&gt; (js脚本为例)</p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191538622-1742764931.png" class=""><p><strong>需求1：实现对brand字段进行拆分,例如 A-100 拆分为 A 和 100</strong></p><p>点击js脚本前小蜡笔图标编辑如下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">dataTransform</span>(<span class="params">data</span>)&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义脚本内容</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//1.遍历测试预览中的java.util.ArrayList&lt;java.lang.Object&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(j = <span class="number">0</span>, len = data.<span class="property">length</span>; j &lt; len; j++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//获取一行数据</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> row = data[j]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//比如对brand字段进行拆分,例如A-100，B-50</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> brand = row[<span class="string">&#x27;brand&#x27;</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> split = brand.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment">//新增两个字段</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> model = split[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> series = split[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment">//对原始对象赋值</span></span><br><span class="line"></span><br><span class="line">        dataj = model</span><br><span class="line"></span><br><span class="line">        dataj = series</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据转换后测试预览</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   &#123;</span><br><span class="line">     &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class="line">     &quot;unsales&quot;: 0,</span><br><span class="line">     &quot;manus&quot;: 7,</span><br><span class="line">     &quot;series&quot;: &quot;100&quot;,</span><br><span class="line">     &quot;model&quot;: &quot;A&quot;,</span><br><span class="line">     &quot;id&quot;: 8,</span><br><span class="line">     &quot;rework&quot;: 1,</span><br><span class="line">     &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class="line">     &quot;sales&quot;: 7,</span><br><span class="line">     &quot;return&quot;: 0</span><br><span class="line">   &#125;</span><br><span class="line"> ] </span><br></pre></td></tr></table></figure><p>   字典翻译(数据转换的一种，应该是官方封装好的脚本)</p><p><strong>需求2：”model”: “A”,转换为”model”: “A模型”,</strong></p><img src="/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191515359-510796598.png" class=""><p>数据转换+字典翻译后测试预览</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">  &#123;</span><br><span class="line">     &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class="line">     &quot;unsales&quot;: 0,</span><br><span class="line">     &quot;manus&quot;: 7,</span><br><span class="line">     &quot;series&quot;: &quot;100&quot;,</span><br><span class="line">     &quot;model&quot;: &quot;A模型&quot;,</span><br><span class="line">     &quot;id&quot;: 8,</span><br><span class="line">     &quot;rework&quot;: 1,</span><br><span class="line">     &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class="line">     &quot;sales&quot;: 7,</span><br><span class="line">     &quot;return&quot;: 0</span><br><span class="line">   &#125;</span><br><span class="line">] </span><br></pre></td></tr></table></figure><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>以上就是我关于此次分享全部内容。</p><p>当然因为水平和时间有限，如有不足之处，欢迎之后交流指正。</p><p>最后感谢各位的聆听。</p>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AJ-Report </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里云ECS服务器入门使用+宝塔安装使用</title>
      <link href="/2022/07/21/%E9%98%BF%E9%87%8C%E4%BA%91%20ECS%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8+%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/07/21/%E9%98%BF%E9%87%8C%E4%BA%91%20ECS%20%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%85%A5%E9%97%A8%E4%BD%BF%E7%94%A8+%E5%AE%9D%E5%A1%94%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>通过一篇技术文 看到 Alibaba Java 技术图谱，就点进去看看大佬都学了哪些东西以及进阶路线，于是就点开一个课程，提示我注册账号，顺手就注册一把，之前就留意有羊毛可以薅，不过都给错过了，一看新用户免费白嫖一个月多种服务任选。看到阿里云 云服务器ECS 可以白嫖一个月，参数都没看，果断直接点进来。订单如下。</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png)</p><p>接下来使用一个月来简单玩玩这个东西。</p><h2 id="初探索"><a href="#初探索" class="headerlink" title="初探索"></a>初探索</h2><p>首先留下两行血泪，选好cpu、内存、带宽，地域是非常重要的。其他可以默认选择。地域之前听说过买海外的不要备案，但是是白嫖就随便点了个华东地区，还要备案很头秃。</p><p><strong>1、登陆控制台</strong></p><p>其次探索一下登陆控制台，输入账号密码，进去看到服务界面，新手可能刚开始很蒙。</p><p>操作如下，点击左侧菜单，</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png)</p><p>点击购买的云服务器，</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png)</p><p>显示界面如图：</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png)</p><p><strong>2、简单配置</strong></p><p>首先点击实例，点击创建实例，选择区域，一定要选对地域才能看到服务器。</p><p>创建后可以尝试登录了，登录前有几个参数查看或者修改一下。</p><p>其一连接密码修改</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png)</p><p>其二操作系统查看一下是否是自己熟悉，停止运行的服务器，可以在更多配置修改。</p><p>其三添加常用安全组端口</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png)</p><p>建议直接点击快速添加把常用端口如 80，3306，6379，22 等添加上。</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png)</p><h2 id="连接搞机"><a href="#连接搞机" class="headerlink" title="连接搞机"></a>连接搞机</h2><h3 id="Alibaba-Cloud-Shell（显而易见阿里云命令行面板）"><a href="#Alibaba-Cloud-Shell（显而易见阿里云命令行面板）" class="headerlink" title="Alibaba Cloud Shell（显而易见阿里云命令行面板）"></a>Alibaba Cloud Shell（显而易见阿里云命令行面板）</h3><p>点击菜单栏云命令行<br>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png)</p><p>即可进入命令行界面<br>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png)</p><p>上传文件也很方便有图形化界面。</p><h3 id="xshell连接"><a href="#xshell连接" class="headerlink" title="xshell连接"></a>xshell连接</h3><h3 id="宝塔面板"><a href="#宝塔面板" class="headerlink" title="宝塔面板"></a>宝塔面板</h3><p><strong>1、宝塔安装</strong></p><p>服务器上安装宝塔，不用 Linux 命令行，直接可视化安装一些环境真的太爽了。</p><p>宝塔官网安装教程:<a href="https://www.bt.cn/admin/servers">https://www.bt.cn/admin/servers</a> 给出了详细教程，总结下来就简单三步</p><ul><li><p>注册宝塔账号</p></li><li><p>阿里云服务器上打开宝塔使用的安全组 8888 端口</p></li><li><p>服务器上安装宝塔</p><p>未安装宝塔之前使用xshell 或者阿里云命令行连接上服务器，输入<code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec </code>（Centos安装脚本 ，由于我的服务器安装的操作系统是Centos，接下来不在做说明，其他安装命令看宝塔官网安装教程）</p><p>下载完成后会有如下面板地址以及用户名和密码。打开网址输入用户名密码登陆即可。</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png)</p></li></ul><p><strong>2、宝塔使用</strong></p><p>打开网址输入用户名密码登陆后，会提示绑定宝塔面板以及界面化推荐下载到服务器上一些环境如MySQL，nodes，nginx，按提示操作即可。</p><p>登录后界面如图</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png)</p><h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><p>1、背景</p><p>前一天在宝塔面板如下位置修改了安全入口，然后忘记了。</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png)</p><p>2、报错</p><p><a href="http://1xx.xx.xx.xx:8888/%E5%8E%9F%E6%9D%A5%E5%AE%89%E5%85%A8%E5%85%A5%E5%8F%A3">http://1xx.xx.xx.xx:8888/原来安全入口</a></p><p>访问此修改前地址后报错：安全入口校验失败</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png)</p><p>3、解决方案</p><p>按照提示修改即可，就是连接上服务器输入<code>/etc/init.d/bt default</code>即可查看安全入口地址。</p><p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png)</p>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 阿里云 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows若依框架前后端项目分离部署（jar包+Nginx部署）</title>
      <link href="/2022/06/30/Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/"/>
      <url>/2022/06/30/Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="需求描述"><a href="#需求描述" class="headerlink" title="需求描述"></a>需求描述</h2><p>使用若依的前后端分离框架做的一个项目，想要部署到另外一台windows电脑（服务器）上，作为小白写一篇文档总结记录一下。</p><h2 id="电脑环境准备"><a href="#电脑环境准备" class="headerlink" title="电脑环境准备"></a>电脑环境准备</h2><ul><li>JDK1.8 </li><li>Nginx（注意配置，不要直接点击exe启动）</li><li>Redis服务（直接下载运行不设置服务也可以）</li><li>Mysql （或者直接打 jar 包时使用远程 sql 服务器地址）</li></ul><h2 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h2><ul><li><p>后端打 jar 包（由于已经配置好目录位置，========待补充如何配置=============）</p><p>cleany -&gt; package 然后到指定目录扎到 jar 包即可。</p><p><img src="Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630212505473-523791158.png"></p></li><li><p>前端打包</p><p>在package.json中配置，也可以使用编辑器如 Hbuilder -&gt; 运行 -&gt; 运行到终端 -&gt; npm run build </p><p><img src="Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630213440738-1103491974.png"></p><p>然后去目录下查看dist文件夹，这个文件夹得内容即是打包好的前端内容。</p><p><img src="Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630214014835-585689483.png"></p></li></ul><h2 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h2><p>将jar包和dist文件拷贝到部署电脑上</p><ul><li><p>启动数据库（如果使用本地数据库）</p></li><li><p>启动Redis服务</p></li><li><p>运行后台的jar包（<code>java -jar 后端jar包目录</code>）。</p></li><li><p>配置Nginx，启动Nginx。</p><p>将刚刚打好的前端包（dist文件夹）放在指定目录下，然后根据目录在Nginx中的配置文件进行配置。</p></li></ul><p>  <a href="https://blog.csdn.net/wwzmvp/article/details/121193609?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-121193609-blog-124827963.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-121193609-blog-124827963.pc_relevant_default&utm_relevant_index=6">IDEA打包jar包详尽流程</a></p><p>  <a href="https://blog.csdn.net/HJS1453100406/article/details/117469217">若依框架前后端项目分离部署（jar包+Nginx部署）</a></p><p>  <a href="https://blog.csdn.net/m0_60028455/article/details/124706441?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124706441-blog-117728822.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=2">云服务器部署前后端分离项目（若依）详细教程</a></p>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下Redis解压包安装及配置教程</title>
      <link href="/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Windows下Redis解压包安装及配置教程"><a href="#Windows下Redis解压包安装及配置教程" class="headerlink" title="Windows下Redis解压包安装及配置教程"></a>Windows下Redis解压包安装及配置教程</h1><h2 id="Redis下载及配置"><a href="#Redis下载及配置" class="headerlink" title="Redis下载及配置"></a>Redis下载及配置</h2><h3 id="下载redis"><a href="#下载redis" class="headerlink" title="下载redis"></a>下载redis</h3><p>Github下载地址：<a href="https://github.com/MicrosoftArchive/redis/releases">https://github.com/MicrosoftArchive/redis/releases</a></p><p>官网下载地址：<a href="https://redis.io/download/">https://redis.io/download/</a></p><h3 id="解压压缩包"><a href="#解压压缩包" class="headerlink" title="解压压缩包"></a>解压压缩包</h3><p>解压到自己的指定目录即可</p><h3 id="修改设置密码"><a href="#修改设置密码" class="headerlink" title="修改设置密码"></a>修改设置密码</h3><p>到配置文件中设置，就是 redis 安装路径下/redis.windows-service.conf 这个文件，注意不是另外一个易混淆文件redis.windows.conf。</p><img src="/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629182352439-1266648941.png" class="" title="2291368-20220629182352439-1266648941"><p>配置文件中如下图位置添加<br><code>requirepass 你想设置的密码</code></p><img src="/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629183153636-1436499922.png" class="" title="2291368-20220629183153636-1436499922"><h3 id="启动Redis服务端"><a href="#启动Redis服务端" class="headerlink" title="启动Redis服务端"></a>启动Redis服务端</h3><p>先临时直接双击<code>redis-server.exe</code>运行服务即可，当然此方案不好，会有问题，后续解决。</p><h3 id="连接Redis服务端"><a href="#连接Redis服务端" class="headerlink" title="连接Redis服务端"></a>连接Redis服务端</h3><p>双击<code>redis-cli.exe</code>进入界面，若配置文件配置了密码，输入密码连接，如果原本配置文件不配置密码的话输入<code>ping</code>命令收到<code>pong</code>表示连接成功了。</p><h2 id="将Redis设置成服务并开机自启"><a href="#将Redis设置成服务并开机自启" class="headerlink" title="将Redis设置成服务并开机自启"></a>将Redis设置成服务并开机自启</h2><h3 id="需求背景"><a href="#需求背景" class="headerlink" title="需求背景"></a>需求背景</h3><p>每次启动 redis 都要去到 Redis 安装目录下寻找 redis-server.exe 文件点击，很是麻烦。</p><p>另外启动后只要一关闭cmd窗口，redis服务就关闭了。也是一大头疼问题。</p><p>于是思考到可不可以跟其它服务一样能够开机自启？显然是可以的。</p><p>把 redis 设置为一个 windows 服务便可以解决此问题。</p><h3 id="Redis-设置为服务"><a href="#Redis-设置为服务" class="headerlink" title="Redis 设置为服务"></a>Redis 设置为服务</h3><p>进入redis文件夹，输入<code>redis-server.exe --service-install redis.windows.conf --loglevel verbose</code> 出现如下情况即将 Redis 设置为服务。</p><p>其中参数 –loglevel verbose表示记录日志等级</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\Environment\Redis-x64-5.0.14.1&gt;redis-server.exe --service-install redis.windows.conf --loglevel verbose</span><br><span class="line">[6924] 30 Jun 11:01:39.652 # Granting read/write access to &#x27;NT AUTHORITY\NetworkService&#x27; on: &quot;D:\Environment\Redis-x64-5.0.14.1&quot; &quot;D:\Environment\Redis-x64-5.0.14.1\&quot;</span><br><span class="line">[6924] 30 Jun 11:01:39.654 # Redis successfully installed as a service.</span><br></pre></td></tr></table></figure><h3 id="查看并设置-Redis-的服务"><a href="#查看并设置-Redis-的服务" class="headerlink" title="查看并设置 Redis 的服务"></a>查看并设置 Redis 的服务</h3><p>鼠标右键「任务栏」–&gt; 点击「任务管理器」–&gt; 选择「服务」选项 –&gt; 点击下方「打开服务」按钮，打开服务窗口之后就可以找到 Redis 的服务</p><img src="/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630111206363-1150534863.png" class=""><p>如果不想设置为自启动，如下将启动方式改为手动启动即可。</p><img src="/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630111940288-138478437.png" class=""><h3 id="开启与关闭-Redis-服务"><a href="#开启与关闭-Redis-服务" class="headerlink" title="开启与关闭 Redis 服务"></a>开启与关闭 Redis 服务</h3><p>在重启电脑之后，就可以直接在命令行操作 Redis 服务了</p><p>基本命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#开启服务 </span><br><span class="line">redis-server --service-start</span><br><span class="line"></span><br><span class="line">#关闭服务 </span><br><span class="line">redis-server --service-stop</span><br><span class="line"></span><br><span class="line">#卸载服务 </span><br><span class="line">redis-server --service-uninstall</span><br><span class="line"></span><br><span class="line">#服务重命名 </span><br><span class="line">redis-server --service-name server-name</span><br></pre></td></tr></table></figure><p><strong>4、扩展</strong></p><ul><li><p>其他操作系统 Redis 启动设置</p><p> 参考文章：<a href="https://blog.csdn.net/FZlion/article/details/109535797?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2~default~CTRLIST~Paid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.pc_relevant.none-task-download-2~default~CTRLIST~Paid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&utm_relevant_index=2">centos7 源码安装redis设置开机自启</a></p></li><li><p>Redis主从服务安装（待扩展）  </p><p>主从服务可以实现负载均衡，其实就是把上面Redis安装文件包，拷贝到相应目录，修改主、从服务器配置文件中IP、Port，同时从服务器要指定主服务器 的IP、Port，按照Redis自定义服务安装中命令进行服务安装、服务启动、服务关闭、服务卸载即可使用。</p></li></ul><h2 id="可视化工具RedisDesktopManager"><a href="#可视化工具RedisDesktopManager" class="headerlink" title="可视化工具RedisDesktopManager"></a>可视化工具RedisDesktopManager</h2><h3 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h3><p>官网下载：<a href="https://redisdesktop.com/download">https://redisdesktop.com/download</a></p><p>github地址：<a href="https://github.com/uglide/RedisDesktopManager/releases">https://github.com/uglide/RedisDesktopManager/releases</a></p><p>不过由于目前收费，需要可以去找一下网盘安装包</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>点击下载的 exe 文件，傻瓜式安装，下一步即可。</p><h3 id="创建连接"><a href="#创建连接" class="headerlink" title="创建连接"></a>创建连接</h3><p>在创建连接前注意检查一下自己的 Redis 是否开启。开启后如下图可视化连接即可。</p><img src="/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630140021409-1360003831.png" class=""><h3 id="其他可视化工具"><a href="#其他可视化工具" class="headerlink" title="其他可视化工具"></a>其他可视化工具</h3><p><a href="https://www.jianshu.com/p/721c3762a777">Redis可视化工具</a></p>]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下Maven安装及配置教程</title>
      <link href="/2022/06/30/Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2022/06/30/Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ol><li><p>下载(本文下载的是zip文件)</p><p>官网下载：<a href="https://maven.apache.org/download.cgi">https://maven.apache.org/download.cgi</a></p><p>下载完成后解压到指定目录下即可。</p></li><li><p>配置</p><ul><li><p>配置本地仓库</p><p>默认本地仓库是C盘，修改到指定文件夹下。注意Maven的核心配置文件：<code>conf/settings.xml</code></p><p>打开添加如图如下代码即可</p><p><img src="Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-06-50.png" alt="Snipaste_2022-05-13_09-06-50"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--配置Maven本地仓库--&gt;</span><br><span class="line">&lt;localRepository&gt;F:\ProDocument\common\maven-repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置阿里云提供的镜像仓库</p><p>注：Maven默认中央仓库的id 为 central。id是唯一的。因此使用&lt; id&gt;central&lt; /id&gt;覆盖了默认的中央仓库。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;</span><br><span class="line">    &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class="line">    &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class="line">    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置java版本</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;profiles&gt;</span><br><span class="line">    &lt;profile&gt;</span><br><span class="line">    &lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class="line">      &lt;activation&gt;</span><br><span class="line">        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">            &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">      &lt;/activation&gt;</span><br><span class="line">      &lt;properties&gt;   </span><br><span class="line">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">     &lt;/properties&gt;</span><br><span class="line">    &lt;/profile&gt;</span><br><span class="line">&lt;/profiles&gt;</span><br></pre></td></tr></table></figure></li><li><p>settings.xml</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">     </span><br><span class="line">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class="line">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class="line">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class="line">     </span><br><span class="line">  &lt;!--配置Maven本地仓库--&gt;</span><br><span class="line">  &lt;localRepository&gt;F:\ProDocument\common\maven-repository&lt;/localRepository&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;mirrors&gt;</span><br><span class="line">    &lt;!-- 阿里云镜像 --&gt;</span><br><span class="line">    &lt;mirror&gt;</span><br><span class="line">      &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class="line">      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class="line">      &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class="line">      &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class="line">    &lt;/mirror&gt;</span><br><span class="line">  &lt;/mirrors&gt;</span><br><span class="line">     </span><br><span class="line">  &lt;profiles&gt;</span><br><span class="line">    &lt;!-- Java版本 --&gt;</span><br><span class="line">    &lt;profile&gt;</span><br><span class="line">    &lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class="line">      &lt;activation&gt;</span><br><span class="line">        &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class="line">            &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class="line">      &lt;/activation&gt;</span><br><span class="line">      &lt;properties&gt;   </span><br><span class="line">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class="line">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class="line">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class="line">     &lt;/properties&gt;</span><br><span class="line">    &lt;/profile&gt;</span><br><span class="line">    </span><br><span class="line">  &lt;/profiles&gt;</span><br><span class="line">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li><li><p>配置环境变量</p><p>首先Maven是一个用java语言开发的程序，它必须基于JDK来运行，需要通过JAVA_HOME来找到JDK的安装位置。因此需要配置好Java环境。</p><p>其次配置<code>MAVEN_HOME</code>中</p><p><img src="Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-15-10.png" alt="Snipaste_2022-05-13_09-15-10"></p><p>Path路径下配置%MAVEN_HOME\bin;</p><p><img src="Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-18-05.png" alt="Snipaste_2022-05-13_09-18-05"></p></li></ul></li><li><p>验证</p><p> cmd 命令行输入<code>mvn -version</code>（-v缩写）出现如下情况即验证成功。</p><p> <img src="Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_10-23-28.png" alt="Snipaste_2022-05-13_10-23-28"></p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\pc&gt;mvn -version</span><br><span class="line">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class="line">Maven home: D:\Environment\apache-maven-3.6.3\bin\..</span><br><span class="line">Java version: 1.8.0_281, vendor: Oracle Corporation, runtime: D:\Environment\Java\jdk1.8.0_281\jre</span><br><span class="line">Default locale: zh_CN, platform encoding: GBK</span><br><span class="line">OS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下Java开发环境安装与配置教程</title>
      <link href="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
      <url>/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<ol><li><p>下载安装包</p><p><a href="https://www.oracle.com/java/technologies/downloads/">https://www.oracle.com/java/technologies/downloads/</a></p></li><li><p>双击exe文件进入安装</p></li><li><p>选择指定目录安装jdk</p><img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193030780-141851887.png" class=""></li><li><p>选择指定目录安装jre</p><img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193051710-860567096.png" class=""></li><li><p>安装完成</p><img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193111863-1620087635.png" class=""></li><li><p>配置环境变量</p><ul><li>我的电脑右击，再点击属性找到高级系统设置，再点击环境变量进行配置。</li></ul><img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193139564-1366743433.png" class=""><ul><li>配置 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">变量名：JAVA_HOME</span><br><span class="line">变量值：D:\Environment\Java\jdk1.8.0_281   // 要根据自己的实际路径配置</span><br><span class="line">      </span><br><span class="line">变量名：Path</span><br><span class="line">变量值：%JAVA_HOME%\bin;%JAVA_HOME%\jre\bin;</span><br></pre></td></tr></table></figure> <img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193204294-338728882.png" class=""></li></ul></li></ol><ol start="7"><li><p>测试</p><p>windows键+R键，键入cmd；</p><p>键入命令: java -version、java、javac 几个命令，出现以下信息，说明环境变量配置成功；</p><img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193230336-1133392836.png" class=""><img src="/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193243736-1465458166.png" class=""></li></ol>]]></content>
      
      
      <categories>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微PE制作U盘启动盘教程</title>
      <link href="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/"/>
      <url>/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p><strong>第一步：制作前期准备</strong></p><ul><li><p>16 GB 以上的U盘</p></li><li><p>微 PE 工具箱 exe 文件</p></li><li><p>系统镜像（官方渠道/MSDN）</p></li></ul><p><a href="https://www.wepe.com.cn/download.html">微PE官网</a><br>如下图所示下载微 PE 工具箱 exe 文件本地</p><img src="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215929483-1525301003.png" class=""><p><a href="https://msdn.itellyou.cn/">MSDN 镜像下载</a></p><p>建议采用哈希比对下载，直接下载到 U 盘里，防止文件下载等传输出错，下载完成后然后进行哈希比对。</p><img src="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220059511-1290163714.png" class=""><img src="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220127585-1741352083.png" class=""><p><strong>第二步：制作U盘启动盘</strong></p><p>双击 exe 文件</p><img src="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215951418-741813094.png" class=""><p>设置安装方式（本文选取安装到 U 盘）</p><img src="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215959604-689320937.png" class=""><p>进行简单设置，安装即可。</p><img src="/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220047549-1268062378.png" class="">]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微PE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下mysql8.0解压版安装配置方法图文教程</title>
      <link href="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/"/>
      <url>/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="mysql8-0-29winx64解压安装"><a href="#mysql8-0-29winx64解压安装" class="headerlink" title="mysql8.0.29winx64解压安装"></a>mysql8.0.29winx64解压安装</h2><ol><li><p>下载安装包</p><p>下载链接：<a href="https://dev.mysql.com/downloads/mysql/">https://dev.mysql.com/downloads/mysql/</a></p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624110939600-1386441975.png" class=""><p>不登陆注册直接下载。</p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111124820-511486595.png" class=""><p>想下载往期版本可以选择指定版本瞎下载:<a href="https://downloads.mysql.com/archives/community/">https://downloads.mysql.com/archives/community/</a></p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624131402573-1864608199.png" class=""></li></ol><ol start="2"><li><p>下载后的压缩文件解压到指定目录（注意路径不要带空格或者汉字，否则容易报错）</p></li><li><p>配置环境变量</p><p>找到mysql下的bin目录如!</p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111431587-147049396.png" class=""><p>在我的电脑，右击属性找到高级系统设置==》系统变量的path中配置如下。</p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111449065-658791468.png" class=""></li></ol><ol start="4"><li><p>Windows+R键盘进入命令行(注意最好是以管理员身份进入，不然下面可能报错)，并切换到bin目录下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">C:\WINDOWS\system32&gt;d:</span><br><span class="line"></span><br><span class="line">D:\&gt;cd D:\Environment\mysql-8.0.29\bin</span><br></pre></td></tr></table></figure><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111210435-1959209711.png" class=""></li></ol><blockquote><p>在MySQL解压路径下，新建my.ini 配置初始化参数：(查看网上好多教程有此步骤，但是个人选择忽略了此步骤，无伤大雅)</p></blockquote><pre><code><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">[mysql]</span><br><span class="line"></span><br><span class="line"># 设置mysql客户端默认字符集</span><br><span class="line"></span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line"></span><br><span class="line">#设置3306端口</span><br><span class="line"></span><br><span class="line">port = 3306</span><br><span class="line"></span><br><span class="line"># 设置mysql的安装目录</span><br><span class="line"></span><br><span class="line">basedir=D:\Java\mysql-xxx</span><br><span class="line"></span><br><span class="line"># 设置mysql数据库的数据的存放目录</span><br><span class="line"></span><br><span class="line">datadir=D:\Java\mysql-xxx\data</span><br><span class="line"></span><br><span class="line"># 允许最大连接数</span><br><span class="line"></span><br><span class="line">max_connections=200</span><br><span class="line"></span><br><span class="line"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class="line"></span><br><span class="line">character-set-server=utf8</span><br><span class="line"></span><br><span class="line"># 创建新表时将使用的默认存储引擎</span><br><span class="line"></span><br><span class="line">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure></code></pre><ol start="5"><li><p>命令行初始化，命令行下载</p><p>注意如果不是管理员身份进入命令行，install会报错 Service successfully installed.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">D:\Environment\mysql-8.0.29\bin&gt;mysqld --install</span><br><span class="line">Service successfully installed.</span><br></pre></td></tr></table></figure><p>命令行初始化</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">D:\Environment\mysql-8.0.29\bin&gt;mysqld --initialize --console</span><br></pre></td></tr></table></figure><p>注意记住这个临时密码，后面会用到;</p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111536255-363256586.png" class=""><p> 可能报错：<code>initialize specified but the data directory has files in it. Aborting</code></p><p> 原因：初始化时可能会初始化多次，或者原本拷贝的解压包data已经有数据。</p><p> 暴力方案：将目录mysql/data目录下内容暴力删除后即可。</p></li></ol><ol start="6"><li><p>启动</p><p><code>net start mysql</code>可能报错’net’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。</p><p>解决方案：</p><p>首先确认C:\Windows\System32这个目录下面是否存在net.exe文件，如果有，去配置环境变量，用户变量path中添加如下<code>%SystemRoot%\system32</code></p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111609438-1454013709.png" class=""></li><li><p>临时密码登录并修改密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\Environment\mysql-8.0.29\bin&gt;mysql -u root -p</span><br><span class="line">Enter password: ************     #输入临时密码</span><br><span class="line"></span><br><span class="line">mysql&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure><p>补充查阅其他资料有的说，与5.X版本不同，8已经不支持PASSWORD()方法，若报错可采用如下，未报错直接忽略。</p><p>注意8.0建议使用下面修改方式，已验证，否则后面客户端DBeaver连接会报错 [Bug0045] <code>Public Key Retrieval is not allowed </code></p><p><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;</code></p></li><li><p>登录成功</p><img src="/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111630877-1836009720.png" class=""></li></ol><ol start="8"><li><p>可视化工具连接</p><p>Navicat   DBeaver  SQLyong  后续讲解安装破解。</p></li></ol>]]></content>
      
      
      <categories>
          
          <category> 环境 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dell Vostro 5568型号笔记本电脑更换电池教程</title>
      <link href="/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/"/>
      <url>/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h2 id="前期准备"><a href="#前期准备" class="headerlink" title="前期准备"></a>前期准备</h2><p>拆机工具：小型的十字螺丝刀（购买电池时可以考虑咨询店家是否附赠）</p><p>新电池： <strong>注意购买前注意查看自己电脑型号</strong></p><p>如何查看电脑型号？</p><p>方法一，在搜索栏里输入dxdiag，点击确定，页面中所显示的系统型号即为电脑型号。</p><p>方法二，使用快捷键Windows+R，在搜索栏输入cmd，点击确定，直接在页面输入<code>systeminfo</code>回车即可出现系统型号。</p><h2 id="更换步骤"><a href="#更换步骤" class="headerlink" title="更换步骤"></a>更换步骤</h2><p>关机，拔掉所有外部设备（使用无线鼠的注意无线鼠标接收器）将笔记本翻过来。</p><p>开始拆卸后盖，拧松固定螺丝，<strong>注意有的螺丝拧松就好</strong>，是拧不出来的。</p><img src="/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211144391-144641139.jpg" class=""><p>然后用卡片，将后盖咬合的卡扣划开，然后揭开后盖，<strong>注意不要生掰</strong>。</p><p>拆开后效果</p><img src="/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211447243-2064752888.jpg" class=""><p>可以看到自己的电池明显鼓包。对比新买电池如下图可以看出老电池用的多暴力了。目前老电池残余电量拔掉电源电脑三秒钟必定关机。</p><img src="/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211352284-96900639.jpg" class=""><p>拆出旧电池，首先断开电池与电脑主板的连接，将电池上的连接线从主要上连接槽拔出，拆卸螺丝，取下电池。</p><img src="/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211907063-2100004146.jpg" class=""><p>连接线换到新电池上并装回电脑指定位置。此处有坑，下文细讲。尽量连接电池前按住电源键放电几秒钟。</p><img src="/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211750061-803600409.jpg" class=""><p>然后复原即可插上电源开机查看电池情况。<br><a href="https://www.cnblogs.com/Code-Rain/p/15916422.html">查看电池情况</a></p><h2 id="踩坑"><a href="#踩坑" class="headerlink" title="踩坑"></a>踩坑</h2><p>换电池后无法开机，插上电源显示灯正常亮。</p><p>查阅网上方案类似现象</p><p>现象：按下电源开关键之后电源灯都不亮，但是充电指示灯亮着。</p><p>原因：主板不通电。</p><p>方案：释放静电尝试，去除电脑的电池和电源线，确保笔记本处于完全不通电状态，重复按电源开关几次，每次持续按住10秒，接上电源尝试开机，然后能正常开机了。</p>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑维修 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github免费搭建博客教程</title>
      <link href="/2022/05/31/Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/"/>
      <url>/2022/05/31/Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Hexo-Github免费搭建博客教程"><a href="#Hexo-Github免费搭建博客教程" class="headerlink" title="Hexo+Github免费搭建博客教程"></a>Hexo+Github免费搭建博客教程</h1><h2 id="下载安装node-js"><a href="#下载安装node-js" class="headerlink" title="下载安装node.js"></a>下载安装node.js</h2><p>在<a href="https://nodejs.org/zh-cn/">node.js官网</a>下载安装包安装即可。</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233223642-349131297.png"></p><p>Win键+R输入cmd进入命令窗口输入node  -v(注意-v前有个空格)，如图若出现node版本信息，则安装成功。</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233240621-744853097.png"></p><h2 id="注册GitHub"><a href="#注册GitHub" class="headerlink" title="注册GitHub"></a>注册GitHub</h2><p>在<a href="https://github.com/">github官网</a>注册登录即可</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233317633-390444962.png"></p><h3 id="创建第一个github仓库"><a href="#创建第一个github仓库" class="headerlink" title="创建第一个github仓库"></a>创建第一个github仓库</h3><p>如图：1创建&gt;2命名&gt;3勾选&gt;4create即可</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233337883-596107071.png"></p><p><strong>待完善</strong></p><p><strong>待完善</strong></p><hr><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><p>在<a href="https://gitforwindows.org/">git for windows</a>下载安装即可</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233356912-836859301.png"></p><p>##四、GitHub的ssh配置</p><p>打开git bash，输入如下命令</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; </span><br></pre></td></tr></table></figure><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233422511-823096424.png"></p><p>如图执行这条命令，会产生下图两个文件</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233443240-218493205.png"></p><p>打开GitHub，新建ssh key</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233458824-948378071.png"></p><p>打开.ssh目录下的id_rsa.pub文件，复制里面的内容，到github如下所示SSH key的信息，添加即可。</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233522724-1594630480.png"></p><h2 id="hexo的使用"><a href="#hexo的使用" class="headerlink" title="hexo的使用"></a>hexo的使用</h2><p>新建Blog文件夹(自己任意设置)，装载hexo到E盘Blog文件夹下</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233545215-1500378559.png"></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">C:\<span class="title">Users</span>\<span class="title">Li</span>&gt;<span class="title">E</span>:      //切换到<span class="title">E</span>盘，自行选择装在盘符地址</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\&gt;<span class="title">cd</span> <span class="title">Blog</span>//切换到<span class="title">Blog</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\<span class="title">Blog</span>&gt;<span class="title">npm</span> <span class="title">install</span> <span class="title">hexo</span>-<span class="title">cli</span> -<span class="title">g</span>   //下载<span class="title">hexo</span>命令</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">$ <span class="title">hexo</span> <span class="title">init</span> <span class="title">CodedogWorld</span></span></span><br></pre></td></tr></table></figure><p>安装成功如图</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233607522-1071796197.png"></p><p>执行以下代码</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">E:\<span class="title">Blog</span>&gt;<span class="title">cd</span> <span class="title">CodedogWorld</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>&gt;<span class="title">npm</span> <span class="title">install</span>    //安装依赖</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>&gt;<span class="title">hexo</span> <span class="title">s</span> -<span class="title">p</span> 5555    </span></span><br></pre></td></tr></table></figure><p>结果如图</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233627278-280180249.png"></p><p>浏览器输入<a href="http://localhost:5555/%E5%87%BA%E7%8E%B0%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%8C%E5%88%99%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E3%80%82">http://localhost:5555/出现如下图，则搭建成功。</a></p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233644620-1741914965.png"></p><p>ps:</p><p><a href="https://hexo.io/zh-cn/docs/">hexo官网</a>，官网文档有安装步骤。</p><p><a href="">参考视频</a></p><p><a href="https://www.cnblogs.com/zjfjava/p/10080569.html">参考博客</a></p><h2 id="代码编辑器安装及修改博客内容"><a href="#代码编辑器安装及修改博客内容" class="headerlink" title="代码编辑器安装及修改博客内容"></a>代码编辑器安装及修改博客内容</h2><p><strong>待补充</strong></p><p><strong>待补充</strong></p><hr><p>配置   <a href="https://hexo.io/docs/one-command-deployment">相关文档</a></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type: git                //注意git前空格 </span><br><span class="line">repo：https://github.com/CodedogWorld/CodedogWorld.github.io.git</span><br></pre></td></tr></table></figure><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233729477-1011260416.png"></p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233742049-1219964528.png"></p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233757896-1394280158.png"></p><h2 id="hexo发布到github"><a href="#hexo发布到github" class="headerlink" title="hexo发布到github"></a>hexo发布到github</h2><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">E:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>&gt;<span class="title">hexo</span> <span class="title">g</span></span></span><br></pre></td></tr></table></figure><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233817728-1392655527.png"></p><p>报错</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">E:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>&gt;<span class="title">hexo</span> <span class="title">d</span></span></span><br><span class="line"><span class="function"><span class="title">INFO</span>  <span class="title">Validating</span> <span class="title">config</span></span></span><br><span class="line"><span class="function"><span class="title">ERROR</span> <span class="title">Deployer</span> <span class="title">not</span> <span class="title">found</span>: <span class="title">git</span></span></span><br></pre></td></tr></table></figure><p>修复问题(下端口)</p><p><a href="https://hexo.io/docs/one-command-deployment">Git文档</a></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">E:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>&gt;<span class="title">hexo</span> <span class="title">g</span>     //生成静态文件</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"><span class="title">E</span>:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>&gt;<span class="title">hexo</span> <span class="title">d</span>    //文件生成后立即部署网站</span></span><br></pre></td></tr></table></figure><p>成功运行</p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233838933-422483785.png"></p><h2 id="next主题使用"><a href="#next主题使用" class="headerlink" title="next主题使用"></a>next主题使用</h2><p><a href="http://theme-next.iissnan.com/getting-started.html">next使用教程</a></p><p><strong>为NexT主题添加文章阅读量统计功能</strong></p><p>标签分类关于页面创建</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo n page tags    <span class="comment">#标签页面创建</span></span><br><span class="line">hexo n page categories     <span class="comment">#分类页面创建</span></span><br><span class="line">hexo n page about       <span class="comment">#关于页面创建</span></span><br></pre></td></tr></table></figure><p>然后分别在各自md文件中加入</p><figure class="highlight md"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br><span class="line">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure><h2 id="博客创建"><a href="#博客创建" class="headerlink" title="博客创建"></a>博客创建</h2><p>命令行输入如下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;markdown语法&quot;</span><br></pre></td></tr></table></figure><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531234214780-944416990.png"></p><p>删除已经创建或者创建错误的博客</p><ol><li>到目录/source/_posts下删除相应的文章</li><li>$ hexo g</li><li>$ hexo d</li></ol><h2 id="hexo问题"><a href="#hexo问题" class="headerlink" title="hexo问题"></a>hexo问题</h2><p><strong>问题1：</strong></p><blockquote><p>Accessing non-existent property ‘column’ of module exports inside circular dependency</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">(node:22132) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class="line">(node:22132) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:22132) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class="line">(node:22132) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class="line">(node:22132) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class="line">(node:22132) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br></pre></td></tr></table></figure><p><strong>方案</strong>:</p><p><strong>问题2：</strong></p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARN  Since language_switcher is turned on, the caching is disabled to avoid potential hazards.</span><br></pre></td></tr></table></figure><p><strong>问题3</strong>：</p><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">err: <span class="title">Error</span>: <span class="title">Spawn</span> <span class="title">failed</span></span></span><br><span class="line"><span class="function">     <span class="title">at</span> <span class="title">ChildProcess</span>.&lt;<span class="title">anonymous</span>&gt; (<span class="title">E</span>:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>\<span class="title">node_modules</span>\<span class="title">hexo</span>-<span class="title">util</span>\<span class="title">lib</span>\<span class="title">spawn.js</span>:51:21)</span></span><br><span class="line"><span class="function">     <span class="title">at</span> <span class="title">ChildProcess.emit</span> (<span class="title">events.js</span>:315:20)</span></span><br><span class="line"><span class="function">     <span class="title">at</span> <span class="title">ChildProcess.cp.emit</span> (<span class="title">E</span>:\<span class="title">Blog</span>\<span class="title">CodedogWorld</span>\<span class="title">node_modules</span>\<span class="title">cross</span>-<span class="title">spawn</span>\<span class="title">lib</span>\<span class="title">enoent.js</span>:34:29)</span></span><br><span class="line"><span class="function">     <span class="title">at</span> <span class="title">Process.ChildProcess._handle.onexit</span> (<span class="title">internal</span>/<span class="title">child_process.js</span>:277:12) &#123;</span></span><br><span class="line"><span class="function">   <span class="title">code</span>: 128</span></span><br></pre></td></tr></table></figure><p><strong>原因</strong>:</p><blockquote><p>因为<code>git</code>进行<code>push</code>或者<code>hexo d</code>的时候改变了一些<code>.deploy_git</code>文件下的内容</p></blockquote><p><strong>方案</strong>:</p><blockquote><ol><li>删除<code>.deploy_git</code>文件夹;</li><li>输入<code>git config --global core.autocrlf false</code></li><li>然后，依次执行：<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></li></ol></blockquote><p><strong>问题4</strong></p><p><img src="Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531234251609-427743523.png" alt="谷歌无法访问"></p><p>原因：谷歌搜索引擎问题</p><p>解决方案：</p><p>设置&gt;管理搜索引擎&gt;更换百度搜索引擎</p><p><a href="https://blog.csdn.net/qq_36667170/article/details/118163563">换电脑后怎么迁移hexo博客？</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA2021.3安装及破解教程</title>
      <link href="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/"/>
      <url>/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="IDEA2021-3安装及破解"><a href="#IDEA2021-3安装及破解" class="headerlink" title="IDEA2021_3安装及破解"></a>IDEA2021_3安装及破解</h1><h2 id="下载安装包"><a href="#下载安装包" class="headerlink" title="下载安装包"></a>下载安装包</h2><p><a href="https://www.jetbrains.com/idea/download/other.html">历史版本下载链接</a><br>如下选择2021.3版本下载即可。</p><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164251511-317252381.png" class=""><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164525444-1888185146.png" class=""><p>中间步骤省略，下一步或者install选择默认即可。</p><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164533939-754309439.png" class=""><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>具体破解安装包见文末参考链接。</p><p>复制补丁文件夹到硬盘某个位置且后期位置不在移动。打开文件夹后，目录下的ja-netfilter.jar 为激活补丁</p><p>接下来破解步骤有</p><p>首先点击此脚本</p><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825152816881-2076432223.png" class=""><p>其次引用激活补丁<br>进入 IDEA 的安装目录，进入 /bin 目录下，修改 idea64.exe.vmoptions 配置文件：</p><p>文件中加入如下代码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 补丁的绝对路径（可根据你实际的位置进行修改）,注意路径一定要填写正确，且不能包含中文，否则会导致 IDEA 无法启动</span><br><span class="line"># 实际路径 ：D:\Software\ProSoftware\JetBrains\ja-netfilter 注意 /</span><br><span class="line">-javaagent:D:/Software/ProSoftware/JetBrains/ja-netfilter/ja-netfilter.jar</span><br><span class="line"></span><br><span class="line"># 最新 IDEA 版本需要添加下面两行，否则会报 key valid</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class="line">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br></pre></td></tr></table></figure><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825153608481-312323332.png" class=""><p>再次打开idea填写指定激活码完成激活。</p><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825152855385-1081507081.png" class=""><p>激活后如图展示</p><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825154015874-1170150107.png" class=""><p>关闭即可。</p><p>再次打开效果如图即破解成功。</p><img src="/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509165538782-356118260.png" class=""><p><a href="https://www.exception.site/essay/how-to-free-use-idea-202021-by-resigter-code">参考文章</a></p>]]></content>
      
      
      <categories>
          
          <category> 工具IDE </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>房屋出租系统【韩顺平 Java 基础案例复现】</title>
      <link href="/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/"/>
      <url>/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/</url>
      
        <content type="html"><![CDATA[<p>本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。<span id="more"></span></p><h1 id="房屋出租系统【韩顺平-Java-基础案例复现】"><a href="#房屋出租系统【韩顺平-Java-基础案例复现】" class="headerlink" title="房屋出租系统【韩顺平 Java 基础案例复现】"></a>房屋出租系统【韩顺平 Java 基础案例复现】</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。</p><h2 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h2><p>实现房屋出租系统，基本功能包括对房屋信息的增删改查（存储用数组实现）。</p><h2 id="项目设计-程序框架图"><a href="#项目设计-程序框架图" class="headerlink" title="项目设计-程序框架图"></a>项目设计-程序框架图</h2><img src="/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/2291368-20220227144414328-1953458094.png" class="" title="2291368-20220227144414328-1953458094"><h2 id="项目代码实现"><a href="#项目代码实现" class="headerlink" title="项目代码实现"></a>项目代码实现</h2><h3 id="文件夹结构"><a href="#文件夹结构" class="headerlink" title="文件夹结构"></a>文件夹结构</h3><img src="/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/2291368-20220227160905796-630586732.png" class="" title="2291368-20220227160905796-630586732"><h3 id="工具类准备"><a href="#工具类准备" class="headerlink" title="工具类准备"></a>工具类准备</h3><p>这里的 Utility 类是韩顺平Utility工具类(java房屋出租项目)，创建工具类文件复制到自己的项目里即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.codedog.houserent.utils;    <span class="comment">//改为自己的目录</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">工具类的作用:</span></span><br><span class="line"><span class="comment">处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Utility</span> &#123;</span><br><span class="line"><span class="comment">//静态属性。。。</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 1——5</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readMenuSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">false</span>);<span class="comment">//包含一个字符的字符串</span></span><br><span class="line">            c = str.charAt(<span class="number">0</span>);<span class="comment">//将字符串转换成字符char类型</span></span><br><span class="line">            <span class="keyword">if</span> (c != <span class="string">&#x27;1&#x27;</span> &amp;&amp; c != <span class="string">&#x27;2&#x27;</span> &amp;&amp; </span><br><span class="line">                c != <span class="string">&#x27;3&#x27;</span> &amp;&amp; c != <span class="string">&#x27;4&#x27;</span> &amp;&amp; c != <span class="string">&#x27;5&#x27;</span>) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能：读取键盘输入的一个字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 一个字符</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readChar</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">false</span>);<span class="comment">//就是一个字符</span></span><br><span class="line">        <span class="keyword">return</span> str.charAt(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultValue 指定的默认值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 默认值或输入的字符</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readChar</span><span class="params">(<span class="type">char</span> defaultValue)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">true</span>);<span class="comment">//要么是空字符串，要么是一个字符</span></span><br><span class="line">        <span class="keyword">return</span> (str.length() == <span class="number">0</span>) ? defaultValue : str.charAt(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能：读取键盘输入的整型，长度小于10位</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 整数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">readInt</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">10</span>, <span class="literal">false</span>);<span class="comment">//一个整数，长度&lt;=10位</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = Integer.parseInt(str);<span class="comment">//将字符串转换成整数</span></span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultValue 指定的默认值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 整数或默认值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span> <span class="title function_">readInt</span><span class="params">(<span class="type">int</span> defaultValue)</span> &#123;</span><br><span class="line">        <span class="type">int</span> n;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">10</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">if</span> (str.equals(<span class="string">&quot;&quot;</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//异常处理...</span></span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                n = Integer.parseInt(str);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能：读取键盘输入的指定长度的字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> limit 限制的长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 指定长度的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readString</span><span class="params">(<span class="type">int</span> limit)</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> readKeyBoard(limit, <span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> limit 限制的长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> defaultValue 指定的默认值</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span> 指定长度的字符串</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> String <span class="title function_">readString</span><span class="params">(<span class="type">int</span> limit, String defaultValue)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(limit, <span class="literal">true</span>);</span><br><span class="line">        <span class="keyword">return</span> str.equals(<span class="string">&quot;&quot;</span>)? defaultValue : str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 功能：读取键盘输入的确认选项，Y或N</span></span><br><span class="line"><span class="comment"> * 将小的功能，封装到一个方法中.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> Y或N</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">char</span> <span class="title function_">readConfirmSelection</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入你的选择(Y/N): 请小心选择&quot;</span>);</span><br><span class="line">        <span class="type">char</span> c;</span><br><span class="line">        <span class="keyword">for</span> (; ; ) &#123;<span class="comment">//无限循环</span></span><br><span class="line">        <span class="comment">//在这里，将接受到字符，转成了大写字母</span></span><br><span class="line">        <span class="comment">//y =&gt; Y n=&gt;N</span></span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> readKeyBoard(<span class="number">1</span>, <span class="literal">false</span>).toUpperCase();</span><br><span class="line">            c = str.charAt(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span> || c == <span class="string">&#x27;N&#x27;</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 功能： 读取一个字符串</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> limit 读取的长度</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> blankReturn 如果为true ,表示 可以读空字符串。 </span></span><br><span class="line"><span class="comment">     *   如果为false表示 不能读空字符串。</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment"> *如果输入为空，或者输入大于limit的长度，就会提示重新输入。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String <span class="title function_">readKeyBoard</span><span class="params">(<span class="type">int</span> limit, <span class="type">boolean</span> blankReturn)</span> &#123;</span><br><span class="line">        </span><br><span class="line"><span class="comment">//定义了字符串</span></span><br><span class="line"><span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//scanner.hasNextLine() 判断有没有下一行</span></span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextLine()) &#123;</span><br><span class="line">            line = scanner.nextLine();<span class="comment">//读取这一行</span></span><br><span class="line">           </span><br><span class="line"><span class="comment">//如果line.length=0, 即用户没有输入任何内容，直接回车</span></span><br><span class="line"><span class="keyword">if</span> (line.length() == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (blankReturn) <span class="keyword">return</span> line;<span class="comment">//如果blankReturn=true,可以返回空串</span></span><br><span class="line">                <span class="keyword">else</span> <span class="keyword">continue</span>; <span class="comment">//如果blankReturn=false,不接受空串，必须输入内容</span></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果用户输入的内容大于了 limit，就提示重写输入  </span></span><br><span class="line"><span class="comment">//如果用户如的内容 &gt;0 &lt;= limit ,我就接受</span></span><br><span class="line">            <span class="keyword">if</span> (line.length() &lt; <span class="number">1</span> || line.length() &gt; limit) &#123;</span><br><span class="line">                System.out.print(<span class="string">&quot;输入长度（不能大于&quot;</span> + limit + <span class="string">&quot;）错误，请重新输入：&quot;</span>);</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> line;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="具体功能类"><a href="#具体功能类" class="headerlink" title="具体功能类"></a>具体功能类</h3><h4 id="House类"><a href="#House类" class="headerlink" title="House类"></a>House类</h4><p>House实体类的属性有编号，房主， 电话，地址，月租，状态。House的对象表示一个房屋信息。其中构造器、Get和Set方法、toSring方法快捷键Alt+Insert生成即可，toSring略微改成自己想要的格式。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.coderq.houserent.domain;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/2/26.</span></span><br><span class="line"><span class="comment"> * House对象表示一个房屋信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">House</span> &#123;</span><br><span class="line">    <span class="comment">//编号  房主  电话  地址  月租  状态（未出租/已出租）</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String phone;</span><br><span class="line">    <span class="keyword">private</span> String address;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> rent;</span><br><span class="line">    <span class="keyword">private</span>  String state;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">House</span><span class="params">(<span class="type">int</span> id, String name, String phone, String address, <span class="type">int</span> rent, String state)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">        <span class="built_in">this</span>.rent = rent;</span><br><span class="line">        <span class="built_in">this</span>.state = state;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(<span class="type">int</span> id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getPhone</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setPhone</span><span class="params">(String phone)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.phone = phone;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getAddress</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAddress</span><span class="params">(String address)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.address = address;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getRent</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> rent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setRent</span><span class="params">(<span class="type">int</span> rent)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.rent = rent;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getState</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> state;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setState</span><span class="params">(String state)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.state = state;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//为了方便输出对象信息。实现toString方法</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//改为想要的格式</span></span><br><span class="line">        <span class="comment">// 编号  房主  电话  地址  月租  状态（未出租/已出租）</span></span><br><span class="line">        <span class="keyword">return</span>  id +</span><br><span class="line">                <span class="string">&quot;\t\t&quot;</span> + name +</span><br><span class="line">                <span class="string">&quot;\t&quot;</span> + phone +</span><br><span class="line">                <span class="string">&quot;\t\t&quot;</span> + address +</span><br><span class="line">                <span class="string">&quot;\t\t&quot;</span> + rent +</span><br><span class="line">                <span class="string">&quot;\t\t&quot;</span> + state ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HouseView类"><a href="#HouseView类" class="headerlink" title="HouseView类"></a>HouseView类</h4><p>HouseView类用于显示界面</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.coderq.houserent.view;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.coderq.houserent.domain.House;</span><br><span class="line"><span class="keyword">import</span> com.coderq.houserent.service.HouseService;</span><br><span class="line"><span class="keyword">import</span> com.coderq.houserent.utils.Utility;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/2/26.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 1.显示界面</span></span><br><span class="line"><span class="comment"> * 2.接收用户的输入</span></span><br><span class="line"><span class="comment"> * 3.调用HouseService完成对房屋信息的各种操作</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HouseView</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">boolean</span> <span class="variable">loop</span> <span class="operator">=</span> <span class="literal">true</span>;  <span class="comment">//控制显示菜单</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">char</span> <span class="variable">key</span> <span class="operator">=</span> <span class="string">&#x27; &#x27;</span>;  <span class="comment">//接收用户输入</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">HouseService</span> <span class="variable">houseService</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">HouseService</span>(<span class="number">10</span>); <span class="comment">//设置数组大小为10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据修改房屋信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">updateHouse</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================修改房屋==================&quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入待修改房屋id(-1退出查找)&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">updateId</span> <span class="operator">=</span> Utility.readInt();</span><br><span class="line">        <span class="keyword">if</span> (updateId == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================已退出修改房屋==================&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//注意点：</span></span><br><span class="line">        <span class="comment">//返回的是引用类型[即就是数组的元素]，都指向同一对象</span></span><br><span class="line">        <span class="comment">//因此用House.SetXX()方法会修改HouseService中的houses数组中的元素</span></span><br><span class="line">        <span class="type">House</span> <span class="variable">house</span> <span class="operator">=</span> houseService.findById(updateId);</span><br><span class="line">        <span class="keyword">if</span> (house == <span class="literal">null</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;==============修改的房屋信息不存在===============&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名（&quot;</span> + house.getName() + <span class="string">&quot;）：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> Utility.readString(<span class="number">8</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="string">&quot;&quot;</span>.equals(name) ) &#123; <span class="comment">//修改</span></span><br><span class="line">            house.setName(name);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;电话（&quot;</span> + house.getPhone() + <span class="string">&quot;）：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> Utility.readString(<span class="number">12</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="string">&quot;&quot;</span>.equals(phone) ) &#123; <span class="comment">//修改</span></span><br><span class="line">            house.setPhone(phone);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;地址（&quot;</span> + house.getAddress() + <span class="string">&quot;）：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> Utility.readString(<span class="number">16</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="string">&quot;&quot;</span>.equals(address) ) &#123; <span class="comment">//修改</span></span><br><span class="line">            house.setAddress(address);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;月租（&quot;</span> + house.getRent() + <span class="string">&quot;）：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">rent</span> <span class="operator">=</span> Utility.readInt(-<span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> ( rent != -<span class="number">1</span> ) &#123; <span class="comment">//修改</span></span><br><span class="line">            house.setRent(rent);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;状态（&quot;</span> + house.getState() + <span class="string">&quot;）：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">state</span> <span class="operator">=</span> Utility.readString(<span class="number">3</span>,<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> ( !<span class="string">&quot;&quot;</span>.equals(state) ) &#123; <span class="comment">//修改</span></span><br><span class="line">            house.setState(state);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================修改房屋成功==================&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//根据id查找房屋信息</span></span><br><span class="line">    <span class="comment">//编写findHouse()接收输入的id，调用Service的find方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">findHouse</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================查找房屋==================&quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入待查找房屋id(-1退出查找)&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">findId</span> <span class="operator">=</span> Utility.readInt();</span><br><span class="line">        <span class="keyword">if</span> (findId == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================已退出删除房屋==================&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//执行查找</span></span><br><span class="line">        <span class="keyword">if</span> (houseService.findById(findId) != <span class="literal">null</span>) &#123;</span><br><span class="line">            <span class="type">House</span> <span class="variable">house</span> <span class="operator">=</span> houseService.findById(findId);</span><br><span class="line">            System.out.println(house);</span><br><span class="line">            System.out.println(<span class="string">&quot;=================查找房屋成功==================&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================查找房屋失败==================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//退出</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">exit</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> Utility.readConfirmSelection();</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">            loop = <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//删除房屋信息</span></span><br><span class="line">    <span class="comment">//编写delHouse()接收输入的id，调用Service的 del方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delHouse</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================删除房屋==================&quot;</span>);</span><br><span class="line">        System.out.print(<span class="string">&quot;请输入待删除房屋id(-1退出删除)&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">delId</span> <span class="operator">=</span> Utility.readInt();</span><br><span class="line">        <span class="keyword">if</span> (delId == -<span class="number">1</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================已退出删除房屋==================&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//该方法本身有循环，必须输出Y/N</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">choice</span> <span class="operator">=</span> Utility.readConfirmSelection();</span><br><span class="line">        <span class="keyword">if</span> (choice == <span class="string">&#x27;Y&#x27;</span>) &#123;</span><br><span class="line">            <span class="comment">//执行删除</span></span><br><span class="line">            <span class="keyword">if</span> (houseService.del(delId)) &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;=================删除房屋成功==================&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;=================删除房屋失败==================&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================退出删除房屋==================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//添加房屋</span></span><br><span class="line">    <span class="comment">//编写addhouse()接收数据，创建House对象，调用add()方法</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">addHouse</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================添加房屋==================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> Utility.readString(<span class="number">8</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;电话：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">phone</span> <span class="operator">=</span> Utility.readString(<span class="number">12</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;地址：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">address</span> <span class="operator">=</span> Utility.readString(<span class="number">16</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;月租：&quot;</span>);</span><br><span class="line">        <span class="type">int</span> <span class="variable">rent</span> <span class="operator">=</span> Utility.readInt();</span><br><span class="line">        System.out.println(<span class="string">&quot;状态：&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">state</span> <span class="operator">=</span> Utility.readString(<span class="number">3</span>);</span><br><span class="line">        <span class="comment">//创建一个新的House对象，注意id是系统分配，用户不能添加</span></span><br><span class="line">        <span class="type">House</span> <span class="variable">newHouse</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">House</span>(<span class="number">0</span>, name, phone, address, rent, state);</span><br><span class="line">        <span class="keyword">if</span> (houseService.add(newHouse)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================添加房屋成功==================&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=================添加房屋失败==================&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示房屋列表</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">listHouses</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;=================房屋列表==================&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;编号\t\t房主\t\t电话\t\t地址\t\t月租\t\t状态（未出租/已出租）&quot;</span>);</span><br><span class="line">        House[] houses = houseService.list(); <span class="comment">//获取到所有房屋信息</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; houses.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (houses[i] == <span class="literal">null</span>) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(houses[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;=============房屋列表显示完毕==============\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//显示主菜单</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">mainMenu</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;=============房屋租赁系统菜单==============&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t1 新 增 房 源&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t2 查 找 房 源&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t3 删 除 房 源 信 息&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t4 修 改 房 源 信 息&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t5 房 屋 列 表&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;\t\t\t6 退       出&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;请输入你的选择（1-6）&quot;</span>);</span><br><span class="line">            key = Utility.readChar();</span><br><span class="line">            <span class="keyword">switch</span> (key) &#123;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;1&#x27;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;新增&quot;);</span></span><br><span class="line">                    addHouse();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;2&#x27;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;查找 &quot;);</span></span><br><span class="line">                    findHouse();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;3&#x27;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;删除&quot;);</span></span><br><span class="line">                    delHouse();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;4&#x27;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;修改&quot;);</span></span><br><span class="line">                    updateHouse();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;5&#x27;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;房屋列表&quot;);</span></span><br><span class="line">                    listHouses();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> <span class="string">&#x27;6&#x27;</span>:</span><br><span class="line">                    <span class="comment">//System.out.println(&quot;退出&quot;);</span></span><br><span class="line">                    exit();</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">while</span> (loop);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HouseService类"><a href="#HouseService类" class="headerlink" title="HouseService类"></a>HouseService类</h4><p>HouseService类用于给HouseView类传输相应的数据，如HouseView中有listHouse()方法，而HouseService中的list()方法用于给listHouse()方法传送房屋列表的信息。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.coderq.houserent.service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.coderq.houserent.domain.House;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/2/26.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 业务层</span></span><br><span class="line"><span class="comment"> * 定义House[],保存House对象</span></span><br><span class="line"><span class="comment"> * 1.响应HouseView的调用</span></span><br><span class="line"><span class="comment"> * 2.完成对房屋信息的增删改查（crud）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HouseService</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> House[] houses; <span class="comment">//保存House对象</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">houseNums</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">//记录多少个房屋信息</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">idCounter</span> <span class="operator">=</span> <span class="number">1</span>; <span class="comment">//记录当前Id增加到哪</span></span><br><span class="line">    <span class="comment">//构造器初始化数据</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">HouseService</span><span class="params">(<span class="type">int</span> size)</span> &#123;</span><br><span class="line">        <span class="comment">//new houses</span></span><br><span class="line">        houses = <span class="keyword">new</span> <span class="title class_">House</span>[size]; <span class="comment">//创建HouseService对象时，指定数组大小</span></span><br><span class="line">        <span class="comment">//伪造数据，配合测试</span></span><br><span class="line">        houses[<span class="number">0</span>] = <span class="keyword">new</span> <span class="title class_">House</span>(<span class="number">1</span>,<span class="string">&quot;coderq&quot;</span>,<span class="string">&quot;188&quot;</span>,<span class="string">&quot;安徽&quot;</span>,<span class="number">500</span>,<span class="string">&quot;未出租&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//修改房屋信息</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//find方法,查找房屋信息,返回House对象或null</span></span><br><span class="line">    <span class="keyword">public</span> House <span class="title function_">findById</span><span class="params">(<span class="type">int</span> findId)</span>&#123;</span><br><span class="line">        <span class="comment">//先找到要查找的房屋对应的下标</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; houseNums; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (findId == houses[i].getId() )&#123; <span class="comment">//要查找的房屋（id）</span></span><br><span class="line">                <span class="keyword">return</span> houses[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//del方法,删除房屋信息</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">del</span><span class="params">(<span class="type">int</span> delId)</span>&#123;</span><br><span class="line">        <span class="comment">//先找到要删除的房屋对应的下标</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">index</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; houseNums; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (delId == houses[i].getId() )&#123; <span class="comment">//要删除的房屋（id），是数组下标为i的元素</span></span><br><span class="line">                index = i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (index == -<span class="number">1</span>)&#123;</span><br><span class="line">            <span class="comment">//System.out.println(&quot;该房屋不存在&quot;);</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//如果找到,有点难度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> index; i &lt; houseNums - <span class="number">1</span> ; i++) &#123;</span><br><span class="line">            houses[i] = houses[i+<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        houses[--houseNums] = <span class="literal">null</span>; <span class="comment">//当前房屋信息最后一个 设置null</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//add方法，添加新对象，返回boolean</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">add</span><span class="params">(House newHouse)</span>&#123;</span><br><span class="line">        <span class="comment">//判断是否还可以添加，数组满如何扩容？</span></span><br><span class="line">        <span class="keyword">if</span>(houseNums == houses.length)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;数组已满，无法添加&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//newHouse对象加入到数组</span></span><br><span class="line">        houses[houseNums++] = newHouse;</span><br><span class="line">        <span class="comment">//id自增机制</span></span><br><span class="line">        newHouse.setId(++idCounter);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//list方法，返回houses</span></span><br><span class="line">    <span class="keyword">public</span> House[] list()&#123;</span><br><span class="line">        <span class="keyword">return</span> houses;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="HouseRentApp类"><a href="#HouseRentApp类" class="headerlink" title="HouseRentApp类"></a>HouseRentApp类</h4><p>主程序启动类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.coderq.houserent;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.coderq.houserent.view.HouseView;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/2/26.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HouseRentApp</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//创建HouseView对象，显示主菜单，程序入口</span></span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">HouseView</span>().mainMenu();</span><br><span class="line">        System.out.println(<span class="string">&quot;=============你退出了系统==============&quot;</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>以上就是房屋出租系统的全部内容, 本项目也算是Java基础的一个小案例, 增删两个功能看着老韩的视频逐步写下来的，查改是自己尝试了去实现一下，然后发现自己实现确实思路上还有点乱，磕磕绊绊也算是最终实现了。本项目也算简单有了一点增删改查的小锻炼，希望接下来的岁月里继续脚踏实地，努力努力再努力。</p>]]></content>
      
      
      <categories>
          
          <category> 项目梳理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 韩顺平 </tag>
            
            <tag> 项目实战 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>韩顺平Utility工具类[Java基础房屋出租项目]</title>
      <link href="/2022/02/26/%E9%9F%A9%E9%A1%BA%E5%B9%B3Utility%E5%B7%A5%E5%85%B7%E7%B1%BB%5BJava%E5%9F%BA%E7%A1%80%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E9%A1%B9%E7%9B%AE%5D/"/>
      <url>/2022/02/26/%E9%9F%A9%E9%A1%BA%E5%B9%B3Utility%E5%B7%A5%E5%85%B7%E7%B1%BB%5BJava%E5%9F%BA%E7%A1%80%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E9%A1%B9%E7%9B%AE%5D/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br></pre></td><td class="code"><pre><span class="line">package com.codedog.houserent.utils;    //改为自己的目录</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line">工具类的作用:</span><br><span class="line">处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line">import java.util.*;</span><br><span class="line"></span><br><span class="line">public class Utility &#123;</span><br><span class="line">//静态属性。。。</span><br><span class="line">    private static Scanner scanner = new Scanner(System.in);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">    /**</span><br><span class="line">     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围</span><br><span class="line">     * @return 1——5</span><br><span class="line">     */</span><br><span class="line">public static char readMenuSelection() &#123;</span><br><span class="line">        char c;</span><br><span class="line">        for (; ; ) &#123;</span><br><span class="line">            String str = readKeyBoard(1, false);//包含一个字符的字符串</span><br><span class="line">            c = str.charAt(0);//将字符串转换成字符char类型</span><br><span class="line">            if (c != &#x27;1&#x27; &amp;&amp; c != &#x27;2&#x27; &amp;&amp; </span><br><span class="line">                c != &#x27;3&#x27; &amp;&amp; c != &#x27;4&#x27; &amp;&amp; c != &#x27;5&#x27;) &#123;</span><br><span class="line">                System.out.print(&quot;选择错误，请重新输入：&quot;);</span><br><span class="line">            &#125; else break;</span><br><span class="line">        &#125;</span><br><span class="line">        return c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 功能：读取键盘输入的一个字符</span><br><span class="line"> * @return 一个字符</span><br><span class="line"> */</span><br><span class="line">    public static char readChar() &#123;</span><br><span class="line">        String str = readKeyBoard(1, false);//就是一个字符</span><br><span class="line">        return str.charAt(0);</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符</span><br><span class="line">     * @param defaultValue 指定的默认值</span><br><span class="line">     * @return 默认值或输入的字符</span><br><span class="line">     */</span><br><span class="line">    </span><br><span class="line">    public static char readChar(char defaultValue) &#123;</span><br><span class="line">        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符</span><br><span class="line">        return (str.length() == 0) ? defaultValue : str.charAt(0);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 功能：读取键盘输入的整型，长度小于10位</span><br><span class="line">     * @return 整数</span><br><span class="line">     */</span><br><span class="line">    public static int readInt() &#123;</span><br><span class="line">        int n;</span><br><span class="line">        for (; ; ) &#123;</span><br><span class="line">            String str = readKeyBoard(10, false);//一个整数，长度&lt;=10位</span><br><span class="line">            try &#123;</span><br><span class="line">                n = Integer.parseInt(str);//将字符串转换成整数</span><br><span class="line">                break;</span><br><span class="line">            &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(&quot;数字输入错误，请重新输入：&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return n;</span><br><span class="line">    &#125;</span><br><span class="line">    /**</span><br><span class="line">     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数</span><br><span class="line">     * @param defaultValue 指定的默认值</span><br><span class="line">     * @return 整数或默认值</span><br><span class="line">     */</span><br><span class="line">    public static int readInt(int defaultValue) &#123;</span><br><span class="line">        int n;</span><br><span class="line">        for (; ; ) &#123;</span><br><span class="line">            String str = readKeyBoard(10, true);</span><br><span class="line">            if (str.equals(&quot;&quot;)) &#123;</span><br><span class="line">                return defaultValue;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">//异常处理...</span><br><span class="line">            try &#123;</span><br><span class="line">                n = Integer.parseInt(str);</span><br><span class="line">                break;</span><br><span class="line">            &#125; catch (NumberFormatException e) &#123;</span><br><span class="line">                System.out.print(&quot;数字输入错误，请重新输入：&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return n;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 功能：读取键盘输入的指定长度的字符串</span><br><span class="line">     * @param limit 限制的长度</span><br><span class="line">     * @return 指定长度的字符串</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    public static String readString(int limit) &#123;</span><br><span class="line">        return readKeyBoard(limit, false);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串</span><br><span class="line">     * @param limit 限制的长度</span><br><span class="line">     * @param defaultValue 指定的默认值</span><br><span class="line">     * @return 指定长度的字符串</span><br><span class="line">     */</span><br><span class="line"></span><br><span class="line">    public static String readString(int limit, String defaultValue) &#123;</span><br><span class="line">        String str = readKeyBoard(limit, true);</span><br><span class="line">        return str.equals(&quot;&quot;)? defaultValue : str;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 功能：读取键盘输入的确认选项，Y或N</span><br><span class="line"> * 将小的功能，封装到一个方法中.</span><br><span class="line"> * @return Y或N</span><br><span class="line"> */</span><br><span class="line">    public static char readConfirmSelection() &#123;</span><br><span class="line">        System.out.println(&quot;请输入你的选择(Y/N): 请小心选择&quot;);</span><br><span class="line">        char c;</span><br><span class="line">        for (; ; ) &#123;//无限循环</span><br><span class="line">        //在这里，将接受到字符，转成了大写字母</span><br><span class="line">        //y =&gt; Y n=&gt;N</span><br><span class="line">            String str = readKeyBoard(1, false).toUpperCase();</span><br><span class="line">            c = str.charAt(0);</span><br><span class="line">            if (c == &#x27;Y&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class="line">                break;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                System.out.print(&quot;选择错误，请重新输入：&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return c;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * 功能： 读取一个字符串</span><br><span class="line">     * @param limit 读取的长度</span><br><span class="line">     * @param blankReturn 如果为true ,表示 可以读空字符串。 </span><br><span class="line">     *   如果为false表示 不能读空字符串。</span><br><span class="line">     * </span><br><span class="line"> *如果输入为空，或者输入大于limit的长度，就会提示重新输入。</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private static String readKeyBoard(int limit, boolean blankReturn) &#123;</span><br><span class="line">        </span><br><span class="line">//定义了字符串</span><br><span class="line">String line = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">//scanner.hasNextLine() 判断有没有下一行</span><br><span class="line">        while (scanner.hasNextLine()) &#123;</span><br><span class="line">            line = scanner.nextLine();//读取这一行</span><br><span class="line">           </span><br><span class="line">//如果line.length=0, 即用户没有输入任何内容，直接回车</span><br><span class="line">if (line.length() == 0) &#123;</span><br><span class="line">                if (blankReturn) return line;//如果blankReturn=true,可以返回空串</span><br><span class="line">                else continue; //如果blankReturn=false,不接受空串，必须输入内容</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">//如果用户输入的内容大于了 limit，就提示重写输入  </span><br><span class="line">//如果用户如的内容 &gt;0 &lt;= limit ,我就接受</span><br><span class="line">            if (line.length() &lt; 1 || line.length() &gt; limit) &#123;</span><br><span class="line">                System.out.print(&quot;输入长度（不能大于&quot; + limit + &quot;）错误，请重新输入：&quot;);</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        return line;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 韩顺平 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法</title>
      <link href="/2022/02/22/Markdown%E8%AF%AD%E6%B3%95/"/>
      <url>/2022/02/22/Markdown%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法（一级标题）"><a href="#Markdown语法（一级标题）" class="headerlink" title="Markdown语法（一级标题）"></a>Markdown语法（一级标题）</h1><h2 id="标题（二级标题）"><a href="#标题（二级标题）" class="headerlink" title="标题（二级标题）"></a>标题（二级标题）</h2><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><h2 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h2><p><strong>加粗</strong></p><p><em>斜体</em></p><p><em><strong>斜体加粗</strong></em></p><p><del>删除线</del></p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><blockquote><p>你好，2022！ </p></blockquote><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><p>到此！</p><hr><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><ol><li><p>引用本地图片</p><img src="/2022/02/22/Markdown%E8%AF%AD%E6%B3%95/2291368-20220103211113078-6410979.jpg" class="" title="2291368-20220103211113078-6410979"></li><li><p>引用网络图片</p><p><img src="https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg" alt="网络图片"></p></li></ol><h2 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h2><p><a href="https://www.baidu.com/">百度</a></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>有序列表</p><p>水果</p><ol><li>香蕉</li><li>苹果</li><li>梨子</li></ol><p>无序列表</p><p>蔬菜</p><ul><li>萝卜</li><li>番茄</li><li>黄瓜</li></ul><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><table><thead><tr><th>姓名</th><th>性别</th></tr></thead><tbody><tr><td>张三</td><td>男</td></tr></tbody></table><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/02/21/hello-world/"/>
      <url>/2022/02/21/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>检查笔记本电池消耗</title>
      <link href="/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/"/>
      <url>/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/</url>
      
        <content type="html"><![CDATA[<ol><li><p>以管理员身份运行CMD</p><p>win+R 快捷键输入<code>cmd</code>打开命令行窗口 </p></li><li><p>使用以下命令获取电池检测报告<br><code>Powercfg/batteryreport</code></p><img src="/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220201236309-1100738058.png" class=""></li><li><p>到指定目录下（如C:/Users/Q/battery-report.html)查看battery_report.html，其中电池的信息如图：</p></li></ol>  <img src="/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220200703803-528834853.png" class="" title="Battery Report">  <img src="/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220200725104-972245815.png" class="" title="电池报告"><p>​           </p>]]></content>
      
      
      <categories>
          
          <category> categories </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 电脑维修 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java基础笔记</title>
      <link href="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Java基础语法"><a href="#Java基础语法" class="headerlink" title="Java基础语法"></a>Java基础语法</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="JDK-JRE-JVM"><a href="#JDK-JRE-JVM" class="headerlink" title="JDK JRE JVM"></a>JDK JRE JVM</h3><ul><li>JDK: java development kit java 环境</li><li>JRE: java Runtime Environment java 运行时环境</li><li>JVM: java virtual Machine java 虚拟机</li></ul><h3 id="Java-运行机制"><a href="#Java-运行机制" class="headerlink" title="Java 运行机制"></a>Java 运行机制</h3><ul><li>编译型<ul><li>所有的Java代码都是要编译的，.java不经过编译就什么用都没有。</li></ul></li><li>解释型<ul><li>java代码编译后不能直接运行，它是解释运行在JVM上的，所以它是解释运行的，那也就算是解释的了。</li></ul></li></ul><h3 id="HelloWorld"><a href="#HelloWorld" class="headerlink" title="HelloWorld"></a>HelloWorld</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">$firstname</span> <span class="operator">=</span> <span class="string">&quot;L&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">_lastname</span> <span class="operator">=</span> <span class="string">&quot;Q&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">age</span> <span class="operator">=</span> <span class="string">&quot;1&quot;</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>+ <span class="string">&quot; &quot;</span>+ $firstname + _lastname + <span class="string">&quot; &quot;</span>+ age );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>可能遇到的问题</p></blockquote><img src="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111152826346-1412372719.png" class="" title="2291368-20220111152826346-1412372719"><h2 id="01、注释"><a href="#01、注释" class="headerlink" title="01、注释"></a>01、注释</h2><ol><li>单行注释(idea快捷键ctrl+/)</li><li>多行注释(idea快捷键ctrl+shift+/)</li><li>文档注释</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2021/4/17.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">HelloWorld</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//单行注释输出hello world</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*多行注释</span></span><br><span class="line"><span class="comment">多行注释*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Q</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@decription</span> JavaDoc文档注释</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="02、标识符与关键字"><a href="#02、标识符与关键字" class="headerlink" title="02、标识符与关键字"></a>02、标识符与关键字</h2><h3 id="2-1-标识符"><a href="#2-1-标识符" class="headerlink" title="2-1 标识符"></a>2-1 标识符</h3><p>Java 中标识符是为方法、变量或其他用户定义项所定义的名称。标识符可以有一个或多个字符。在 Java 语言中，标识符的构成规则如下。</p><blockquote><p>标识符由数字（0<del>9）和字母（A</del>Z 和 a~z）、美元符号（$）、下划线（_）以及 Unicode 字符集中符号大于 0xC0 的所有符号组合构成（各符号之间没有空格）。</p><p>标识符的第一个符号为字母、下划线和美元符号，后面可以是任何字母、数字、美元符号或下划线。</p></blockquote><p>另外，Java 区分大小写，因此 name 和 Name 是两个不同的标识符。</p><p>注意：标识符命名时，切记不能以数字开头，也不能使用任何 Java 关键字作为标识符，而且不能赋予标识符任何标准的方法名。</p><p>标识符分为两类，分别为关键字和用户自定义标识符。</p><blockquote><p>关键字是有特殊含义的标识符，如 true、false 表示逻辑的真假。</p><p>用户自定义标识符是由用户按标识符构成规则生成的非保留字的标识符，如 abc 就是一个标识符。注意：使用标识符时一定要注意，或者使用关键字，或者使用自定义的非关键字标识符。此外，标识符可以包含关键字，但不能与关键字重名。</p></blockquote><p>合法与不合法标识符示例。</p><pre><code>合法标识符：date、$2021、_date、D_$date 等。不合法的标识符：1111.com、1com、for、if 等。</code></pre><p>标识符用来命名常量、变量、类和类的对象等。因此，在我们命名标识符时，应赋予它一个有意义或有用途的名字。</p><h3 id="2-2-关键字"><a href="#2-2-关键字" class="headerlink" title="2-2 关键字"></a>2-2 关键字</h3><p>关键字（或者保留字）是对编译器有特殊意义的固定单词，不能在程序中做其他目的使用。关键字具有专门的意义和用途，和自定义的标识符不同，不能当作一般的标识符来使用。</p><p>Java 的关键字对 Java 编译器有特殊的意义，它们用来表示一种数据类型，或者表示程序的结构等。</p><p>保留字是为 Java 预留的关键字，它们虽然现在没有作为关键字，但在以后的升级版本中有可能作为关键字。</p><p>Java 语言目前定义了 51 个关键字，这些关键字不能作为变量名、类名和方法名来使用。以下对这些关键字进行了分类。</p><blockquote><p>数据类型：boolean、int、long、short、byte、float、double、char、class、interface。</p><p>流程控制：if、else、do、while、for、switch、case、default、break、continue、return、try、catch、finally。</p><p>修饰符：public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native。</p><p>动作：package、import、throw、throws、extends、implements、this、supper、instanceof、new。</p><p>保留字：true、false、null、goto、const。</p></blockquote><p>注意：由于 Java 区分大小写，因此 public 是关键字，而 Public 则不是关键字。但是为了程序的清晰及可读性，要尽量避免使用关键字的其他形式来命名。</p><h2 id="03、数据类型"><a href="#03、数据类型" class="headerlink" title="03、数据类型"></a>03、数据类型</h2><ul><li>强类型语言：Java  c++ (先定义后使用)</li><li>弱类型语言：javascript python</li></ul><p>java数据类型</p><h3 id="3-1-基本类型（primitive-type）"><a href="#3-1-基本类型（primitive-type）" class="headerlink" title="3-1 基本类型（primitive type）"></a>3-1 基本类型（primitive type）</h3><p>数值类型+布尔类型</p><ul><li>整数 ：int   byte   short   long</li><li>小数：float   double</li><li>字符：char</li><li>布尔型：true  false</li></ul><p><code>字符串String是类不是关键字</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2021/4/18.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//八大基本类型</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//整数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> <span class="number">1000000</span>; <span class="comment">//最常用  4字节</span></span><br><span class="line">        <span class="type">byte</span> <span class="variable">num2</span> <span class="operator">=</span> <span class="number">111</span>; <span class="comment">//-128--127 1字节</span></span><br><span class="line">        <span class="type">short</span> <span class="variable">num3</span> <span class="operator">=</span> <span class="number">11111</span>;  <span class="comment">//2字节</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">num4</span> <span class="operator">=</span> <span class="number">1111111L</span>; <span class="comment">//long类型要在数字后加L 8字节</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//小数：浮点数</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">num5</span> <span class="operator">=</span> <span class="number">1.111F</span>; <span class="comment">//float类型要在数字后加F 4字节</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">num6</span> <span class="operator">=</span> <span class="number">3.14159265358979</span>; <span class="comment">//8字节</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符</span></span><br><span class="line">        <span class="type">char</span> <span class="variable">aaa</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>; <span class="comment">//注意单引号不是双引号，2个字节</span></span><br><span class="line">        <span class="comment">//String name = &quot;李四&quot;;</span></span><br><span class="line">        <span class="comment">//字符串String是类不是关键字</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//布尔型：是非</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">true</span>; <span class="comment">//1位</span></span><br><span class="line"></span><br><span class="line">        System.out.println(flag);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>扩展</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/5.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//整数拓展 进制  二进制（0b开头）  十进制   八进制（0开头）  十六进制（0x开头）</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i1</span> <span class="operator">=</span> <span class="number">0b10</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i2</span> <span class="operator">=</span> <span class="number">010</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">i3</span> <span class="operator">=</span> <span class="number">0x10</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(i1);</span><br><span class="line">        System.out.println(i2);</span><br><span class="line">        System.out.println(i3);</span><br><span class="line">        System.out.println(<span class="string">&quot;===========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//==================================================</span></span><br><span class="line">        <span class="comment">//浮点数拓展    银行业务表示（钱的计算）</span></span><br><span class="line">        <span class="comment">//BigDecimal   数学工具类（如果需要计算，而且不能让它有误差就使用这个类）</span></span><br><span class="line">        <span class="comment">//最好完全避免使用浮点数进行比较</span></span><br><span class="line">        <span class="comment">//==================================================</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f</span> <span class="operator">=</span> <span class="number">1.1f</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> <span class="number">1.1d</span>;</span><br><span class="line">        System.out.println(d == f);    <span class="comment">//false</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">f1</span> <span class="operator">=</span> <span class="number">12544524154441f</span>;</span><br><span class="line">        <span class="type">float</span> <span class="variable">f2</span> <span class="operator">=</span> f1 + <span class="number">1</span>;</span><br><span class="line">        System.out.println(f1 == f2);       <span class="comment">//true(精度丢失)</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===========================&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 字符扩展</span></span><br><span class="line">        <span class="type">char</span> c1=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="type">char</span> c2=<span class="string">&#x27;中&#x27;</span>;</span><br><span class="line">        <span class="comment">//我们通过单引号来表示字符常量</span></span><br><span class="line">        System.out.println(c1);</span><br><span class="line">        System.out.println((<span class="type">int</span>)c1);</span><br><span class="line">        System.out.println(c2);</span><br><span class="line">        System.out.println((<span class="type">int</span>)c2);</span><br><span class="line">        <span class="comment">//强制转换可以把字符转换成数字，所有的字符本质还是数字</span></span><br><span class="line">        <span class="comment">// Unicode 编码表：97=a 65=A  （本质上还是数字）</span></span><br><span class="line">        <span class="comment">// 2字节    65536字符  Excel最长有2的16次方=65536</span></span><br><span class="line">        <span class="comment">//U0000   UFFFF</span></span><br><span class="line">        <span class="type">char</span> c3=<span class="string">&#x27;\u0061&#x27;</span>;</span><br><span class="line">        System.out.println(c3);<span class="comment">//a</span></span><br><span class="line">        <span class="comment">//转义字符（转义字符它有特殊的意思）</span></span><br><span class="line">        <span class="comment">// \t    制表符</span></span><br><span class="line">        <span class="comment">// \n    换行</span></span><br><span class="line">        <span class="comment">//  转义字符有非常的多，可以自己去查询一下</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello\tWorld&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello\nWorld&quot;</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;===============================&quot;</span>);</span><br><span class="line">        <span class="type">String</span> <span class="variable">sa</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">        String sb=<span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">        System.out.println(sa==sb);    <span class="comment">//false    两个对象是不同的</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">        String sd=<span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">        System.out.println(sc==sd);    <span class="comment">//true</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//布尔值扩展</span></span><br><span class="line">        <span class="type">boolean</span> flag=<span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">if</span> (flag==<span class="literal">true</span>)&#123;&#125;</span><br><span class="line">        <span class="keyword">if</span> (flag)&#123;&#125;  <span class="comment">//省略</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-引用类型（reference-type）"><a href="#3-2-引用类型（reference-type）" class="headerlink" title="3-2 引用类型（reference type）"></a>3-2 引用类型（reference type）</h3><p>类  接口  数组</p><h3 id="3-3-类型转换"><a href="#3-3-类型转换" class="headerlink" title="3-3 类型转换"></a>3-3 类型转换</h3><p>类型从low———-&gt;high次序：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">低 ------------------------------------&gt; 高</span><br><span class="line">byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double</span><br></pre></td></tr></table></figure><h4 id="3-3-1-自动类型转换"><a href="#3-3-1-自动类型转换" class="headerlink" title="3-3-1 自动类型转换"></a>3-3-1 自动类型转换</h4><p>自动类型转换：容量小的数据类型可以<strong>自动</strong>转换为容量大的数据类型。</p><h4 id="3-3-2-强制类型转换"><a href="#3-3-2-强制类型转换" class="headerlink" title="3-3-2 强制类型转换"></a>3-3-2 强制类型转换</h4><p>强制类型转换，又被称为造型，用于显式的转换一个数值的类型.</p><blockquote><p>隐含强制转换</p></blockquote><ul><li>可能的默认类型是int。</li><li>小数默认是双精度浮点型double，在定义浮点类型时必须在数字下面跟上 F 或者 f。</li></ul><h4 id="3-3-3-常见的错误和问题"><a href="#3-3-3-常见的错误和问题" class="headerlink" title="3-3-3 常见的错误和问题"></a>3-3-3 常见的错误和问题</h4><ul><li>操作比较大的数时，要留意是否溢出，尤其是整数操作时；</li><li>long类型使用大写L不要用小写。</li></ul><h4 id="3-3-4-拓展：JDK7扩展"><a href="#3-3-4-拓展：JDK7扩展" class="headerlink" title="3-3-4 拓展：JDK7扩展"></a>3-3-4 拓展：JDK7扩展</h4><ul><li>JDK7新特性: 二进制整数<br>JDK7为我们直接提供了二进制整数的类型。<br>以0b开头即可。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//例如：int a = 0b0101：</span><br></pre></td></tr></table></figure><ul><li>JDK7新特性：下划线分隔符</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">//例如：int b = 1_2345_6789;</span><br></pre></td></tr></table></figure><p>根据特性，我们能够很容易地知道这是1亿2345万6789。</p><ul><li>注意点：<br>1.不能把布尔值进行转换<br>2.不能把对象类型转换为不相干的类型<br>3.在把高容量转换到低容量的时候，强制转换<br>4.转换的时候可能存在内存溢出，或者精度问题！</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//类型转换</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">128</span>;</span><br><span class="line">        <span class="type">byte</span> <span class="variable">b</span> <span class="operator">=</span> (<span class="type">byte</span>)i; <span class="comment">//内存溢出</span></span><br><span class="line"><span class="comment">//自动类型转换  低--&gt;高</span></span><br><span class="line">        System.out.println(i); <span class="comment">//128</span></span><br><span class="line">        System.out.println(b); <span class="comment">//-128</span></span><br><span class="line"><span class="comment">//===================================================</span></span><br><span class="line"></span><br><span class="line">        System.out.println((<span class="type">int</span>)<span class="number">23.7</span>); <span class="comment">//23  //精度问题</span></span><br><span class="line">        System.out.println((<span class="type">int</span>)-<span class="number">45.89f</span>); <span class="comment">//-45  //精度问题</span></span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line"><span class="comment">//===================================================</span></span><br><span class="line"></span><br><span class="line">        <span class="type">char</span> <span class="variable">c</span> <span class="operator">=</span> <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">d</span> <span class="operator">=</span> c+<span class="number">1</span>;</span><br><span class="line">        System.out.println(d); <span class="comment">//98</span></span><br><span class="line">        System.out.println((<span class="type">char</span>)d); <span class="comment">//b</span></span><br><span class="line"><span class="comment">//===================================================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//操作比较大的数，注意溢出</span></span><br><span class="line"><span class="comment">//JDK7新特性，数字之间可以用下划线分割</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">10_0000_0000</span>;</span><br><span class="line">        System.out.println(money); <span class="comment">//1000000000(10 亿） 不会输出下划线</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> <span class="number">20</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">total</span> <span class="operator">=</span> money*years;</span><br><span class="line">        System.out.println(total); <span class="comment">//-1474836480 ,计算时内存溢出</span></span><br><span class="line">        System.out.println(<span class="string">&quot;============================&quot;</span>);</span><br><span class="line">        <span class="type">long</span> <span class="variable">total2</span> <span class="operator">=</span> money*years; <span class="comment">//-1474836480 默认是int，转换之前已经存在问题</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">total3</span> <span class="operator">=</span> money*((<span class="type">long</span>)years);<span class="comment">//先将一个数转换为long</span></span><br><span class="line">        System.out.println(total2);   <span class="comment">//-1474836480</span></span><br><span class="line">        System.out.println(total3);   <span class="comment">//20000000000</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="04、变量与常量"><a href="#04、变量与常量" class="headerlink" title="04、变量与常量"></a>04、变量与常量</h2><h3 id="4-1-变量"><a href="#4-1-变量" class="headerlink" title="4-1 变量"></a>4-1 变量</h3><img src="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20221208094727144-1088422726.png" class="" title="2291368-20221208094727144-1088422726"><h4 id="4-1-1-变量作用域"><a href="#4-1-1-变量作用域" class="headerlink" title="4-1-1 变量作用域"></a>4-1-1 变量作用域</h4><ul><li>类变量</li><li>实例变量</li><li>局部变量</li></ul><h4 id="4-1-2-变量的命名规范"><a href="#4-1-2-变量的命名规范" class="headerlink" title="4-1-2 变量的命名规范"></a>4-1-2 变量的命名规范</h4><ul><li>所有的变量、方法、类名：见名知意</li><li>类成员变量：首字母小写和驼峰原则（lastName）</li><li>局部变量：首字母小写和驼峰原则（lastName）</li><li>常量：大写字母和下划线（MAX_VALUE）</li><li>类名：首字母大写和驼峰原则(HelloWorld)</li><li>方法名：首字母小写和驼峰原则</li></ul><h4 id="4-1-3-注意点"><a href="#4-1-3-注意点" class="headerlink" title="4-1-3 注意点"></a>4-1-3 注意点</h4><ul><li>实例变量：从属于对象；可以理解为从属于一个类，如果不自行初始化，就会变成这个类型的默认值。</li><li>所有的数值类型初始化，一般是0  0.0    u00000</li><li>布尔值：默认是false</li><li>除了基本类型，其余的默认值都是null </li><li>局部变量是在方法里面的；必须声明和初始化值</li></ul><h3 id="4-2-常量"><a href="#4-2-常量" class="headerlink" title="4-2 常量"></a>4-2 常量</h3><ul><li>常量名一般使用大写字符</li><li>final 常量名 = 值;</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/6.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo04</span> &#123;</span><br><span class="line">    String name;     <span class="comment">// 实例变量</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//类变量  static（关键字）从属于类</span></span><br><span class="line">    <span class="keyword">static</span> <span class="type">double</span> <span class="variable">salary</span> <span class="operator">=</span> <span class="number">2500</span>;   <span class="comment">//类变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="type">double</span> <span class="variable">PI</span> <span class="operator">=</span> <span class="number">3.14</span> ;  <span class="comment">//常量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">2</span>;   <span class="comment">//局部变量</span></span><br><span class="line">        <span class="type">Demo04</span> <span class="variable">demo04</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo04</span>();</span><br><span class="line"></span><br><span class="line">        System.out.println(demo04.name);  <span class="comment">//null</span></span><br><span class="line">        System.out.println(demo04.age);  <span class="comment">//0</span></span><br><span class="line">        System.out.println(demo04.salary);  <span class="comment">//2500.0</span></span><br><span class="line">        System.out.println(a*PI);  <span class="comment">//6.28</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="05、运算符"><a href="#05、运算符" class="headerlink" title="05、运算符"></a>05、运算符</h2><p>java 语言支持如下运算符</p><ul><li>算数运算符 :+ ，-， *， /，%, ++ ，—</li><li>赋值运算符: =</li><li>关系运算符：&gt;，&lt;, &gt;=,&lt;=,==,!= instanceof</li><li>逻辑运算符： &amp;&amp;，|| ，！</li><li>位运算符：&amp;，| ，^, ~ ，&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;</li><li>条件运算符？：</li><li>扩展赋值元芳：+=，-=，*=，/=</li></ul><p>尊重原创：（口诀）转自<a href="http://lasombra.iteye.com/blog/991662">http://lasombra.iteye.com/blog/991662</a><br>单目乘除位关系，逻辑三目后赋值。 </p><p>单目：单目运算符+ –(负数) ++ – 等<br>乘除：算数单目运算符* / % + -<br>位：位移单目运算符&lt;&lt; &gt;&gt;<br>关系：关系单目运算符&gt; &lt; &gt;= &lt;= == !=<br>逻辑：逻辑单目运算符&amp;&amp; || &amp; | ^<br>三目：三目单目运算符A &gt; B ? X : Y<br>后：无意义，仅仅为了凑字数<br>赋值：赋值=</p><blockquote><p>扩展</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> operator;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/8.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//Math 运算工具类</span></span><br><span class="line">    System.out.println(Math.pow(<span class="number">2</span>,<span class="number">3</span>));  <span class="comment">//8.0</span></span><br><span class="line">    </span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> <span class="number">3</span>;</span><br><span class="line"><span class="comment">//短路运算</span></span><br><span class="line">        System.out.println(c&gt;<span class="number">5</span>&amp;&amp;c++&gt;<span class="number">10</span>);  <span class="comment">//c++&gt;10不执行</span></span><br><span class="line">        System.out.println(c);  <span class="comment">//3</span></span><br><span class="line">        </span><br><span class="line"><span class="comment">//位运算        </span></span><br><span class="line">        System.out.println(<span class="number">2</span>&lt;&lt;<span class="number">3</span>);   <span class="comment">//左移三位   00010   ===&gt;  10000</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">//字符串连接符 +</span></span><br><span class="line">        System.out.println(a+b);</span><br><span class="line">        System.out.println(<span class="string">&quot;&quot;</span>+a+b);  <span class="comment">//1020  加号两侧出现字符串则转为String进行拼接</span></span><br><span class="line">        System.out.println(a+b+<span class="string">&quot;&quot;</span>);  <span class="comment">//30</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="06、包机制与JavaDoc"><a href="#06、包机制与JavaDoc" class="headerlink" title="06、包机制与JavaDoc"></a>06、包机制与JavaDoc</h2><h3 id="6-1-包机制（package）"><a href="#6-1-包机制（package）" class="headerlink" title="6-1 包机制（package）"></a>6-1 包机制（package）</h3><p>一般利用公司的域名倒置作为包名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">package com.baidu.www;   </span><br><span class="line">package com.Q.base;       //package pkg1[. pkg2[. pkg3……]]；</span><br></pre></td></tr></table></figure><p>导入包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">import package.pkg1.pk.class.*；    //*表示通配符，导入该包全部内容</span><br></pre></td></tr></table></figure><h3 id="6-2-JavaDoc"><a href="#6-2-JavaDoc" class="headerlink" title="6-2 JavaDoc"></a>6-2 JavaDoc</h3><ul><li> JavaDoc命令行实现步骤</li></ul><ol><li>首先打开cmd命令行窗口 ，切到需要生成文档的Java代码所在文件夹下。</li><li>输入JavaDoc命令行，生成HTML文件。<code>javadoc -encoding UTF-8 -charset UTF-8 Doc.java</code></li></ol><img src="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153409714-1355163455.png" class="" title="2291368-20220111153409714-1355163455"><ul><li>IDEL编辑器文档生成步骤</li></ul><img src="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153243576-122447391.png" class="" title="2291368-20220111153243576-122447391"><img src="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153253987-2115695199.png" class="" title="2291368-20220111153253987-2115695199"><h2 id="07、Scanner类"><a href="#07、Scanner类" class="headerlink" title="07、Scanner类"></a>07、Scanner类</h2><p>通过Scanner 类的next() 和nextLine()方法可获取输入的字符串，读取前，一般使用hasNext() 与hasNextLine()判断是否还有输入。</p><ul><li><p>next():</p><ul><li>一定要读取到有效字符后才可以结束输入。</li><li>对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li><li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li><li>next() 不能得到带有空格的字符串。</li></ul></li><li><p>nextLine():</p><ul><li>以Enter为结束符,也就是说nextLine()方法返回的是输入回车之前的所有字符。</li><li>可以获得空白。</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/9.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//创建一个扫描器对象用于接收键盘输入的数据</span></span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数据：&quot;</span>);   <span class="comment">//Hello World!</span></span><br><span class="line">        <span class="keyword">if</span> (scanner.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> scanner.next();</span><br><span class="line">            System.out.println(<span class="string">&quot;输入的数据为：&quot;</span>+str);    <span class="comment">//Hello</span></span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//String str = scanner.nextLine();</span></span><br><span class="line"><span class="comment">//System.out.println(&quot;输入的数据为：&quot;+str);   //Hello World!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//凡是I/O类使用完毕记得关闭以节约资源</span></span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>扩展：求平均数</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/9.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//算平均数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入数据&quot;</span>);</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">scanner</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (scanner.hasNextDouble())&#123;  <span class="comment">//输入非double类型即可结束</span></span><br><span class="line">            <span class="type">double</span> <span class="variable">d</span> <span class="operator">=</span> scanner.nextDouble();</span><br><span class="line">            count++;</span><br><span class="line">            sum = sum +d;</span><br><span class="line">            System.out.println(<span class="string">&quot;当前输入的为第&quot;</span>+count+<span class="string">&quot;个数据为：&quot;</span>+d);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;输入的&quot;</span>+count+<span class="string">&quot;个数据的平均数为&quot;</span>+(sum/count));</span><br><span class="line">        scanner.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="08、流程控制"><a href="#08、流程控制" class="headerlink" title="08、流程控制"></a>08、流程控制</h2><h3 id="8-1顺序结构"><a href="#8-1顺序结构" class="headerlink" title="8-1顺序结构"></a>8-1顺序结构</h3><h3 id="8-2选择结构"><a href="#8-2选择结构" class="headerlink" title="8-2选择结构"></a>8-2选择结构</h3><p><code>if结构   switch结构</code></p><p>JDK7之后，switch语句中的变量类型可以是字符串  <code>比较的value值是  “name.hashCode()”</code></p><p>反编译 java—-class(字节码文件)—-反编译(IDEA)</p><ul><li>class反编译后的代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class="line"><span class="comment">// (powered by Fernflower decompiler)</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">SwitchDemo01</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="number">65</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;李&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span>(grade) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">65</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;成绩优秀&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">66</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;成绩良好&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">67</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;成绩及格&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">68</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;成绩不及格&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;输入不合法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="type">byte</span> <span class="variable">var4</span> <span class="operator">=</span> -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">switch</span>(name.hashCode()) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">23376</span>:</span><br><span class="line">            <span class="keyword">if</span>(name.equals(<span class="string">&quot;子&quot;</span>)) &#123;</span><br><span class="line">                var4 = <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">26408</span>:</span><br><span class="line">            <span class="keyword">if</span>(name.equals(<span class="string">&quot;木&quot;</span>)) &#123;</span><br><span class="line">                var4 = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">26446</span>:</span><br><span class="line">            <span class="keyword">if</span>(name.equals(<span class="string">&quot;李&quot;</span>)) &#123;</span><br><span class="line">                var4 = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">switch</span>(var4) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;李&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;木&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;子&quot;</span>);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">            System.out.println(<span class="string">&quot;未查询到名字&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>java原代码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SwitchDemo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">char</span> <span class="variable">grade</span> <span class="operator">=</span> <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;李&quot;</span>;</span><br><span class="line">        <span class="keyword">switch</span> (grade) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;A&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;成绩优秀&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;   <span class="comment">//不加上case会出现穿透现象</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;B&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;成绩良好&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;   <span class="comment">//不加上case会出现穿透现象</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;C&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;成绩及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;   <span class="comment">//不加上case会出现穿透现象</span></span><br><span class="line">            <span class="keyword">case</span> <span class="string">&#x27;D&#x27;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;成绩不及格&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;   <span class="comment">//不加上case会出现穿透现象</span></span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;输入不合法&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">switch</span> (name)&#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;李&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;李&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;木&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;木&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="string">&quot;子&quot;</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;子&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                System.out.println(<span class="string">&quot;未查询到名字&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-3循环结构"><a href="#8-3循环结构" class="headerlink" title="8-3循环结构"></a>8-3循环结构</h3><p><code>while循环    do while循环    for循环</code></p><blockquote><p>小练习1 求0-100奇数和偶数和</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//求0-100奇数和偶数和</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">oddSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">evenSum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt;= <span class="number">100</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">2</span>!=<span class="number">0</span>)&#123;</span><br><span class="line">                oddSum = oddSum +i;</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                evenSum = evenSum +i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;奇数和：&quot;</span>+oddSum);</span><br><span class="line">        System.out.println(<span class="string">&quot;偶数和：&quot;</span>+evenSum);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>小练习2 输出1-1000能被5整除的整数，且每行输出三个</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/10.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//输出1-1000能被5整除的整数，且每行输出三个</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">5</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.print(i +<span class="string">&quot;\t&quot;</span>);   <span class="comment">//水平制表转义字符</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (i%(<span class="number">5</span>*<span class="number">3</span>)==<span class="number">0</span>)&#123;    <span class="comment">//注意if (i%5*3==0)错误, % 优先级与 * 同级，从左向右依次运算</span></span><br><span class="line"><span class="comment">//                System.out.println();    //与print区别输出后换行，print输出后不换行</span></span><br><span class="line">                System.out.print(<span class="string">&quot;\n&quot;</span>);   <span class="comment">//换行转义字符</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小练习3 输出9*9乘法表</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo04</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//9*9乘法表</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">1</span>; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(i+<span class="string">&quot;*&quot;</span>+j+<span class="string">&quot;=&quot;</span>+i*j+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>小练习4 打印5*5正三角形</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">package com.Q.struct;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Created by Q on 2022/1/11.</span><br><span class="line"> */</span><br><span class="line">public class TextDemo &#123;</span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        //打印5*5正三角形</span><br><span class="line">        for (int i = 1; i &lt;= 5; i++) &#123;</span><br><span class="line">            for (int j = 5; j &gt;= i; j--) &#123;</span><br><span class="line">                System.out.print(&quot; &quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            for (int j = 1; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(&quot;*&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            for (int j = 2; j &lt;= i; j++) &#123;</span><br><span class="line">                System.out.print(&quot;*&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>增强for循环</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ForDemo05</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] numbers = &#123;<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            System.out.println(numbers[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;===================&quot;</span>);</span><br><span class="line"><span class="comment">//遍历数组或集合</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> x:numbers)&#123;</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-4Break-amp-Continue"><a href="#8-4Break-amp-Continue" class="headerlink" title="8-4Break &amp; Continue"></a>8-4Break &amp; Continue</h3><blockquote><p>break</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">BreakDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">100</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span> (i==<span class="number">30</span>)</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">//终止循环</span></span><br><span class="line">            System.out.println(i);  <span class="comment">//输出1-29</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>continue</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.struct;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ContinueDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i&lt;<span class="number">30</span>)&#123;</span><br><span class="line">            i++;</span><br><span class="line">            <span class="keyword">if</span> (i%<span class="number">10</span>==<span class="number">0</span>)&#123;</span><br><span class="line">                System.out.println();</span><br><span class="line">                <span class="keyword">continue</span>;  <span class="comment">//结束本次循环，继续执行下一次循环</span></span><br><span class="line">            &#125;</span><br><span class="line">            System.out.print(i);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>对比         return结束方法</p></blockquote><h2 id="09、方法"><a href="#09、方法" class="headerlink" title="09、方法"></a>09、方法</h2><p>1定义</p><p>2调用</p><p>3重载—在一个类中，相同的函数名，参数不同</p><p>4命令行传参</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.method;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/11.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo03</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; args.length; i++) &#123;</span><br><span class="line">            System.out.println(args[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src\com\Q\method&gt;javac Demo03.java</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src\com\Q\method&gt;java Demo03</span><br><span class="line">错误: 找不到或无法加载主类 Demo03</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src\com\Q\method&gt;cd ../        //切换到src目录下</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src\com\Q&gt;cd ../</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src\com&gt;cd ../</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src&gt;java com.Q.method.Demo03    //记得加包名</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src&gt;java com.Q.method.Demo03 this is Q    //传参</span><br><span class="line">this</span><br><span class="line">is</span><br><span class="line">Q</span><br><span class="line"></span><br><span class="line">E:\ProFiles\IdeaProjects\JavaSE\基础语法\src&gt;</span><br></pre></td></tr></table></figure><p>5可变参数</p><p>6递归</p><blockquote><p>小练习 计算器  </p></blockquote><p> <strong>待完善</strong></p><p> <strong>待完善</strong></p><h2 id="10、数组"><a href="#10、数组" class="headerlink" title="10、数组"></a>10、数组</h2><ol><li>声明，创建</li><li>三种初始化以及内存分析</li><li>越界</li><li>使用</li><li>二维数组</li><li>Arrays类</li></ol><blockquote><p>扩展1 稀疏数组</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/14.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo08</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        00000</span></span><br><span class="line"><span class="comment">//        00000</span></span><br><span class="line"><span class="comment">//        01200</span></span><br><span class="line"><span class="comment">//        00000</span></span><br><span class="line"><span class="comment">//        00000</span></span><br><span class="line">        <span class="type">int</span>[][] arrays = <span class="keyword">new</span> <span class="title class_">int</span>[<span class="number">5</span>][<span class="number">5</span>];</span><br><span class="line">        arrays[<span class="number">2</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">        arrays[<span class="number">2</span>][<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">        System.out.println(<span class="string">&quot;输出原数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] arg : arrays) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> a : arg) &#123;</span><br><span class="line">                System.out.print(a+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;====================&quot;</span>);</span><br><span class="line"><span class="comment">//        获取有效值个数</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">sum</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; <span class="number">5</span>; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arrays[i][j]!=<span class="number">0</span>) sum++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;有效值个数：&quot;</span>+sum);   <span class="comment">// 有效值个数：2</span></span><br><span class="line"><span class="comment">//        构建稀疏数组</span></span><br><span class="line">        <span class="type">int</span>[][] arrays2 = <span class="keyword">new</span> <span class="title class_">int</span>[sum+<span class="number">1</span>][<span class="number">3</span>];</span><br><span class="line">        arrays2[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">5</span>;</span><br><span class="line">        arrays2[<span class="number">0</span>][<span class="number">1</span>] = <span class="number">5</span>;</span><br><span class="line">        arrays2[<span class="number">0</span>][<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">count</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arrays[i].length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (arrays[i][j]!=<span class="number">0</span>)&#123;</span><br><span class="line">                    count ++;</span><br><span class="line">                    arrays2[count][<span class="number">0</span>] = i;</span><br><span class="line">                    arrays2[count][<span class="number">1</span>] = j;</span><br><span class="line">                    arrays2[count][<span class="number">2</span>] = arrays[i][j];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//遍历输出稀疏数组</span></span><br><span class="line"><span class="comment">//        552</span></span><br><span class="line"><span class="comment">//        211</span></span><br><span class="line"><span class="comment">//        222</span></span><br><span class="line">        System.out.println(<span class="string">&quot;输出稀疏数组：&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrays2.length; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; arrays2[i].length; j++) &#123;</span><br><span class="line">                System.out.print(arrays2[i][j]+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;======================&quot;</span>);</span><br><span class="line"><span class="comment">//        还原数组</span></span><br><span class="line">        <span class="type">int</span>[][] array3 = <span class="keyword">new</span> <span class="title class_">int</span>[arrays2[<span class="number">0</span>][<span class="number">0</span>]][arrays2[<span class="number">0</span>][<span class="number">1</span>]];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">1</span>; i &lt; arrays2.length; i++) &#123;</span><br><span class="line">            array3[arrays2[i][<span class="number">0</span>]][arrays2[i][<span class="number">1</span>]] =arrays2[i][<span class="number">2</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;输出还原数组&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span>[] arg : array3) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> a : arg) &#123;</span><br><span class="line">                System.out.print(a+<span class="string">&quot;\t&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>扩展2  冒泡排序</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.Q.array;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/14.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo07</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span>[] arr = &#123;<span class="number">2</span>,<span class="number">1</span>,<span class="number">9</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">5</span>,<span class="number">5</span>&#125;;</span><br><span class="line">        <span class="type">int</span>[] result = sort(arr);</span><br><span class="line">        System.out.println(Arrays.toString(result));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//    冒泡排序</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="type">int</span>[] sort(<span class="type">int</span>[] array)&#123;</span><br><span class="line"><span class="comment">//        优化</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">flag</span> <span class="operator">=</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="type">int</span> temp;</span><br><span class="line">        <span class="comment">//外层循环表示比较的趟数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; array.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> <span class="variable">j</span> <span class="operator">=</span> <span class="number">0</span>; j &lt; array.length-i-<span class="number">1</span>; j++) &#123;</span><br><span class="line">                <span class="comment">//注意是j表示比较相邻两数的下标</span></span><br><span class="line">                <span class="keyword">if</span> (array[j]&gt;array[j+<span class="number">1</span>])&#123;</span><br><span class="line">                    temp = array[j];</span><br><span class="line">                    array[j] = array[j+<span class="number">1</span>];</span><br><span class="line">                    array[j+<span class="number">1</span>] = temp;</span><br><span class="line">                    flag = <span class="literal">true</span>;  <span class="comment">//进行了交换，标志改变</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"><span class="comment">//            优化方法一</span></span><br><span class="line">            <span class="keyword">if</span> (!flag)&#123;</span><br><span class="line">                <span class="keyword">break</span>;  <span class="comment">//终止循环</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">//        优化方法二</span></span><br><span class="line"><span class="comment">//        if (!flag)&#123;  //某趟没有进行一次交换，直接不用继续比较</span></span><br><span class="line"><span class="comment">//            return array;</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line">        <span class="keyword">return</span> array;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Java面向对象"><a href="#Java面向对象" class="headerlink" title="Java面向对象"></a>Java面向对象</h1><blockquote><p>面向对象（Object-Oriented Programming）编程本质：</p></blockquote><p>以类的方式组织代码，以对象的方式封装数据</p><blockquote><p>三大特性</p></blockquote><p>封装</p><p>继承</p><p>多态</p><h2 id="01、类与对象的创建"><a href="#01、类与对象的创建" class="headerlink" title="01、类与对象的创建"></a>01、类与对象的创建</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/15.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo01</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line"><span class="comment">//        Student.say();   静态方法可直接调用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//        非静态方法要先实例化</span></span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        student.say();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//静态方法和类一起加载</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">a</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="comment">//        b();</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//非静态方法是在类实例化后才存在的，故不能有静态方法调用</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">b</span><span class="params">()</span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>值传递</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo01;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/16.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Demo02</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//值传递</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">10</span>;</span><br><span class="line">        System.out.println(a);  <span class="comment">//10</span></span><br><span class="line">        <span class="type">Demo02</span> <span class="variable">demo02</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Demo02</span>();</span><br><span class="line">        demo02.change(a);</span><br><span class="line">        System.out.println(a);  <span class="comment">//10</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">change</span><span class="params">(<span class="type">int</span> a)</span>&#123;</span><br><span class="line">        a = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="02、构造器"><a href="#02、构造器" class="headerlink" title="02、构造器"></a>02、构造器</h2><p>又叫构造方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/18.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">//一个类即使什么都不写，也存在一个方法 public Person() &#123;&#125; java---&gt;class文件</span></span><br><span class="line">    <span class="comment">//显示的定义构造器</span></span><br><span class="line">    String name;  <span class="comment">//null</span></span><br><span class="line">    <span class="type">int</span> age;</span><br><span class="line">    <span class="comment">//作用：实例化初始值</span></span><br><span class="line">    <span class="comment">//使用new关键字必须有构造器，因为本质是在调用构造器</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//有参构造</span></span><br><span class="line">    <span class="comment">//使用有参构造，必须显式定义无参构造否则报错</span></span><br><span class="line">    <span class="comment">// Person(String)in Person cannot be applied to()</span></span><br><span class="line">    <span class="comment">//快捷键 alt+insert</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">(String name, <span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment"> Person person = new Person(&quot;Q&quot;,10);</span></span><br><span class="line"><span class="comment"> System.out.println(person.name);</span></span><br><span class="line"><span class="comment"> System.out.println(person.age);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>构造器：</p></blockquote><ul><li><p>和类名相同      </p></li><li><p>没有返回值</p></li><li><p>作用：</p><p>1、实例化初始值</p><p>2、使用new关键字本质是在调用构造器</p></li><li><p>注意点：</p></li></ul><p>​        1、使用有参构造，必须显式定义无参构造，否则报错</p><p>​        2、快捷键 alt+insert</p><blockquote><p>扩展  创建对象内存分析</p></blockquote><p> <strong>待完善</strong></p><p> <strong>待完善</strong></p><h2 id="03、封装"><a href="#03、封装" class="headerlink" title="03、封装"></a>03、封装</h2><p>将类中属性（+少方法）私有化</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo03;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/20.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="comment">//封装</span></span><br><span class="line">    <span class="comment">//属性私有</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> age;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getAge</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setAge</span><span class="params">(<span class="type">int</span> age)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (age &gt; <span class="number">0</span> &amp;&amp; age &lt; <span class="number">120</span>)&#123;</span><br><span class="line">            <span class="built_in">this</span>.age = age;</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.age = -<span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="04、继承"><a href="#04、继承" class="headerlink" title="04、继承"></a>04、继承</h2><p>对象抽象出类     对象抽象—–&gt;类   </p><p>子类抽象出父类    子类抽象——&gt;父类       子类继承父类</p><h3 id="4-1-Object类"><a href="#4-1-Object类" class="headerlink" title="4-1 Object类"></a>4-1 Object类</h3><h3 id="4-2-super-this"><a href="#4-2-super-this" class="headerlink" title="4-2 super  this"></a>4-2 super  this</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/20.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//父类</span></span><br><span class="line"><span class="comment">//java中，所有类直接或者间接继承Object类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">//私有属性不可继承</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> <span class="variable">money</span> <span class="operator">=</span> <span class="number">1_0000_0000</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Person_Q&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;父类无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Person&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">say</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;说话了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//get set</span></span><br><span class="line">    <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getMoney</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> money;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setMoney</span><span class="params">(<span class="type">int</span> money)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.money = money;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo04;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/20.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//子类（继承类）  ctrl+H：查看类继承结构</span></span><br><span class="line"><span class="comment">//继承父类所有方法</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> <span class="keyword">extends</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">String</span> <span class="variable">name</span> <span class="operator">=</span> <span class="string">&quot;Student_Q&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//隐藏代码：默认调用父类无参构造</span></span><br><span class="line">        <span class="built_in">super</span>();  <span class="comment">//只能放在子类构造器第一行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;子类无参构造&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">print</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Student&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test1</span><span class="params">()</span>&#123;</span><br><span class="line">        print();  <span class="comment">//Student</span></span><br><span class="line">        <span class="built_in">this</span>.print();  <span class="comment">//Student</span></span><br><span class="line">        <span class="built_in">super</span>.print();  <span class="comment">//Person</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(String name)</span>&#123;</span><br><span class="line">        System.out.println(name);  <span class="comment">//test_Q</span></span><br><span class="line">        System.out.println(<span class="built_in">this</span>.name);  <span class="comment">//Student_Q</span></span><br><span class="line">        System.out.println(<span class="built_in">super</span>.name);  <span class="comment">//Person_Q</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment"> com.oop.Demo04.Student s1 = new com.oop.Demo04.Student();</span></span><br><span class="line"><span class="comment"> s1.say();</span></span><br><span class="line"><span class="comment"> s1.test(&quot;test_Q&quot;);</span></span><br><span class="line"><span class="comment"> &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><blockquote><p>super注意点：</p></blockquote><p>​        1、super调用父类构造方法，必须是在构造器方法的第一个<br>​        2、super只能出现在子类或者构造方法中<br>​        3、super和this不能同时调用构造方法！</p><blockquote><p>VS this</p></blockquote><p>​        代表的对象不同：<br>​            this：本身调用者这个对象<br>​            super：代表父类对象的引用<br>​        前提不同：<br>​            this：没有继承也可以使用<br>​            super：只能在继承的条件下才可以使用<br>​        构造方法：<br>​            this：本类的构造<br>​            super：父类的构造</p><h3 id="4-3-方法重写"><a href="#4-3-方法重写" class="headerlink" title="4-3 方法重写"></a>4-3 方法重写</h3><p>重写是方法的重写和属性无关</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不是重写</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A==&gt;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B==&gt;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">    <span class="comment">//父类的引用指向子类</span></span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        a.test();  <span class="comment">//A==&gt;test</span></span><br><span class="line">        </span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        b.test();  <span class="comment">//B==&gt;test</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//重写</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;A==&gt;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">B</span> <span class="keyword">extends</span> <span class="title class_">A</span>&#123;</span><br><span class="line">    <span class="comment">//注解</span></span><br><span class="line">    <span class="meta">@Override</span>  <span class="comment">//重写</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">()</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;B==&gt;test&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">A</span> <span class="variable">a</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        <span class="type">B</span> <span class="variable">b</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">B</span>();</span><br><span class="line">        a.test();  <span class="comment">//B==&gt;test</span></span><br><span class="line">        b.test();  <span class="comment">//B==&gt;test</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>重写小结：要是非静态方法</p></blockquote><ol><li><p>需要有继承关系，子类重写父类的方法！</p></li><li><p>方法名必须相同，参数列表必须相同</p></li><li><p>修饰符：</p><p>范围可以扩大：public &gt; Protected &gt; Default &gt; private</p></li><li><p>抛出的异常：</p><p>范围可以被缩小，但不能扩大；</p><p>ClassNotFountException —&gt; Exception(大)</p></li><li><p>重写，子类的方法和父类必须要一致，方法体不同！</p></li></ol><blockquote><p>为什么需要重写？</p></blockquote><p>父类的功能，子类不一定需要，或者不一定满足！</p><p>##05、多态</p><p>多态存在的必要条件：</p><ul><li>继承</li><li>重写 (子类重写父类方法,方法名必须相同)</li><li>父类引用指向子类对象：Parent p = new Child();</li></ul><h2 id="06、instanceof关键字"><a href="#06、instanceof关键字" class="headerlink" title="06、instanceof关键字"></a>06、instanceof关键字</h2><blockquote><p>X instanceof Y               X是否是Y的实例</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop;</span><br><span class="line"><span class="keyword">import</span> com.oop.demo06.Person;</span><br><span class="line"><span class="keyword">import</span> com.oop.demo06.Student;</span><br><span class="line"><span class="keyword">import</span> com.oop.demo06.Teacher;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Application</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//Object &gt; String</span></span><br><span class="line">        <span class="comment">//Object &gt; Person &gt; Teacher</span></span><br><span class="line">        <span class="comment">//Object &gt; Person &gt; Student</span></span><br><span class="line">        <span class="type">Object</span> <span class="variable">object</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        <span class="comment">//System.out.println(X instanceof Y);//能不能编译通过，就取决于X和Y之间是否存在父子关系；</span></span><br><span class="line">        <span class="comment">//结果是true或者false ，X所指向的实例类型是Y的子类型，或者 X和 Y是有关系的</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Student);<span class="comment">//true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Object);<span class="comment">//true</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> Teacher);<span class="comment">//false</span></span><br><span class="line">        System.out.println(object <span class="keyword">instanceof</span> String);<span class="comment">//false，String是 Object lang包下面的，更没关系了</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Student);<span class="comment">//true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Object);<span class="comment">//true</span></span><br><span class="line">        System.out.println(person <span class="keyword">instanceof</span> Teacher);<span class="comment">//false</span></span><br><span class="line">        <span class="comment">//System.out.println(person instanceof String);//编译报错！string和 person同级，它是两条线</span></span><br><span class="line">        System.out.println(<span class="string">&quot;===================================&quot;</span>);</span><br><span class="line">        <span class="type">Student</span> <span class="variable">student</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Student);<span class="comment">//true</span></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Person);<span class="comment">//true</span></span><br><span class="line">        System.out.println(student <span class="keyword">instanceof</span> Object);<span class="comment">//true</span></span><br><span class="line">        <span class="comment">//System.out.println(student instanceof Teacher);//false，编译报错！</span></span><br><span class="line">                <span class="comment">// instanceof是一个比较转换的过程，比较肯定是两边有关系的才会返回true或者false</span></span><br><span class="line">        <span class="comment">//System.out.println(student instanceof String);//false，编译报错！ 两者没关系会直接报错</span></span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>多态总结：</p></blockquote><pre><code>    1. 父类引用指向子类的对象（子类引用指向父类的对象肯定是不行的）    2. 把子类转换为父类，也就是向上转型：不用强制转换；    3. 把子类转换为父类，也就是向下转型：需要强制转换；（可能会丢失一些方法）    4. 方便方法的调用，减少重复的代码！简洁</code></pre><h2 id="07-、static关键字小结"><a href="#07-、static关键字小结" class="headerlink" title="07 、static关键字小结"></a>07 、static关键字小结</h2><p>静态属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//static</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> age;<span class="comment">//静态的变量  多线程！</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;<span class="comment">//非静态的变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Student</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Student</span>();</span><br><span class="line">        System.out.println(Student.age);<span class="comment">//类变量跟类中的所有实例共享</span></span><br><span class="line">        <span class="comment">//System.out.println(Student.score);这是不行的</span></span><br><span class="line">        System.out.println(s1.age);</span><br><span class="line">        System.out.println(s1.score);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态方法</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//static</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">int</span> age;<span class="comment">//静态的变量  多线程！</span></span><br><span class="line">    <span class="keyword">private</span> <span class="type">double</span> score;<span class="comment">//非静态的变量</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">run</span><span class="params">()</span>&#123;<span class="comment">//非静态方法可以调用静态方法里的所有东西</span></span><br><span class="line">        go();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">go</span><span class="params">()</span>&#123;<span class="comment">//静态方法可以调用静态方法里的所有东西</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Student</span>().run();<span class="comment">//对象.方法45</span></span><br><span class="line">        Student.go();</span><br><span class="line">        go();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态代码块</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Person</span> &#123;</span><br><span class="line">    <span class="comment">//2：赋初值~</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//代码块（匿名代码块）</span></span><br><span class="line">        <span class="comment">//没有名字，程序不会主动调用这些模块</span></span><br><span class="line">        <span class="comment">//匿名代码块：创建对象时就自动创建了，而且在构造器之前</span></span><br><span class="line">        System.out.println(<span class="string">&quot;匿名代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//1 ： 只执行一次~</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        <span class="comment">//静态代码块</span></span><br><span class="line">        <span class="comment">//可以在里面加载一些初始化的数据</span></span><br><span class="line">        <span class="comment">//静态代码块：类一加载就直接执行，永久只执行一次</span></span><br><span class="line">        System.out.println(<span class="string">&quot;静态代码块&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//3</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Person</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;构造方法&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person1</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">        System.out.println(<span class="string">&quot;=================&quot;</span>);</span><br><span class="line">        <span class="type">Person</span> <span class="variable">person2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Person</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">        结果：</span></span><br><span class="line"><span class="comment">            静态代码块</span></span><br><span class="line"><span class="comment">            匿名代码块</span></span><br><span class="line"><span class="comment">            构造方法</span></span><br><span class="line"><span class="comment">            =================</span></span><br><span class="line"><span class="comment">            匿名代码块</span></span><br><span class="line"><span class="comment">            构造方法</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>package的一些新特性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//静态导入包~</span></span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.random;</span><br><span class="line"><span class="keyword">import</span> <span class="keyword">static</span> java.lang.Math.PI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(random());</span><br><span class="line">        System.out.println(PI);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">    final 通过final修饰的类不能被继承，就没有子类</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="08、抽象类（abstract"><a href="#08、抽象类（abstract" class="headerlink" title="08、抽象类（abstract)"></a>08、抽象类（abstract)</h2><ul><li><p>抽象类特点</p><ol><li>抽象类和抽象方法都需要被abstract修饰。抽象方法一定要定义在抽象类中</li><li>抽象类不可以直接创建对象，原因：调用抽象方法没有意义</li><li>只有覆盖了抽象类中所有的抽象方法后，其子类才可以创建对象，否则该子类还是一个抽象类</li></ol></li><li><p>abstract不能和哪些关键字共存?</p><ol><li>private 被私有的成员只能在本类中调用，而abstract强制重写抽象方法，二者冲突</li><li>final final表示最终的，被修饰的类和方法不能被继承和重写，与abstract强制重写抽象方法冲突</li><li>static 无意义</li></ol></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//abstract修饰的类为抽象类,java的类是单继承（接口可以多继承）</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">class</span> <span class="title class_">Action</span> &#123;</span><br><span class="line">    <span class="comment">//抽象方法，可以实现约束作用，让继承的子类来实现方法。</span></span><br><span class="line">    <span class="comment">//abstract,抽象方法，只有方法名字，没有方法的实现！</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span>;</span><br><span class="line">    <span class="comment">//抽象类不能new出对象，只能用子类去实现。</span></span><br><span class="line">    <span class="comment">//抽象类里可以写普通方法</span></span><br><span class="line">    <span class="comment">//抽象方法必须在抽象类中</span></span><br><span class="line">    <span class="comment">//抽象的抽象：约束</span></span><br><span class="line">    <span class="comment">//存在的意义，提高开发效率。</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">A</span> <span class="keyword">extends</span> <span class="title class_">Action</span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">doSomething</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="09、接口"><a href="#09、接口" class="headerlink" title="09、接口"></a>09、接口</h2><ul><li><p><strong>接口的成员特点</strong></p><ul><li>成员变量：只能是常量，并且是静态的，默认有public static final修饰</li><li>成员方法：只能是抽象方法，默认有public abstract修饰</li><li>构造方法：接口没有构造方法</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo06;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/23.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">//接口</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span>;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//接口实现类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title class_">UserService</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">add</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">delete</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">update</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">query</span><span class="params">(String name)</span> &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="10、内部类"><a href="#10、内部类" class="headerlink" title="10、内部类"></a>10、内部类</h2><ol><li>成员内部类</li><li>静态内部类（static 修饰）</li><li>局部内部类</li><li>匿名内部类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.oop.Demo07;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/23.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">out</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;外部类&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Inner</span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">in</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;内部类&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//作用：获得内部类的私有属性</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">getName</span><span class="params">()</span>&#123;</span><br><span class="line">            System.out.println(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">    public static void main(String[] args) &#123;</span></span><br><span class="line"><span class="comment">        Outer outer = new Outer();</span></span><br><span class="line"><span class="comment">        outer.out();  //外部类</span></span><br><span class="line"><span class="comment">        Outer.Inner in = outer.new Inner();</span></span><br><span class="line"><span class="comment">        in.in();  //内部类</span></span><br><span class="line"><span class="comment">        in.getName();  //Q</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><blockquote><p>小疑惑  UserService userservice = new UserService()</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个Java类中可以有多个class类，但是只能有一个public class</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Outer</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">new</span> <span class="title class_">Apple</span>().eat();</span><br><span class="line">        <span class="comment">//匿名内部类</span></span><br><span class="line">        <span class="type">UserService</span> <span class="variable">userservice</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">UserService</span>()&#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span> &#123;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//局部内部类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Apple</span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">eat</span><span class="params">()</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">UserService</span>&#123;</span><br><span class="line">    <span class="keyword">void</span> <span class="title function_">Hello</span><span class="params">()</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11、类、接口、抽象类小结"><a href="#11、类、接口、抽象类小结" class="headerlink" title="11、类、接口、抽象类小结"></a>11、类、接口、抽象类小结</h2><blockquote><p>类与类,类与接口,接口与接口的关系</p></blockquote><ul><li>类与类：继承关系,只能单继承,可以多层继承</li><li>类与接口：实现关系,可以单实现,也可以多实现。并且可以在继承一个类的同时实现多个接口</li><li>接口与接口：继承关系,可以单继承,也可以多继承</li></ul><blockquote><p>抽象类和接口的区别</p></blockquote><ul><li><p>成员区别</p><p>抽象类：</p><p>成员变量：可以是变量，也可以是常量</p><p>成员方法：可以是抽象类，也可以非抽象类</p><p>构造方法：有</p><p>接口：</p><p>成员变量：只能是常量</p><p>成员方法：只能是抽象类</p><p>构造方法：无</p></li><li><p>关系区别</p><p>抽象方法：</p><p>类与类：继承，单继承<br>类与接口：实现，单实现，多实现<br>接口与接口：继承，单继承，多继承</p></li><li><p>设计理念区别</p><p>抽象类：体现的是“is a ”的关系，抽象类中定义的是该继承体系的共性功能</p><p>接口：体现的是“like a ”的关系，接口中定义的是该继承体系的个性功能（扩展功能）</p></li></ul><h2 id="12、异常"><a href="#12、异常" class="headerlink" title="12、异常"></a>12、异常</h2><p>Error和Exception</p><blockquote><p>Exception</p></blockquote><h3 id="12-1-异常层次结构图示"><a href="#12-1-异常层次结构图示" class="headerlink" title="12-1 异常层次结构图示"></a>12-1 异常层次结构图示</h3><p>（引用菜鸟教程）</p><img src="/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220123223242579-694787793.png" class="" title="2291368-20220123223242579-694787793"><h3 id="12-2-关键字"><a href="#12-2-关键字" class="headerlink" title="12-2 关键字"></a>12-2 关键字</h3><ol><li>try</li><li>catch</li><li>finally</li><li>throw</li><li>throws</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.exception;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/23.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">//Ctrl+Alt+t  快捷键：捕获结构代码</span></span><br><span class="line">        <span class="keyword">try</span>&#123;<span class="comment">//监控区</span></span><br><span class="line">            System.out.println(a/b);   <span class="comment">//Exception in thread &quot;main&quot; java.lang.ArithmeticException: / by zero</span></span><br><span class="line">        &#125;<span class="keyword">catch</span> (ArithmeticException e)&#123;  <span class="comment">//捕获</span></span><br><span class="line">            System.out.println(e);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Error error)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Error&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception exception)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Exception&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Throwable throwable)&#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;Throwable&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;  <span class="comment">//善后处理   finally可以不用，用于处理IO流等关闭资源</span></span><br><span class="line">            System.out.println(<span class="string">&quot;其他异常&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">输出结果：</span></span><br><span class="line"><span class="comment">java.lang.ArithmeticException: / by zero</span></span><br><span class="line"><span class="comment">其他异常</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h3 id="12-3-自定义异常"><a href="#12-3-自定义异常" class="headerlink" title="12-3 自定义异常"></a>12-3 自定义异常</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.exception.Demo02;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by Q on 2022/1/23.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyException</span> <span class="keyword">extends</span> <span class="title class_">Exception</span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">int</span> detail;</span><br><span class="line">    <span class="comment">//参数大于10抛异常</span></span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">MyException</span><span class="params">(<span class="type">int</span> detail)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.detail = detail;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;MyException&#123;&quot;</span> + <span class="string">&quot;detail=&#x27;&quot;</span> + detail + <span class="string">&#x27;\&#x27;&#x27;</span> + <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//测试</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="comment">//可能出现异常的方法</span></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">test</span><span class="params">(<span class="type">int</span> a)</span> <span class="keyword">throws</span> MyException&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;参数：&quot;</span>+a);</span><br><span class="line">        <span class="keyword">if</span> (a &gt; <span class="number">10</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">MyException</span>(a);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="string">&quot;OK&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            test(<span class="number">14</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MyException e) &#123;</span><br><span class="line">            System.out.println(e);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">参数：14</span></span><br><span class="line"><span class="comment">MyException&#123;detail=&#x27;14&#x27;&#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><h1 id="后记（有感）"><a href="#后记（有感）" class="headerlink" title="后记（有感）"></a>后记（有感）</h1><p>从2022年1月1号准备开始学习，至今23号，经过23天（实际最多只需要一周就可以搞定，打脸自己flag）断断续续的学习，课程是B站狂神说Java的JavaSE课程，记录了这么一份笔记，希望可以用来以后回顾。能感觉出来这是一份速学课程，相对而言少了很多知识点，适合急找工作速成。后续再找点资料补充完善java体系。</p><blockquote><p>补充待续</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
