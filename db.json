{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"source/img/avatar_my01.jpg","path":"img/avatar_my01.jpg","modified":0,"renderable":0},{"_id":"source/img/alipay.jpg","path":"img/alipay.jpg","modified":0,"renderable":0},{"_id":"source/img/coderain_avatar.jpg","path":"img/coderain_avatar.jpg","modified":0,"renderable":0},{"_id":"source/img/qq.png","path":"img/qq.png","modified":0,"renderable":0},{"_id":"source/img/wechat.jpg","path":"img/wechat.jpg","modified":0,"renderable":0},{"_id":"source/img/wallhaven-m9xyg8.jpg","path":"img/wallhaven-m9xyg8.jpg","modified":0,"renderable":0},{"_id":"source/img/wechatpublic.png","path":"img/wechatpublic.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_1.png","path":"img/thumb/thumb_1.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_3.png","path":"img/thumb/thumb_3.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_2.png","path":"img/thumb/thumb_2.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_5.png","path":"img/thumb/thumb_5.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_4.png","path":"img/thumb/thumb_4.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_6.png","path":"img/thumb/thumb_6.png","modified":0,"renderable":0},{"_id":"source/img/thumb/thumb_7.png","path":"img/thumb/thumb_7.png","modified":0,"renderable":0}],"Cache":[{"_id":"source/_data/link.yml","hash":"2bf8880e9a47a5a29f51677d0eb0dd794219eedf","modified":1669875102928},{"_id":"source/_posts/AJ-Report小白配置大屏教程.md","hash":"aa1ccd567eb61f8feb1b7a610cb5ae3969716e82","modified":1670401691532},{"_id":"source/_data/widget.yml","hash":"257df06f7032b567fd6f7fc186e07b8a5733036a","modified":1670072883197},{"_id":"source/_posts/CentOS7.x下在后台运行和关闭（Java）项目.md","hash":"c160945b4f36bdb77147b3883ba79470f58434e5","modified":1670477617842},{"_id":"source/_posts/Centos7.X下Docker环境安装并配置加速镜像.md","hash":"e4f50bd75ac9f8c2dceb3b8d418375bbfb02f504","modified":1670477692111},{"_id":"source/_posts/Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影.md","hash":"26dc44cca76166d2e6093521aff2c71392cedca2","modified":1670399106484},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程.md","hash":"b4cc6f9eaf3ba118d6ca8e962165ea407629f4ac","modified":1670477046722},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体.md","hash":"4339ba13faef4382304d48670f500d2f22ffd68f","modified":1670398680210},{"_id":"source/_posts/Hexo+Github免费搭建博客教程.md","hash":"a49a52de02e9ef1359cd1ea67be37039e5203b7d","modified":1670494000716},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改.md","hash":"031d6a873844d9134c52411cc7c86f4e9cacf01c","modified":1670493946101},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）.md","hash":"4d3495ca9fdb21e2351f23bcfaab79774c66ebd2","modified":1670479044045},{"_id":"source/_posts/IDEA设置单行注释符在代码行首部.md","hash":"efe0095f6837769524e101fd5971416fdd1e5abc","modified":1670478966256},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用.md","hash":"6094a788512a0d799bc24feb45a815e598f62572","modified":1670478980461},{"_id":"source/_posts/Markdown语法.md","hash":"6786e2f1ad06e602b4b569686a1730c02d591977","modified":1670462407731},{"_id":"source/_posts/IDEA2021.3安装及破解教程.md","hash":"dd1bf5589ca54dd3ad2dc3621b65e0401e925fe7","modified":1670478791814},{"_id":"source/_posts/Java集成ip2region2.x实现ip属地功能开发教程.md","hash":"5f0b168ba9add34cba06a1c472528bbffda3ff56","modified":1670403184034},{"_id":"source/_posts/Java基础笔记.md","hash":"3bc0119212e200c462a4b0be02af676f0d461801","modified":1670465676940},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用.md","hash":"c5d09a192a2f0e37df90e08e37129953fe525bd6","modified":1670397314399},{"_id":"source/_posts/Windows下Maven安装及配置教程.md","hash":"daf53cad95683fb668bf8a796d9a8d2272a7a119","modified":1670395231195},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程.md","hash":"4678949f5bcaa39c01a958b049d389192abd2ee2","modified":1670492592757},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程.md","hash":"21808c1bfb0886f7b61ab34a44b0a530b6d2440a","modified":1670494096147},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程.md","hash":"cc6fa65b0e84ef8d1a8bb6e5d13c017bd2c0de88","modified":1670394182774},{"_id":"source/_posts/hello-world.md","hash":"fd4bb7ac6b75b13de1f0e8bdae3f04a104fc2fd4","modified":1670495509347},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）.md","hash":"5b1b3b57cf5e9d9f33e524e36590768f4aaa36a4","modified":1670477550536},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频.md","hash":"76d126ec15d72cfd220e4058a0ffd03d18c3d7b8","modified":1670406618809},{"_id":"source/_posts/Windows下RabbitMQ下载安装.md","hash":"3df7e2fb9f68dda7c053a09f239f1395127e64fb","modified":1670397586781},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程.md","hash":"31303916253f63642f8117794a26688eadec9d86","modified":1670406577344},{"_id":"source/_posts/房屋出租系统【韩顺平 Java 基础案例复现】.md","hash":"d8cd103729334545bbcae06c6d02b67ed3eeb61d","modified":1670466446094},{"_id":"source/_posts/检查笔记本电池消耗.md","hash":"a043a0021944616961d02d1895c6ac3bc2ae1dce","modified":1670477382462},{"_id":"source/about/index.md","hash":"8cf1cd98b1f2ece43cf4a351ad6ec5ca18c9aba0","modified":1670494694426},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用.md","hash":"d8c05592bd611c044d78365888493c8351258db7","modified":1670478166181},{"_id":"source/_posts/韩顺平Utility工具类[Java基础房屋出租项目].md","hash":"51ed2204cc437843afbbf7293cc265a2f75b0259","modified":1670466489558},{"_id":"source/categories/index.md","hash":"bdd0b74216456aa57040a9087cefa5ee390cafce","modified":1668667155570},{"_id":"source/gallery/index.md","hash":"f1afa903b12d988a0e41f2832f8a3a411e61b1bf","modified":1669904476581},{"_id":"source/collection/index.md","hash":"618c96096effd9969166a4bc1dff5ac3b8c2ce2e","modified":1669884383879},{"_id":"source/img/avatar_my01.jpg","hash":"c33f99f910cec6f83e4108a52813538a7d9d04c8","modified":1667709883879},{"_id":"source/css/transpancy.css","hash":"68d6a17b57176f3941f71aa3c7102e4345b81f74","modified":1669897799221},{"_id":"source/img/coderain_avatar.jpg","hash":"85f24f480796a491e7dcb964b883c246dc6bab7c","modified":1667709889514},{"_id":"source/img/qq.png","hash":"9d7b1a5d47297e4d42eda2b8bf57fdff24e09d57","modified":1669864972496},{"_id":"source/img/wechatpublic.png","hash":"49289c180f19779d792a2e2e6a3cba37e2172444","modified":1669857907498},{"_id":"source/health/index.md","hash":"ce5caf2ebe3a7b6fc92baccfc7079c9a34282495","modified":1670156828409},{"_id":"source/site/index.md","hash":"08543d0fb1ac6756fe80d2c29dc96e64a7107d9d","modified":1670494763902},{"_id":"source/tags/index.md","hash":"2ce1170d3f053de07c321840f91310e69a0139c1","modified":1668667165660},{"_id":"source/link/index.md","hash":"d5874d76fb16d23da60226d8f2487d2690734263","modified":1669879121146},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191515359-510796598.png","hash":"540243279f3535dd70e471fdd8a845caed0152a7","modified":1670248488732},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191608294-1205959101.png","hash":"73df303cff495882e8e1cb79e77da1f3d1b92223","modified":1670248488450},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191906001-129999431.png","hash":"b35983ddc4eb736107d54bb99aa9becd502e0076","modified":1670248487560},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191945273-633031838.png","hash":"bf3a4fcc7d50a744260d67644f41cfd0ee637538","modified":1670248487729},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192015456-1643726883.png","hash":"183ae78f876250bcac282efad9fae662e413f402","modified":1670248487806},{"_id":"source/_posts/Centos7.X下Docker环境安装并配置加速镜像/2291368-20221128155713699-365566294.png","hash":"01e6d8c920c19dd31f0103257c0e97e59764505b","modified":1670248452997},{"_id":"source/_posts/Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影/2291368-20221129160808235-2056680578.png","hash":"9415d0ad3e84b459861a57a4d5649e02337c16cd","modified":1670248452681},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192426073-764010738.png","hash":"5ccba919adb302226e15e4c41b37bbe0ad78f1c3","modified":1670248488380},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192408284-1212976555.png","hash":"a252880ee677cc7cc33386e053f3e97241c147cf","modified":1670248488083},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125502046-569979710.png","hash":"6131cf2b9a2c69f44321469ad3773ac6a285a4f4","modified":1670248465063},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192416373-1191184138.png","hash":"d582f1be78be1d11bd533f09f69c3204e735762e","modified":1670248488290},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221129160808235-2056680578.png","hash":"9415d0ad3e84b459861a57a4d5649e02337c16cd","modified":1670248452681},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203101693-1156912262.png","hash":"0ab219fd639a07ab0e00f7160586deab333a41b3","modified":1670248466065},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/Snipaste_2022-11-29_19-45-45.png","hash":"1da630d8b0e45a667c6eab624d16b992c3cd51c8","modified":1669805211936},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125502046-569979710.png","hash":"6131cf2b9a2c69f44321469ad3773ac6a285a4f4","modified":1670248465063},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203101693-1156912262.png","hash":"0ab219fd639a07ab0e00f7160586deab333a41b3","modified":1670248466065},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233240621-744853097.png","hash":"cf076df9306a3913fa6d5d0909e5c321b6d74bf4","modified":1670248525142},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233422511-823096424.png","hash":"f6bce40cb37f575856082678d2aa89953252fa42","modified":1670248526336},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233443240-218493205.png","hash":"812873e213c74793c6c98835e7f2dd8e5b2a0227","modified":1670248526398},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233545215-1500378559.png","hash":"02ccb5e85e6e503ef1a8aeb6e3cc5e8d4c1703cf","modified":1670248526705},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233627278-280180249.png","hash":"adf763547e3faf7e9308d69e17093b553e159b85","modified":1670248527672},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233607522-1071796197.png","hash":"8e9e1560fbe6c3f7c467212d313dfdc3c83c8dde","modified":1670248527518},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233729477-1011260416.png","hash":"8bb5266317ddb25241006d69815b511b1c9802f6","modified":1670248527909},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531234214780-944416990.png","hash":"2ec9842213bd7b315c6b32d469afc11375e1ddae","modified":1670248528674},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531234251609-427743523.png","hash":"bf8e0816e419cbcdc9610e914117977f5b0a9950","modified":1670248528751},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831214155978-149933813.png","hash":"7d9d53ab05c01655f52539ddd35c302197fc8c85","modified":1670248474092},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727095323044-351600479.png","hash":"c0c42cb30c790540e5d17dcd290a50bb96c2d4e9","modified":1670248477303},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831215842519-392248897.png","hash":"e62737c64bffca43190b962a5edddb80bb7da93c","modified":1670248474278},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727100744970-1033816311.png","hash":"0631fa3e0cfa0e2ab2173bfb57822d8b8aed2eb6","modified":1670248477484},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727101209601-1551997987.png","hash":"35e1953314f8af60e3a2d79122622b6160d81d48","modified":1670248477573},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509165538782-356118260.png","hash":"b015f4296d9eda49d69173930a87da3caf250133","modified":1670248531477},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220729162029857-1803090724.png","hash":"25c0d9168c2a1841d5b92ff8065bb83f6d0f868f","modified":1670248477658},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509164533939-754309439.png","hash":"dbbb20c1c0148fef056e7cbbd7ffe770a45f77b8","modified":1670248530995},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825152816881-2076432223.png","hash":"fc27a257ca9daa1a4cd52c0616090981cb476991","modified":1670248531066},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825154015874-1170150107.png","hash":"f3620dcd2e64abf1142ae07834816d03f60bb8a7","modified":1670248531381},{"_id":"source/_posts/Java集成ip2region2.x实现ip属地功能开发教程/Snipaste_2022-11-12_09-59-54.png","hash":"4b669bc01f5ad01df34b79534a0a0bb333e85d5c","modified":1668218396143},{"_id":"source/_posts/Java基础笔记/2291368-20220111153243576-122447391.png","hash":"233b909701a54e07375b4dedfdc146208190170f","modified":1670465035719},{"_id":"source/_posts/Java基础笔记/2291368-20220111153253987-2115695199.png","hash":"2054bb65a94b425896a68008bd7faa975c57e1a4","modified":1670465008431},{"_id":"source/_posts/Java基础笔记/2291368-20220123223242579-694787793.png","hash":"5284781f33ef670bdff976912a026ee0cbd1f3f4","modified":1670465506296},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153050837-236704868.png","hash":"b23af1f3c5d6f6b0a149e316ff273781ebfc7202","modified":1670248455437},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153245736-1598997349.png","hash":"d42a954601c574587cede6992d3bbcfae8a2f430","modified":1670248455712},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153304496-1553677349.png","hash":"474b40ba44babe71b08deb8eaec2adf02c840bef","modified":1670248455978},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153321534-953734721.png","hash":"e2bd91ee2455852656c4840dcb3f70fce1819c0f","modified":1670248456198},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153328602-574621719.png","hash":"d2bd390424a8648603997a5e42b8014a02448190","modified":1670248456308},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153352114-920323856.png","hash":"ac62ab743426246d76262f264f059ed4bc649897","modified":1670248456838},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-15-10.png","hash":"4f8d012a38834f36725ea4fe96189894b5ffc9e0","modified":1670395156668},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193030780-141851887.png","hash":"8454f7e1b59039718cd6c9a4b6723c1d0bb2e6e3","modified":1670248498618},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-06-50.png","hash":"eb9754bc87bb676c305cee5fecdd926b08160c39","modified":1670395131711},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_10-23-28.png","hash":"c6250aa1c421e8ad7a23f4e8c1a89103b4fc3258","modified":1670395173521},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-18-05.png","hash":"c33121434f0eb5a4782bb8d1d488e78f064c2bc6","modified":1670395163344},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193051710-860567096.png","hash":"8e67c353a968e22728167bda0e0c8c50b84f27c6","modified":1670248498727},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193111863-1620087635.png","hash":"718137ad550238f86925e8e9413fa04067e40de9","modified":1670248498821},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193204294-338728882.png","hash":"907632546ad2e8a4f97b65f1c95e8fd935a15537","modified":1670396094538},{"_id":"source/_posts/Windows下RabbitMQ下载安装/2291368-20221126132613809-1055551774.png","hash":"8b4e6a498acb4331406fb0d8bc437ab8c45c9768","modified":1670248453864},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220629182352439-1266648941.png","hash":"e4b5339c4042824c00f56e7dc502e23ae188b375","modified":1670485821440},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630212505473-523791158.png","hash":"0e04d2399b87a6af00db450fc83ab78a715e6505","modified":1670248497144},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220629183153636-1436499922.png","hash":"9f3b8ebfdc0bcd63c7b967e54f52e9aaa5305339","modified":1670485827901},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630214014835-585689483.png","hash":"7616d2c246177273730d3f331bbc9340f7ba7d12","modified":1670248497328},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111431587-147049396.png","hash":"87ca8937407f243ab2fa9f36f649494dba985a75","modified":1670248517093},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111449065-658791468.png","hash":"617a212712a19e221ba60afd22c7a0f95d5e8ece","modified":1670248517164},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111536255-363256586.png","hash":"6ebf2fde0407195df12aa7f389b8737a16e2e990","modified":1670248517405},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111630877-1836009720.png","hash":"e1f8bf9801948036d6976a18c33d8f5f6d3dcfde","modified":1670248517538},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111609438-1454013709.png","hash":"910d66b7dcc4e9ca0c2ea642dec11a65fbb0a723","modified":1670248517470},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161340344-243788459.png","hash":"3789c4da4d70396ad54a8d9aec90a785142617f1","modified":1670248461465},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161454039-1238665013.png","hash":"0c9970ca639e3350244274f4bec941993dcf1545","modified":1670248462398},{"_id":"source/_posts/房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227160905796-630586732.png","hash":"218483dba27d432d5e08c5ce0d1d8325e6601906","modified":1670248536977},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607215951418-741813094.png","hash":"c66340ced0a46fd4fee0dd01223dd6cabc62cf47","modified":1670248516295},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607215959604-689320937.png","hash":"13f1e1c944334cc24bd9b2b4491debe1b9d3cf42","modified":1670248516394},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png","hash":"4f8a58da64c0d8136e2da8a6fdf90a4bd7831e3f","modified":1670248489720},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png","hash":"37c1d5c48c2608cc0d33f57d4bbffc04bbba8eaf","modified":1670248489889},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png","hash":"5086c07bdeab2cf09109005c2eb0e5091a4a193b","modified":1670248490178},{"_id":"source/_posts/检查笔记本电池消耗/2291368-20220220201236309-1100738058.png","hash":"d5217701314b4a6b7358953e763f0e36ec8ff4c5","modified":1670248538484},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png","hash":"6fda0464e8b2575a62c1709af5c8dac791c505b9","modified":1670248490252},{"_id":"source/gallery/wallpaper/index.md","hash":"4da5fba319ec978f973594c88a72e64af7652eae","modified":1669894254494},{"_id":"source/gallery/girl/index.md","hash":"4904768e8f69ddf5ac8bad9f5c9b6d39702c2d29","modified":1669894299321},{"_id":"source/img/thumb/thumb_3.png","hash":"f958d8204ef2568fc98e268cdafc06305b9627bb","modified":1667726076694},{"_id":"source/img/wechat.jpg","hash":"99cd2d49e9b5be0d05ae1b8f3cbea99c2a1a483e","modified":1669902105311},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191538622-1742764931.png","hash":"745e93300e79afee7933c3da4ee21c388c991522","modified":1670248488656},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191749922-146783398.png","hash":"302c4e77b328955a630432f1b1229f4c5b69bc27","modified":1670248487465},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191652637-703350503.png","hash":"94bbb3ee08e46bc1e7c2e5d2caac6f046ebd7a8f","modified":1670248488556},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191926832-623454467.png","hash":"a55d0cff8eb8e00e8b200d4220171ec058e4feb0","modified":1670248487648},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192029555-1871185722.png","hash":"5dfa48cef1193656edca79a0418a3fd879001abf","modified":1670248487899},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192358791-779277970.png","hash":"ef47ddb979e60f7efa77da9ef723dbeaeb7d84d5","modified":1670248487987},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211352284-96900639.jpg","hash":"1874b8775661867c4ba5760fed3f21f996c155d8","modified":1670248520418},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233223642-349131297.png","hash":"d0a3d249f305b83cddb6586df4687ff823fc4b67","modified":1670248525074},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233337883-596107071.png","hash":"d96fdd6859174056fc2571513bdcb5f5f4764f8d","modified":1670248525411},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233458824-948378071.png","hash":"13f0c0cdf81da6ff45ec81fa1fbdff467d8b0a14","modified":1670248526517},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233522724-1594630480.png","hash":"f61d04c8e8fcf92ef88a332e3a81f0766b074ecc","modified":1670248526627},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233742049-1219964528.png","hash":"3dd3f04e0874abfb44a6301e38c46a64f6afe2ef","modified":1670248528004},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233757896-1394280158.png","hash":"ace2b4db444f8e21a85ae8fdf25457b2eac257c4","modified":1670248528145},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233817728-1392655527.png","hash":"77f7013eabe465c9fd2f58a967c99cd1fa5e98cd","modified":1670248528247},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831214203083-833526346.png","hash":"d9afb4fb80ea3120f4640b90f4329d4a82b5f20f","modified":1670248474201},{"_id":"source/_posts/IDEA设置单行注释符在代码行首部/2291368-20220921110657870-1510098922.png","hash":"22edc774304e9045f171cbf7dc2d0932e2e7d642","modified":1670248459093},{"_id":"source/_posts/IDEA设置单行注释符在代码行首部/2291368-20220921110702758-278199113.png","hash":"de55905978f6d9b2a2ac11ec1f9b0dcbe232ac50","modified":1670248459186},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727095004887-1021333814.png","hash":"add7e8f3dd24624d96bad9b33e0eeb1dc6b5be4e","modified":1670248477200},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509164251511-317252381.png","hash":"9c15d19d590d7fd2594767b6cfd52a83054d760c","modified":1670248530827},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509164525444-1888185146.png","hash":"1563a56873bb996e2c526beb42b1401194c86708","modified":1670248530911},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831215848336-1055632127.png","hash":"1b1f80a619cb80f261c87b7efcd8f13c7214069d","modified":1670248474376},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727101157568-1260673146.png","hash":"85c93da3ce37f78bfb11a0573d07b2db2dd1f649","modified":1670248477397},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825152855385-1081507081.png","hash":"9370b0f3b063605bce33ad7c58974f654c1eae11","modified":1670248531280},{"_id":"source/_posts/Java基础笔记/2291368-20220111152826346-1412372719.png","hash":"61dfe4644251e1dd67ad0e1b0248154f7a16631f","modified":1670464946226},{"_id":"source/_posts/Java基础笔记/2291368-20220111153409714-1355163455.png","hash":"efa31b9ad57cb084f285b2492998091b174bdf93","modified":1670464990529},{"_id":"source/_posts/Java基础笔记/2291368-20221208094727144-1088422726.png","hash":"bf4ceaf8c62f6be4eedea5325de2bcfe10f4ba0a","modified":1670464968116},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153217942-618302738.png","hash":"9216ba6ea1d2283edccf2d94ddc8e2e16e4fbc96","modified":1670248455604},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153255337-1553269531.png","hash":"b67546a59ee09ee55c92429e9431f1514b9ae678","modified":1670248455809},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153316742-1509047586.png","hash":"165b54e1e5aa0d5c7f5cbb156ac2373ab52edb16","modified":1670248455911},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153308813-1108409909.png","hash":"e0f0528a84631538e6bbb2ec8aba580768d335ca","modified":1670248456070},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153334434-1909134036.png","hash":"5698302c0113ccb4e243f1963ec991276253d080","modified":1670248456402},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153338693-731479448.png","hash":"ad843fe4b5ec1fa9961c0429f90ebab04a02a8c8","modified":1670248456505},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153359657-726233578.png","hash":"2cc51098dbfd21a749d7f15e7ee912ef8a2fb22c","modified":1670248457562},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153343093-1497482917.png","hash":"52fc79aad63f40f78ab9c045dc6f01a5859eecb3","modified":1670248456598},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153626401-341014184.png","hash":"adf8e41c5c6873d2d1bf00fd11db2708a979688b","modified":1670248455122},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220630111206363-1150534863.png","hash":"49a8d25e72a6867038ab3d1cb9c2b93f4ca226bc","modified":1670248497875},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220630140021409-1360003831.png","hash":"aeae7f17bb2431892addfd6ca081fda640cdb0ed","modified":1670248497601},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630213440738-1103491974.png","hash":"9ced8544907cf082fcc44e256d4167f4b4d6e3a4","modified":1670248497228},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111124820-511486595.png","hash":"c73ed3bca2098ef8c8a7ccb9287b8134b0bd2280","modified":1670248516894},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161507343-2040709033.png","hash":"89207a442742dc9b4f434203ad1dba767e0d5ad7","modified":1670248462641},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607215929483-1525301003.png","hash":"d93dec3c35f276db56a3e133ac34b90cbf6dd05f","modified":1670248516019},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607220047549-1268062378.png","hash":"642d608f72bd0d17639330407816ffb9acc0074e","modified":1670248516483},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png","hash":"fa4f52f05841ce1bec0052a1704962c2b0c0e740","modified":1670248489042},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png","hash":"e062bef14d2086e68467c445ed90308abbfdd294","modified":1670248489238},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607220127585-1741352083.png","hash":"d80ba60e649652cf35b01ea99401bf5dd8226a74","modified":1670248516226},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png","hash":"b3f64ff4ee8d96d0f058ecfbf583f5fa82bbf099","modified":1670248489444},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png","hash":"f08f9bac3628d40065de1a6d698f9caba49c18a0","modified":1670248489649},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png","hash":"9e5cfc9d77c6da99537197a924cfed35a7a0c24a","modified":1670248489543},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png","hash":"09adede5d2fd75e02e6113ee452ede94a92b96bf","modified":1670248489817},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png","hash":"a6297eebc09670d90596050a4403f3c66b927c02","modified":1670248489969},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203107165-240361835.png","hash":"4e749f9e2a45b6cce9ad94d1799a5eb091dc7da3","modified":1670248466549},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203107165-240361835.png","hash":"4e749f9e2a45b6cce9ad94d1799a5eb091dc7da3","modified":1670248466549},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825153608481-312323332.png","hash":"b53efa20109d60824f03b231ab509c0e60866aac","modified":1670248531164},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153404682-549087824.png","hash":"8219b4113b0044e1a5c2c3a1b9cc51b9a3dfce83","modified":1670248458212},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153915252-1831743221.png","hash":"bdb492d4d267d51947923743cf05f3337937586b","modified":1670248455222},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193230336-1133392836.png","hash":"df4d212ebede551f0051643ce217da1a89c51193","modified":1670248499096},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193243736-1465458166.png","hash":"108d2eaa71e40ee07a56eb5d08c5c8c2b0ca84b2","modified":1670248499269},{"_id":"source/_posts/Windows下RabbitMQ下载安装/2291368-20221126132646873-1365415137.png","hash":"80b899be890bddabcefb681eeec80e5d6231b5a3","modified":1670248453982},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624110939600-1386441975.png","hash":"211316a9ffef2c80e52a99fc00f2e3662b45255a","modified":1670248516800},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624131402573-1864608199.png","hash":"d9aca3c66b27ad6983830b2573cb331686a7a483","modified":1670248517028},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607220059511-1290163714.png","hash":"1763a575b281646e783cdf87744fea305da5e4fd","modified":1670248516141},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png","hash":"7f7b2cf0e9c89e04678d513920085e5bc64e5b0a","modified":1670248489157},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png","hash":"b8b89ffe580f3e2d41e10f9cae30f44e64dc9122","modified":1670248489341},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png","hash":"1273cd8c3c2f12035923312f7d52aaefde981cfe","modified":1670248490107},{"_id":"source/img/thumb/thumb_5.png","hash":"b902a39539d727fd550622b22d73bff02f2d6458","modified":1667726133979},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125806511-17842588.png","hash":"0d3606f35e6be48766ddd8bc35ab636063e4deca","modified":1670248465186},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211144391-144641139.jpg","hash":"d756a589528e7cc9b3666c045e1317bab7dcdc6f","modified":1670248520170},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211447243-2064752888.jpg","hash":"fe36016f92a17e8840db9594117a1d41bb217e26","modified":1670248520313},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211750061-803600409.jpg","hash":"4adec8ecc79244874085785b0ec6f7ec93fa0776","modified":1670248521200},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125806511-17842588.png","hash":"0d3606f35e6be48766ddd8bc35ab636063e4deca","modified":1670248465186},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233356912-836859301.png","hash":"1ef9c889908f6f49c795416c961f7a086cb35313","modified":1670248525537},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233838933-422483785.png","hash":"7aca5212eb6d8d4926afff4419bea9e084627336","modified":1670248528358},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123152941797-1053419929.png","hash":"b4ec52e601092b8da20b944cc1cfd3644fcaa606","modified":1670248455338},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153346388-2038670210.png","hash":"7ccf38d19b0efcb6fd91e5200ea04d834b4611e0","modified":1670248456745},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161300895-837839242.png","hash":"0aa2aea2eff824d5772bfbf6bc6b917ef08c1e0e","modified":1670248460625},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161422145-1659631518.png","hash":"8da0a429153ed7a01db114a1a79ea6df1c07fc81","modified":1670248461708},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161517671-301035636.png","hash":"a42138d87c8c582cd19dc00b782e8ff4942a4315","modified":1670248461821},{"_id":"source/img/thumb/thumb_7.png","hash":"81f4dda4bf0e8d6420d47af7ee0711cca2afa059","modified":1667726190039},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153356066-462304454.png","hash":"c8395729cf1ac88e8cda4f663d7e8af4852cd942","modified":1670248457469},{"_id":"source/_posts/Windows下RabbitMQ下载安装/2291368-20221113170308568-904817832.png","hash":"311bfcd0f05bc2a0787b88336bd61aa613d33635","modified":1670248453805},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161409227-1151488737.png","hash":"d0743813e550e0b5fab4697575e8ae2ab8cf3d09","modified":1670248461603},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161326879-2039517975.png","hash":"30d9eb4c7831f7d98c7f00de5056d3306a071b4c","modified":1670248461397},{"_id":"source/img/thumb/thumb_6.png","hash":"e49768f43ba6560b8ae3d587334f3f08bb644877","modified":1667726203180},{"_id":"source/img/alipay.jpg","hash":"bea56bf6d7d585db6451c5fbdd972af6c4bd649d","modified":1669901996465},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211907063-2100004146.jpg","hash":"2d344d093f8bc19acd29254b39dad322a88bfc73","modified":1670248521086},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233644620-1741914965.png","hash":"74931310725eae1074afcab3afb20921867755a5","modified":1670248527826},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193139564-1366743433.png","hash":"dff47b685d467a94761b2a9c18ca16c55b93a61b","modified":1670248498980},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111210435-1959209711.png","hash":"80efe472f514a7f4fb61506314e61b358097ea37","modified":1670248517295},{"_id":"source/img/thumb/thumb_1.png","hash":"6a52c21003a38cceb6e9fd5f9c10908c0c7298bc","modified":1668431504059},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1668495056808},{"_id":"themes/butterfly/_config.yml","hash":"0e653fe2a9365aab54c674c53f61608f74358e68","modified":1669717264775},{"_id":"themes/butterfly/README.md","hash":"15e7f6386b4fd3fa4a6c179ddf641e1ae57eafa2","modified":1668495056808},{"_id":"themes/butterfly/README_CN.md","hash":"d0f7a24732855ae340f94e8286085d5387850cde","modified":1668495056808},{"_id":"themes/butterfly/package.json","hash":"c81d3e680b7219b271496afbd60718bda8915368","modified":1668495056866},{"_id":"themes/butterfly/plugins.yml","hash":"49092888e97d1424624258369928586c5b4067ef","modified":1668495056866},{"_id":"themes/butterfly/layout/archive.pug","hash":"115fa5ee8864e5c97549eff91a17c66101d724ab","modified":1668495056812},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1668495056813},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1668495056865},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1668495056865},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1668495056865},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1668495056810},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1668495056865},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1668495056810},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1668495056807},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1668495056812},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1668495056811},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"92683cb785a29e5a73701b33dba73d3afac268c3","modified":1668495056803},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1668495056807},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1668495056804},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1668495056806},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1668495056813},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"d2e0e71a98f6eb28b3ee91df5286cbbc70b45394","modified":1668495056815},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1668495056814},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"553f6e5e242506775ea02ebe4ebf5c99bcd9d439","modified":1668495056814},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"ac5f3b2aee29fe6ee72d534c3d78c9fa4d7de404","modified":1668495056824},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1668495056829},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1668495056904},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1668495056830},{"_id":"themes/butterfly/source/css/var.styl","hash":"63f12a6a847738b1479ce782c8caac5e0cf16a6b","modified":1668495056904},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1668495056831},{"_id":"themes/butterfly/source/js/main.js","hash":"8650aaa2b77b1a25f48dfe2ea952050275b4038a","modified":1668495056923},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1668495056905},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"1ae9561ea27fd9f929a9a67f1b1025303ca4370f","modified":1668495056925},{"_id":"themes/butterfly/source/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1668495056905},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1668495056925},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1668495056867},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1668495056921},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"176332aa4d01728d0bd084e9b02c60167dc307dd","modified":1668495056869},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"8e6f0677c190d44c64222054e2e7c065fc6c4802","modified":1668495056868},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1668495056870},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b3e05e3440b078f57391c113d6b0c8ecff112720","modified":1668495056869},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1668495056871},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1668495056870},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1668495056872},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1668495056875},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1668495056875},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1668495056877},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1668495056876},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1668495056876},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1668495056877},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1668495056878},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1668495056873},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"56a5d41487d74654b75305c5325167a116495900","modified":1668495056878},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1668495056878},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1668495056879},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1668495056873},{"_id":"themes/butterfly/scripts/helpers/findArchiveLength.js","hash":"db4f5971c27f49a4cb47d34729f4ddf9919d392b","modified":1668495056873},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1668495056874},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1668495056874},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"c07efb04120914363b8de2c276ac5783b82db776","modified":1668495056874},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1668495056817},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"b69f54423e1d7db78b0e4a5ff726244401a6546b","modified":1668495056816},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"bee7e29995ebe28ff8518646ef162201b5efa9d9","modified":1668495056815},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1668495056816},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1668495056817},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1668495056818},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1668495056818},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1668495056819},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"767ca9b4dad126ba5fbd2f3ea5ca8d07c0d2b32c","modified":1668495056825},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1668495056819},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"00ae419f527d8225a2dc03d4f977cec737248423","modified":1668495056825},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"39847b8a1f0fad7889954a4ac936b7681949f16c","modified":1668495056825},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1668495056821},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1668495056821},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"6f489b24f06578440f18b629db56c810f00f8c3f","modified":1668495056821},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"50b4b9c7f6a4771910be4198639cfcfc6d7b8925","modified":1668495056822},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1668495056827},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1668495056880},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1668495056827},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1668495056881},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1668495056823},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"ea89ca7bb18dc3059079709ee5b6e971a8b87c50","modified":1668495056828},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1668495056830},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1668495056830},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1668495056829},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1668495056846},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1668495056832},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"558456d85100606c14e0a59801b0ee2ee67aadd9","modified":1668495056854},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1668495056855},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"8b8e04d3d9462b3790ba17e5a865dab5a4740a73","modified":1668495056826},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1668495056854},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"d561d36229692e2c8a9ee45a7c24c0c2b3599170","modified":1668495056858},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1668495056825},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"af6e3357b8f6df18d0775b8352551c0f8ce38e55","modified":1668495056887},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1668495056887},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1669897431032},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"792a04d36de32f230ca3256ad87a90fe8392f333","modified":1668495056887},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"612d2f8a53141b353078f2a3405d8d44a79d9558","modified":1668495056888},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1668495056889},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1668495056888},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"b0ba6f72848bc711bcf534c56b04ae14ab21b320","modified":1668495056890},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1668495056890},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1668495056890},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1668495056891},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1668495056882},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1668495056891},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"956ed11cc5d65941b49192b9be47cecfaed57a91","modified":1668495056892},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1668495056859},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1668495056886},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1668495056859},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1668495056860},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1668495056860},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1668495056861},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1668495056861},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1668495056862},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1668495056861},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1668495056862},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1668495056863},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"12185713f9ca08984fc74e3b69d8cd6828d23da8","modified":1668495056863},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"5dabc3a5330cc28f0666d1cd8db0d67f553fd854","modified":1668495056892},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1668495056863},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1668495056893},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1668495056863},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1668495056899},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1668495056899},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1668495056900},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1668495056901},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1668495056900},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1668495056901},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1668495056902},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"331c89ecfb79fab68466944a43e9e3d0ff49c646","modified":1668495056902},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1668495056894},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1668495056894},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1668495056902},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1668495056895},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1668495056895},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1668495056895},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1668495056903},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"6d2a841c7656fb28b1e15afe1d7dda56c424b7d7","modified":1668495056896},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1668495056897},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1668495056897},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1668495056924},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1668495056898},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"45792c13c7c439d412b7dc597d74d24f3b598406","modified":1668495056898},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"d0d60008ef4ff74298ff062878766f194a2e4a70","modified":1668495056924},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"645087801624a73cbee63269cfd399e9da39c663","modified":1668495056832},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1668495056833},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"aff5c34b6061b281c66a986cf017e9021dc11ac6","modified":1668495056833},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1668495056834},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"55f7c144e4ef7a7f317bcdab8044fd8f89bdd5d9","modified":1668495056840},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1668495056834},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"3b551ab7618b36795480015b5cf565288df5b957","modified":1668495056841},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"38b85d216d9377ddbaa2e5867e2f03805227237c","modified":1668495056835},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"8c16214a610ff8087628f32d005a1b0aab3bb910","modified":1668495056841},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"cd4fc9c5a61608a5dedf645c1295430a1623040f","modified":1668495056835},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1668495056836},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"fe599836225b835bd19fe1a6831fb4d41bcec071","modified":1668495056841},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1668495056842},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1668495056842},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"5b44b4e5f2445260811de81edd3eeeb97d8bb583","modified":1668495056843},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1668495056843},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"f04263a3bd7efb7f1b250cfee112e82f49805492","modified":1668495056845},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1668495056844},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1668495056846},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"ccb5c3f2a821b87986998595743387d7c997c16e","modified":1668495056845},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1668495056837},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1668495056845},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1668495056837},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1668495056838},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1668495056839},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1668495056846},{"_id":"themes/butterfly/layout/includes/third-party/chat/messenger.pug","hash":"e703319ae5395273e81de11ba2366f21a104cf47","modified":1668495056839},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"a5ddcf84ce8855c7801289270009e29c3a103150","modified":1668495056839},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1668495056848},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"f0d3eddd2bed68e5517274b3530bfe0fa5057d8e","modified":1668495056848},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1668495056839},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"2a39dd634a80a735359206a2481f8468f34a0b5c","modified":1668495056848},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"297d34d83e7bff8ec3b8bc19bb0f4d901c35fe5a","modified":1668495056849},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"77ac27a24b8347668c4df9d5c44c9461c69eaec9","modified":1668495056850},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1668495056850},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1668495056851},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1668495056851},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"bc207dcb771fc2c2c329f29d01708ff6b18443da","modified":1668495056851},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1668495056852},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"91a72e94743befa21a7b1c557fbb3751efb87ab0","modified":1668495056852},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1668495056857},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1668495056852},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1668495056857},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1668495056858},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1668495056855},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1668495056857},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1668495056882},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1668495056855},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1668495056855},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1668495056883},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1668495056884},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1668495056885},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1668495056885},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220630111940288-138478437.png","hash":"8589b19a1f62628f52e307b0a2e5a43b220b9887","modified":1670248498019},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161447243-1322403015.png","hash":"b3fe0d0f3e6283bc91078bbf0702a8a8c92a19fa","modified":1670248462302},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161500321-1046594983.png","hash":"0862aa54c606ce837423a43d1e13c22c9110d817","modified":1670248462523},{"_id":"source/img/thumb/thumb_2.png","hash":"b5cc56628754c2c7b4dbdf5c8f6df4b7bb980238","modified":1667726038883},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161431578-1856504518.png","hash":"07d71a9f3f805345e7f96ae2ec3da6e07c4ebb7c","modified":1670248461985},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161439551-1411541496.png","hash":"597bf09a8aa814c6f3a7449f5534da328a573ad2","modified":1670248462145},{"_id":"source/img/wallhaven-m9xyg8.jpg","hash":"d438c78ce1e5329474d06925697290c3f9a4feac","modified":1668522322747},{"_id":"source/img/thumb/thumb_4.png","hash":"4b6a0b3313a33c587049bb6e94d3cc269e37249f","modified":1667726157276},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161315069-1517471827.png","hash":"18927fe3dbb8715684a3ef6a2d1b288ab6a1318b","modified":1670248461261},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161532207-1251520737.png","hash":"150732ea61985c937089238c5c505d5230159bd7","modified":1670248463062},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233317633-390444962.png","hash":"b41ae8b734bfa101d24498c2dceba6903b7ea8fc","modified":1670248525287},{"_id":"source/_posts/房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227144414328-1953458094.png","hash":"2fdf246cdb5f1909f0824f95870a50f257d0fa78","modified":1670248536919},{"_id":"source/_posts/Markdown语法/2291368-20220103211113078-6410979.jpg","hash":"8f23eed452a2facf60148d3794b37318551879c4","modified":1670401405639},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203047705-1415002471.png","hash":"2260d42aceb621c853722f856868ebbccfb79b82","modified":1670248465561},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203047705-1415002471.png","hash":"2260d42aceb621c853722f856868ebbccfb79b82","modified":1670248465561},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203055675-805963954.png","hash":"a138f964961fb9b484a1398ee5704734d511c03a","modified":1670248465955},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203055675-805963954.png","hash":"a138f964961fb9b484a1398ee5704734d511c03a","modified":1670248465955},{"_id":"source/_posts/检查笔记本电池消耗/2291368-20220220200703803-528834853.png","hash":"c553514ef35dd960eeaef62b93d55701a02aee26","modified":1670248538735},{"_id":"source/_posts/检查笔记本电池消耗/2291368-20220220200725104-972245815.png","hash":"68d8990a2ee45e7e628e5ff6844ccb4b7e146766","modified":1670248539078},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png","hash":"14cbe50dadb3a52ab281dcb73627ef28d80a6910","modified":1670248462895},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125458669-276341619.png","hash":"302549bcbefc51eaf86a799b364dd47eed0c795c","modified":1670248464986},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125458669-276341619.png","hash":"302549bcbefc51eaf86a799b364dd47eed0c795c","modified":1670248464986},{"_id":"public/css/transpancy.css","hash":"a49cc0f912c17f8d4b5b35bead2a70884b5d12fa","modified":1670495609755},{"_id":"public/search.xml","hash":"58c7ee379c2d58f07d1d56f3701986e61817871a","modified":1670495609755},{"_id":"public/categories/index.html","hash":"33c1e0010d6820df4aa48146e2f79b11ea665ff0","modified":1670495609755},{"_id":"public/about/index.html","hash":"b8b6e504379f265994f2cdec141533b5ffb68c1a","modified":1670495609755},{"_id":"public/collection/index.html","hash":"7f59d2f2797b1ebe7b6a6cd91c21cb717ede5f41","modified":1670495609755},{"_id":"public/gallery/index.html","hash":"d5b6dfc8156a63e14d95b81a343c24a2dda9d493","modified":1670495609755},{"_id":"public/site/index.html","hash":"a669266e56e5da3bd9353a3e8edcd5a72fda6bf0","modified":1670495609755},{"_id":"public/404.html","hash":"63fe38459b4bdcc10b8a7672c9733dc1c983aa44","modified":1670495609755},{"_id":"public/tags/index.html","hash":"559ff9fb7ecb58dc7fbe8d3a15b96742cfc43eeb","modified":1670495609755},{"_id":"public/health/index.html","hash":"067682e7418843f45a62adca700da03bbfc22bf5","modified":1670495609755},{"_id":"public/link/index.html","hash":"307a46ee855eef0c4f8402075a4587563e1eaea5","modified":1670495609755},{"_id":"public/2022/11/28/Centos7.X下Docker环境安装并配置加速镜像/index.html","hash":"3f9cbd1b2861c824975dd1515105db460fb243a9","modified":1670495609755},{"_id":"public/gallery/girl/index.html","hash":"8acb79699483128471a4726941a6f30b3b3280d8","modified":1670495609755},{"_id":"public/2022/11/29/Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影/index.html","hash":"9b942c95d835a1f4807d53b2bb5b8dc0ca48a223","modified":1670495609755},{"_id":"public/gallery/wallpaper/index.html","hash":"41e3cf20ea60ae924cab2ed3c22761658ab63fba","modified":1670495609755},{"_id":"public/2022/11/26/Windows下RabbitMQ下载安装/index.html","hash":"fcb74ef665becb0dd6c9e1839d19daaeb7503f33","modified":1670495609755},{"_id":"public/2022/11/22/IDEA设置单行注释符在代码行首部/index.html","hash":"ab06fff2b651bf66677feb9dc2774d95d8626695","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/index.html","hash":"67d22907810a2ce18b94be013d3a5a66f5b0f33d","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/index.html","hash":"3a0ceca2064378eb224fc6b1baa787fa4dbf2173","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/index.html","hash":"66689d3921f33c876d9f3130225c35f955593eb1","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/index.html","hash":"2b0428a61cdf2e568553b90fe5438ac10e6fdef5","modified":1670495609755},{"_id":"public/2022/11/12/CentOS7.x下在后台运行和关闭（Java）项目/index.html","hash":"61a5ae65befeaeebb6b6f243125b5868df4e0fc2","modified":1670495609755},{"_id":"public/2022/11/03/Java集成ip2region2.x实现ip属地功能开发教程/index.html","hash":"f3ccb640119df147c45ab28f461caa9a43f173c4","modified":1670495609755},{"_id":"public/2022/08/31/IDEA2021.3.3配置Maven（详细版）/index.html","hash":"8147af1ac6000974bc62788b704c250fd9bef690","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/index.html","hash":"4fa2aab3ac2db07ba893bcd42d12f182cc6c34b5","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/index.html","hash":"014279400a060327c140592202a13077971c8219","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Redis解压包安装及配置教程/index.html","hash":"aac3b481ae9bb13c1796a251f71e288e3d1068d8","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/index.html","hash":"10b46dd25fe534efb838575b9fceeeda587d68dd","modified":1670495609755},{"_id":"public/2022/06/30/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/index.html","hash":"a5aea6810aaa505844c368da00137b07edd3c152","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Maven安装及配置教程/index.html","hash":"02290700ae3945510938337f21176a3533fed244","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/index.html","hash":"aa1a42bc1de7c182cc2ccc90cd5240338196eb74","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/index.html","hash":"4ed6339bdfd1bf147d06b7e383f515bef24a12b6","modified":1670495609755},{"_id":"public/2022/06/18/Dell Vostro 5568型号笔记本电脑更换电池教程/index.html","hash":"78fa5c65f25ebe1b644933d279339fe60307158e","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/index.html","hash":"7b40e723ec39c36cacb406fed6fd27f2eb98dc2b","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/index.html","hash":"48dc6f7f687cdb2a7a10f6a2ab79ff36be85c96a","modified":1670495609755},{"_id":"public/2022/03/24/房屋出租系统【韩顺平 Java 基础案例复现】/index.html","hash":"172058b74d972b20323a2e097349d51ce1ee389a","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/index.html","hash":"5409ae66de6988d7ed04c62d397568997ad9b39a","modified":1670495609755},{"_id":"public/2022/02/26/韩顺平Utility工具类[Java基础房屋出租项目]/index.html","hash":"a88bba8c68b00b7895d0d136af0168c746590759","modified":1670495609755},{"_id":"public/2022/02/22/Markdown语法/index.html","hash":"e7cbba91cd6e88245103dd6646d3801591e48fc8","modified":1670495609755},{"_id":"public/2022/02/21/hello-world/index.html","hash":"7749ead09b54bb823067bbbe8cedf64309e085c4","modified":1670495609755},{"_id":"public/2022/02/20/检查笔记本电池消耗/index.html","hash":"7ce424d114c1fd2fba0d833bc1ee7ef8f56a5d75","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/index.html","hash":"c06f17c627706f844977914bfda01b539a73a854","modified":1670495609755},{"_id":"public/archives/page/3/index.html","hash":"ad513293f83eac55ab3e5d3421378fcea686f1df","modified":1670495609755},{"_id":"public/archives/index.html","hash":"14b5a53fc720e405fcafcf89155e069f2b5418de","modified":1670495609755},{"_id":"public/archives/page/2/index.html","hash":"b339e7738c65fe404977efe6c76006942f92948f","modified":1670495609755},{"_id":"public/archives/page/4/index.html","hash":"d7fd0e04f80553cae2313bd7bdf9a9e81a4f3620","modified":1670495609755},{"_id":"public/archives/2022/index.html","hash":"2596d812140062af142089991401198408f9bbd2","modified":1670495609755},{"_id":"public/archives/page/5/index.html","hash":"6b76be72e8a7d8adfa1dafba572d72044cf0d41f","modified":1670495609755},{"_id":"public/archives/2022/page/2/index.html","hash":"829abf8b96787da327e945ed81ca94995f91ebae","modified":1670495609755},{"_id":"public/archives/page/6/index.html","hash":"b0a07570540d8edb1cd235e85b57031ebb7d2d2a","modified":1670495609755},{"_id":"public/archives/2022/page/4/index.html","hash":"0705be9d5a6b2eaddc7d36274418b7e2a702188c","modified":1670495609755},{"_id":"public/archives/2022/page/3/index.html","hash":"bd06791b2fe40df307d9397289d433765a303fd3","modified":1670495609755},{"_id":"public/archives/2022/page/5/index.html","hash":"9d3d7a16f5da0d70bb0886a3fcd719fb02104a7a","modified":1670495609755},{"_id":"public/archives/2022/page/6/index.html","hash":"2afc6fa2b95a4aba930ee26dc0d8bb1ffd78588b","modified":1670495609755},{"_id":"public/archives/2022/02/index.html","hash":"ed3eb4c9ead443c530dd157ce7bccc7bb11e4a97","modified":1670495609755},{"_id":"public/archives/2022/01/index.html","hash":"d01f5b7181c83e8d43d0d9294f2f755883d48cf9","modified":1670495609755},{"_id":"public/archives/2022/03/index.html","hash":"e7779c9877ef3eb3acb619451505849a38cfe936","modified":1670495609755},{"_id":"public/archives/2022/05/index.html","hash":"d822b71b1aed63a1f9b8b6eac522f2ae6dd87635","modified":1670495609755},{"_id":"public/archives/2022/06/index.html","hash":"c902d47cdffe0806155d026e4a419fc1d515fedc","modified":1670495609755},{"_id":"public/archives/2022/06/page/2/index.html","hash":"46a8012e55ab51ce53b556094d6cb0374c2ce488","modified":1670495609755},{"_id":"public/archives/2022/07/index.html","hash":"c6defc1f152ac5279edd619b94e14b3d704dac1b","modified":1670495609755},{"_id":"public/archives/2022/08/index.html","hash":"17a2435bdf5a5237cd2b45cec99ad3bc4d052ef0","modified":1670495609755},{"_id":"public/archives/2022/11/index.html","hash":"72508d0a3042214a4c1b6e6355250ea03b35fc23","modified":1670495609755},{"_id":"public/archives/2022/11/page/2/index.html","hash":"4c22d2834a7327354e703db8a4fc45fcea2d9274","modified":1670495609755},{"_id":"public/tags/运维/index.html","hash":"b4ac7a4db321c3f57d151d333b87e13ad2394be4","modified":1670495609755},{"_id":"public/tags/电脑维修/index.html","hash":"01f36180165d29855bbd46280717784dc897ab4f","modified":1670495609755},{"_id":"public/tags/AJ-Report/index.html","hash":"f4f916ec62aa032085e24433bd1c5fac2e2b173b","modified":1670495609755},{"_id":"public/tags/Hexo/index.html","hash":"167493950bcca1994c20f6a9a55218bd57909ae9","modified":1670495609755},{"_id":"public/tags/Docker/index.html","hash":"56c4da99821470467917832f5b89557448020457","modified":1670495609755},{"_id":"public/tags/Butterfly/index.html","hash":"e5085d2e744b9b921a3b73d27e355fe8dd1a0f15","modified":1670495609755},{"_id":"public/tags/Maven/index.html","hash":"f8924d64b86bb259072f19b21662452b580d59e4","modified":1670495609755},{"_id":"public/tags/IDEA/index.html","hash":"1a850ba340ef409fd412504e3b829bc0f748ee9b","modified":1670495609755},{"_id":"public/tags/Markdown/index.html","hash":"4a1529ca3b6d917db36f780116313ae62c2b7cbc","modified":1670495609755},{"_id":"public/tags/Java/index.html","hash":"a88d95b5d85e5607f5b18eada768bd356291063a","modified":1670495609755},{"_id":"public/tags/ip属地/index.html","hash":"8fb121061012c8f3f293ed11d358dbb7bec72840","modified":1670495609755},{"_id":"public/tags/ElasticSearch/index.html","hash":"e13130a88188a50a03075381302e66fef16ce5e7","modified":1670495609755},{"_id":"public/tags/RabbitMQ/index.html","hash":"b6acab9dcaa0d8890873e4c6f3d7c2fe10047406","modified":1670495609755},{"_id":"public/tags/MySQL/index.html","hash":"df51bfd607fbaf02b5bf2c3ccc3304643d9ad33e","modified":1670495609755},{"_id":"public/tags/Redis/index.html","hash":"553bb6c9abca8cce2253a3222cce6f5adc8d718c","modified":1670495609755},{"_id":"public/tags/微PE/index.html","hash":"abc9918bdfb9e89e007be21af340789fd1556dd1","modified":1670495609755},{"_id":"public/tags/油猴/index.html","hash":"6531e44ff4fda6b2bfb767eb0425b26613bceea3","modified":1670495609755},{"_id":"public/tags/韩顺平/index.html","hash":"ef00d44bd683a52520677437091423b059e7dd1a","modified":1670495609755},{"_id":"public/tags/项目实战/index.html","hash":"9e34238a6a2d2c180eb23df271bac37c98d23786","modified":1670495609755},{"_id":"public/tags/阿里云/index.html","hash":"440957d44a55a6e10d546b99dc0e35a0cdc5b622","modified":1670495609755},{"_id":"public/categories/categories/index.html","hash":"9ea2c256605b9057546780b919149c4d4574eeac","modified":1670495609755},{"_id":"public/categories/categories/page/2/index.html","hash":"34a227c65af7368abbceebd862e7c26fc07012e9","modified":1670495609755},{"_id":"public/categories/个人博客/index.html","hash":"42496f01a79a311691e846b069bc4c13b1977717","modified":1670495609755},{"_id":"public/categories/工具IDE/index.html","hash":"0a264c7b3ed3881d50e93af9809ea02bb01791d9","modified":1670495609755},{"_id":"public/categories/环境/index.html","hash":"71210665c76894135e97115674709edfe9920601","modified":1670495609755},{"_id":"public/categories/学习笔记/index.html","hash":"2d21e4ee27817d95716f3c7ec58fd89f9cb35b35","modified":1670495609755},{"_id":"public/categories/中间件/index.html","hash":"4e6558c295c345c761579ca0646b4545b9c8a463","modified":1670495609755},{"_id":"public/categories/项目梳理/index.html","hash":"4c652afacd99cc42cd9be7c1b6891d0e326bea90","modified":1670495609755},{"_id":"public/page/2/index.html","hash":"69643d602280e4993c59c740ce2ab193f5989cf1","modified":1670495609755},{"_id":"public/page/3/index.html","hash":"d11ad8a453dc4439bf12cd9881d080accd9b1d79","modified":1670495609755},{"_id":"public/index.html","hash":"6e7aeb7d705d08935fad6e41cf4d1f939eb7d50f","modified":1670495609755},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1670495609755},{"_id":"public/img/favicon.png","hash":"3cf89864b4f6c9b532522a4d260a2e887971c92d","modified":1670495609755},{"_id":"public/img/coderain_avatar.jpg","hash":"85f24f480796a491e7dcb964b883c246dc6bab7c","modified":1670495609755},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1670495609755},{"_id":"public/img/avatar_my01.jpg","hash":"c33f99f910cec6f83e4108a52813538a7d9d04c8","modified":1670495609755},{"_id":"public/img/qq.png","hash":"9d7b1a5d47297e4d42eda2b8bf57fdff24e09d57","modified":1670495609755},{"_id":"public/img/wechatpublic.png","hash":"49289c180f19779d792a2e2e6a3cba37e2172444","modified":1670495609755},{"_id":"public/img/thumb/thumb_3.png","hash":"f958d8204ef2568fc98e268cdafc06305b9627bb","modified":1670495609755},{"_id":"public/2022/11/28/Centos7.X下Docker环境安装并配置加速镜像/2291368-20221128155713699-365566294.png","hash":"01e6d8c920c19dd31f0103257c0e97e59764505b","modified":1670495609755},{"_id":"public/2022/11/29/Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影/2291368-20221129160808235-2056680578.png","hash":"9415d0ad3e84b459861a57a4d5649e02337c16cd","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191515359-510796598.png","hash":"540243279f3535dd70e471fdd8a845caed0152a7","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191608294-1205959101.png","hash":"73df303cff495882e8e1cb79e77da1f3d1b92223","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191906001-129999431.png","hash":"b35983ddc4eb736107d54bb99aa9becd502e0076","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191945273-633031838.png","hash":"bf3a4fcc7d50a744260d67644f41cfd0ee637538","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721192015456-1643726883.png","hash":"183ae78f876250bcac282efad9fae662e413f402","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721192408284-1212976555.png","hash":"a252880ee677cc7cc33386e053f3e97241c147cf","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721192416373-1191184138.png","hash":"d582f1be78be1d11bd533f09f69c3204e735762e","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721192426073-764010738.png","hash":"5ccba919adb302226e15e4c41b37bbe0ad78f1c3","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233240621-744853097.png","hash":"cf076df9306a3913fa6d5d0909e5c321b6d74bf4","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233443240-218493205.png","hash":"812873e213c74793c6c98835e7f2dd8e5b2a0227","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233422511-823096424.png","hash":"f6bce40cb37f575856082678d2aa89953252fa42","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233545215-1500378559.png","hash":"02ccb5e85e6e503ef1a8aeb6e3cc5e8d4c1703cf","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233627278-280180249.png","hash":"adf763547e3faf7e9308d69e17093b553e159b85","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233607522-1071796197.png","hash":"8e9e1560fbe6c3f7c467212d313dfdc3c83c8dde","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233729477-1011260416.png","hash":"8bb5266317ddb25241006d69815b511b1c9802f6","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531234251609-427743523.png","hash":"bf8e0816e419cbcdc9610e914117977f5b0a9950","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531234214780-944416990.png","hash":"2ec9842213bd7b315c6b32d469afc11375e1ddae","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125502046-569979710.png","hash":"6131cf2b9a2c69f44321469ad3773ac6a285a4f4","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203101693-1156912262.png","hash":"0ab219fd639a07ab0e00f7160586deab333a41b3","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221129160808235-2056680578.png","hash":"9415d0ad3e84b459861a57a4d5649e02337c16cd","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125502046-569979710.png","hash":"6131cf2b9a2c69f44321469ad3773ac6a285a4f4","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203101693-1156912262.png","hash":"0ab219fd639a07ab0e00f7160586deab333a41b3","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/Snipaste_2022-11-29_19-45-45.png","hash":"1da630d8b0e45a667c6eab624d16b992c3cd51c8","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220509164533939-754309439.png","hash":"dbbb20c1c0148fef056e7cbbd7ffe770a45f77b8","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220825152816881-2076432223.png","hash":"fc27a257ca9daa1a4cd52c0616090981cb476991","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220509165538782-356118260.png","hash":"b015f4296d9eda49d69173930a87da3caf250133","modified":1670495609755},{"_id":"public/2022/08/31/IDEA2021.3.3配置Maven（详细版）/2291368-20220831214155978-149933813.png","hash":"7d9d53ab05c01655f52539ddd35c302197fc8c85","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220825154015874-1170150107.png","hash":"f3620dcd2e64abf1142ae07834816d03f60bb8a7","modified":1670495609755},{"_id":"public/2022/08/31/IDEA2021.3.3配置Maven（详细版）/2291368-20220831215842519-392248897.png","hash":"e62737c64bffca43190b962a5edddb80bb7da93c","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/2291368-20220727100744970-1033816311.png","hash":"0631fa3e0cfa0e2ab2173bfb57822d8b8aed2eb6","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/2291368-20220727095323044-351600479.png","hash":"c0c42cb30c790540e5d17dcd290a50bb96c2d4e9","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/2291368-20220727101209601-1551997987.png","hash":"35e1953314f8af60e3a2d79122622b6160d81d48","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/2291368-20220729162029857-1803090724.png","hash":"25c0d9168c2a1841d5b92ff8065bb83f6d0f868f","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/2291368-20220111153243576-122447391.png","hash":"233b909701a54e07375b4dedfdc146208190170f","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/2291368-20220111153253987-2115695199.png","hash":"2054bb65a94b425896a68008bd7faa975c57e1a4","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193051710-860567096.png","hash":"8e67c353a968e22728167bda0e0c8c50b84f27c6","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/2291368-20220123223242579-694787793.png","hash":"5284781f33ef670bdff976912a026ee0cbd1f3f4","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193111863-1620087635.png","hash":"718137ad550238f86925e8e9413fa04067e40de9","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193030780-141851887.png","hash":"8454f7e1b59039718cd6c9a4b6723c1d0bb2e6e3","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193204294-338728882.png","hash":"907632546ad2e8a4f97b65f1c95e8fd935a15537","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-15-10.png","hash":"4f8d012a38834f36725ea4fe96189894b5ffc9e0","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-18-05.png","hash":"c33121434f0eb5a4782bb8d1d488e78f064c2bc6","modified":1670495609755},{"_id":"public/2022/11/03/Java集成ip2region2.x实现ip属地功能开发教程/Snipaste_2022-11-12_09-59-54.png","hash":"4b669bc01f5ad01df34b79534a0a0bb333e85d5c","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-06-50.png","hash":"eb9754bc87bb676c305cee5fecdd926b08160c39","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Maven安装及配置教程/Snipaste_2022-05-13_10-23-28.png","hash":"c6250aa1c421e8ad7a23f4e8c1a89103b4fc3258","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153050837-236704868.png","hash":"b23af1f3c5d6f6b0a149e316ff273781ebfc7202","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153304496-1553677349.png","hash":"474b40ba44babe71b08deb8eaec2adf02c840bef","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153245736-1598997349.png","hash":"d42a954601c574587cede6992d3bbcfae8a2f430","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153321534-953734721.png","hash":"e2bd91ee2455852656c4840dcb3f70fce1819c0f","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153328602-574621719.png","hash":"d2bd390424a8648603997a5e42b8014a02448190","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153352114-920323856.png","hash":"ac62ab743426246d76262f264f059ed4bc649897","modified":1670495609755},{"_id":"public/2022/11/26/Windows下RabbitMQ下载安装/2291368-20221126132613809-1055551774.png","hash":"8b4e6a498acb4331406fb0d8bc437ab8c45c9768","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111449065-658791468.png","hash":"617a212712a19e221ba60afd22c7a0f95d5e8ece","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111431587-147049396.png","hash":"87ca8937407f243ab2fa9f36f649494dba985a75","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111536255-363256586.png","hash":"6ebf2fde0407195df12aa7f389b8737a16e2e990","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111609438-1454013709.png","hash":"910d66b7dcc4e9ca0c2ea642dec11a65fbb0a723","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111630877-1836009720.png","hash":"e1f8bf9801948036d6976a18c33d8f5f6d3dcfde","modified":1670495609755},{"_id":"public/2022/06/30/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630212505473-523791158.png","hash":"0e04d2399b87a6af00db450fc83ab78a715e6505","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Redis解压包安装及配置教程/2291368-20220629183153636-1436499922.png","hash":"9f3b8ebfdc0bcd63c7b967e54f52e9aaa5305339","modified":1670495609755},{"_id":"public/2022/06/30/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630214014835-585689483.png","hash":"7616d2c246177273730d3f331bbc9340f7ba7d12","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Redis解压包安装及配置教程/2291368-20220629182352439-1266648941.png","hash":"e4b5339c4042824c00f56e7dc502e23ae188b375","modified":1670495609755},{"_id":"public/2022/03/24/房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227160905796-630586732.png","hash":"218483dba27d432d5e08c5ce0d1d8325e6601906","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161340344-243788459.png","hash":"3789c4da4d70396ad54a8d9aec90a785142617f1","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161454039-1238665013.png","hash":"0c9970ca639e3350244274f4bec941993dcf1545","modified":1670495609755},{"_id":"public/2022/02/20/检查笔记本电池消耗/2291368-20220220201236309-1100738058.png","hash":"d5217701314b4a6b7358953e763f0e36ec8ff4c5","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png","hash":"4f8a58da64c0d8136e2da8a6fdf90a4bd7831e3f","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/2291368-20220607215951418-741813094.png","hash":"c66340ced0a46fd4fee0dd01223dd6cabc62cf47","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png","hash":"6fda0464e8b2575a62c1709af5c8dac791c505b9","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png","hash":"37c1d5c48c2608cc0d33f57d4bbffc04bbba8eaf","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png","hash":"5086c07bdeab2cf09109005c2eb0e5091a4a193b","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/2291368-20220607215959604-689320937.png","hash":"13f1e1c944334cc24bd9b2b4491debe1b9d3cf42","modified":1670495609755},{"_id":"public/img/wechat.jpg","hash":"99cd2d49e9b5be0d05ae1b8f3cbea99c2a1a483e","modified":1670495609755},{"_id":"public/2022/06/18/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211352284-96900639.jpg","hash":"1874b8775661867c4ba5760fed3f21f996c155d8","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191652637-703350503.png","hash":"94bbb3ee08e46bc1e7c2e5d2caac6f046ebd7a8f","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191749922-146783398.png","hash":"302c4e77b328955a630432f1b1229f4c5b69bc27","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191538622-1742764931.png","hash":"745e93300e79afee7933c3da4ee21c388c991522","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721191926832-623454467.png","hash":"a55d0cff8eb8e00e8b200d4220171ec058e4feb0","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721192029555-1871185722.png","hash":"5dfa48cef1193656edca79a0418a3fd879001abf","modified":1670495609755},{"_id":"public/2022/07/21/AJ-Report小白配置大屏教程/2291368-20220721192358791-779277970.png","hash":"ef47ddb979e60f7efa77da9ef723dbeaeb7d84d5","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233223642-349131297.png","hash":"d0a3d249f305b83cddb6586df4687ff823fc4b67","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233337883-596107071.png","hash":"d96fdd6859174056fc2571513bdcb5f5f4764f8d","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233458824-948378071.png","hash":"13f0c0cdf81da6ff45ec81fa1fbdff467d8b0a14","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233522724-1594630480.png","hash":"f61d04c8e8fcf92ef88a332e3a81f0766b074ecc","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233817728-1392655527.png","hash":"77f7013eabe465c9fd2f58a967c99cd1fa5e98cd","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233757896-1394280158.png","hash":"ace2b4db444f8e21a85ae8fdf25457b2eac257c4","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233742049-1219964528.png","hash":"3dd3f04e0874abfb44a6301e38c46a64f6afe2ef","modified":1670495609755},{"_id":"public/2022/11/22/IDEA设置单行注释符在代码行首部/2291368-20220921110702758-278199113.png","hash":"de55905978f6d9b2a2ac11ec1f9b0dcbe232ac50","modified":1670495609755},{"_id":"public/2022/11/22/IDEA设置单行注释符在代码行首部/2291368-20220921110657870-1510098922.png","hash":"22edc774304e9045f171cbf7dc2d0932e2e7d642","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220509164251511-317252381.png","hash":"9c15d19d590d7fd2594767b6cfd52a83054d760c","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220509164525444-1888185146.png","hash":"1563a56873bb996e2c526beb42b1401194c86708","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220825152855385-1081507081.png","hash":"9370b0f3b063605bce33ad7c58974f654c1eae11","modified":1670495609755},{"_id":"public/2022/08/31/IDEA2021.3.3配置Maven（详细版）/2291368-20220831215848336-1055632127.png","hash":"1b1f80a619cb80f261c87b7efcd8f13c7214069d","modified":1670495609755},{"_id":"public/2022/08/31/IDEA2021.3.3配置Maven（详细版）/2291368-20220831214203083-833526346.png","hash":"d9afb4fb80ea3120f4640b90f4329d4a82b5f20f","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/2291368-20220727095004887-1021333814.png","hash":"add7e8f3dd24624d96bad9b33e0eeb1dc6b5be4e","modified":1670495609755},{"_id":"public/2022/08/30/IDEA热部署插件JRebel的安装与使用/2291368-20220727101157568-1260673146.png","hash":"85c93da3ce37f78bfb11a0573d07b2db2dd1f649","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/2291368-20220111152826346-1412372719.png","hash":"61dfe4644251e1dd67ad0e1b0248154f7a16631f","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/2291368-20220111153409714-1355163455.png","hash":"efa31b9ad57cb084f285b2492998091b174bdf93","modified":1670495609755},{"_id":"public/2022/01/11/Java基础笔记/2291368-20221208094727144-1088422726.png","hash":"bf4ceaf8c62f6be4eedea5325de2bcfe10f4ba0a","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153217942-618302738.png","hash":"9216ba6ea1d2283edccf2d94ddc8e2e16e4fbc96","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153255337-1553269531.png","hash":"b67546a59ee09ee55c92429e9431f1514b9ae678","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153308813-1108409909.png","hash":"e0f0528a84631538e6bbb2ec8aba580768d335ca","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153316742-1509047586.png","hash":"165b54e1e5aa0d5c7f5cbb156ac2373ab52edb16","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153334434-1909134036.png","hash":"5698302c0113ccb4e243f1963ec991276253d080","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153338693-731479448.png","hash":"ad843fe4b5ec1fa9961c0429f90ebab04a02a8c8","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153343093-1497482917.png","hash":"52fc79aad63f40f78ab9c045dc6f01a5859eecb3","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153359657-726233578.png","hash":"2cc51098dbfd21a749d7f15e7ee912ef8a2fb22c","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153626401-341014184.png","hash":"adf8e41c5c6873d2d1bf00fd11db2708a979688b","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111124820-511486595.png","hash":"c73ed3bca2098ef8c8a7ccb9287b8134b0bd2280","modified":1670495609755},{"_id":"public/2022/06/30/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630213440738-1103491974.png","hash":"9ced8544907cf082fcc44e256d4167f4b4d6e3a4","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Redis解压包安装及配置教程/2291368-20220630111206363-1150534863.png","hash":"49a8d25e72a6867038ab3d1cb9c2b93f4ca226bc","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Redis解压包安装及配置教程/2291368-20220630140021409-1360003831.png","hash":"aeae7f17bb2431892addfd6ca081fda640cdb0ed","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161507343-2040709033.png","hash":"89207a442742dc9b4f434203ad1dba767e0d5ad7","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png","hash":"e062bef14d2086e68467c445ed90308abbfdd294","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png","hash":"fa4f52f05841ce1bec0052a1704962c2b0c0e740","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png","hash":"b3f64ff4ee8d96d0f058ecfbf583f5fa82bbf099","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png","hash":"09adede5d2fd75e02e6113ee452ede94a92b96bf","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png","hash":"9e5cfc9d77c6da99537197a924cfed35a7a0c24a","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png","hash":"f08f9bac3628d40065de1a6d698f9caba49c18a0","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png","hash":"a6297eebc09670d90596050a4403f3c66b927c02","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/2291368-20220607215929483-1525301003.png","hash":"d93dec3c35f276db56a3e133ac34b90cbf6dd05f","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/2291368-20220607220047549-1268062378.png","hash":"642d608f72bd0d17639330407816ffb9acc0074e","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/2291368-20220607220127585-1741352083.png","hash":"d80ba60e649652cf35b01ea99401bf5dd8226a74","modified":1670495609755},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1670495609755},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1670495609755},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1670495609755},{"_id":"public/js/search/algolia.js","hash":"9feb248552667c53ce1b19bc7a295215f8c77008","modified":1670495609755},{"_id":"public/css/index.css","hash":"312332497940a8496b8480ad19ee07b7235a09bf","modified":1670495609755},{"_id":"public/js/tw_cn.js","hash":"5c1391c9e96950833641f178b5f23c58422fb659","modified":1670495609755},{"_id":"public/js/main.js","hash":"189359400f6cd4d814ca9ebb5a27b96f7031bce3","modified":1670495609755},{"_id":"public/img/thumb/thumb_5.png","hash":"b902a39539d727fd550622b22d73bff02f2d6458","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203107165-240361835.png","hash":"4e749f9e2a45b6cce9ad94d1799a5eb091dc7da3","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203107165-240361835.png","hash":"4e749f9e2a45b6cce9ad94d1799a5eb091dc7da3","modified":1670495609755},{"_id":"public/2022/05/09/IDEA2021.3安装及破解教程/2291368-20220825153608481-312323332.png","hash":"b53efa20109d60824f03b231ab509c0e60866aac","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193230336-1133392836.png","hash":"df4d212ebede551f0051643ce217da1a89c51193","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193243736-1465458166.png","hash":"108d2eaa71e40ee07a56eb5d08c5c8c2b0ca84b2","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153404682-549087824.png","hash":"8219b4113b0044e1a5c2c3a1b9cc51b9a3dfce83","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153915252-1831743221.png","hash":"bdb492d4d267d51947923743cf05f3337937586b","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624110939600-1386441975.png","hash":"211316a9ffef2c80e52a99fc00f2e3662b45255a","modified":1670495609755},{"_id":"public/2022/11/26/Windows下RabbitMQ下载安装/2291368-20221126132646873-1365415137.png","hash":"80b899be890bddabcefb681eeec80e5d6231b5a3","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624131402573-1864608199.png","hash":"d9aca3c66b27ad6983830b2573cb331686a7a483","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png","hash":"7f7b2cf0e9c89e04678d513920085e5bc64e5b0a","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png","hash":"b8b89ffe580f3e2d41e10f9cae30f44e64dc9122","modified":1670495609755},{"_id":"public/2022/07/21/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png","hash":"1273cd8c3c2f12035923312f7d52aaefde981cfe","modified":1670495609755},{"_id":"public/2022/06/29/微 PE 制作 U 盘启动盘教程/2291368-20220607220059511-1290163714.png","hash":"1763a575b281646e783cdf87744fea305da5e4fd","modified":1670495609755},{"_id":"public/img/thumb/thumb_7.png","hash":"81f4dda4bf0e8d6420d47af7ee0711cca2afa059","modified":1670495609755},{"_id":"public/2022/06/18/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211750061-803600409.jpg","hash":"4adec8ecc79244874085785b0ec6f7ec93fa0776","modified":1670495609755},{"_id":"public/2022/06/18/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211144391-144641139.jpg","hash":"d756a589528e7cc9b3666c045e1317bab7dcdc6f","modified":1670495609755},{"_id":"public/2022/06/18/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211447243-2064752888.jpg","hash":"fe36016f92a17e8840db9594117a1d41bb217e26","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233356912-836859301.png","hash":"1ef9c889908f6f49c795416c961f7a086cb35313","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233838933-422483785.png","hash":"7aca5212eb6d8d4926afff4419bea9e084627336","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125806511-17842588.png","hash":"0d3606f35e6be48766ddd8bc35ab636063e4deca","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125806511-17842588.png","hash":"0d3606f35e6be48766ddd8bc35ab636063e4deca","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123152941797-1053419929.png","hash":"b4ec52e601092b8da20b944cc1cfd3644fcaa606","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153346388-2038670210.png","hash":"7ccf38d19b0efcb6fd91e5200ea04d834b4611e0","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161300895-837839242.png","hash":"0aa2aea2eff824d5772bfbf6bc6b917ef08c1e0e","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161422145-1659631518.png","hash":"8da0a429153ed7a01db114a1a79ea6df1c07fc81","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161517671-301035636.png","hash":"a42138d87c8c582cd19dc00b782e8ff4942a4315","modified":1670495609755},{"_id":"public/img/thumb/thumb_6.png","hash":"e49768f43ba6560b8ae3d587334f3f08bb644877","modified":1670495609755},{"_id":"public/2022/11/23/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153356066-462304454.png","hash":"c8395729cf1ac88e8cda4f663d7e8af4852cd942","modified":1670495609755},{"_id":"public/2022/11/26/Windows下RabbitMQ下载安装/2291368-20221113170308568-904817832.png","hash":"311bfcd0f05bc2a0787b88336bd61aa613d33635","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161409227-1151488737.png","hash":"d0743813e550e0b5fab4697575e8ae2ab8cf3d09","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161326879-2039517975.png","hash":"30d9eb4c7831f7d98c7f00de5056d3306a071b4c","modified":1670495609755},{"_id":"public/img/alipay.jpg","hash":"bea56bf6d7d585db6451c5fbdd972af6c4bd649d","modified":1670495609755},{"_id":"public/img/thumb/thumb_1.png","hash":"6a52c21003a38cceb6e9fd5f9c10908c0c7298bc","modified":1670495609755},{"_id":"public/2022/06/18/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211907063-2100004146.jpg","hash":"2d344d093f8bc19acd29254b39dad322a88bfc73","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233644620-1741914965.png","hash":"74931310725eae1074afcab3afb20921867755a5","modified":1670495609755},{"_id":"public/2022/06/29/Windows下Java开发环境安装与配置教程/2291368-20220629193139564-1366743433.png","hash":"dff47b685d467a94761b2a9c18ca16c55b93a61b","modified":1670495609755},{"_id":"public/2022/06/29/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111210435-1959209711.png","hash":"80efe472f514a7f4fb61506314e61b358097ea37","modified":1670495609755},{"_id":"public/img/thumb/thumb_2.png","hash":"b5cc56628754c2c7b4dbdf5c8f6df4b7bb980238","modified":1670495609755},{"_id":"public/2022/06/30/Windows下Redis解压包安装及配置教程/2291368-20220630111940288-138478437.png","hash":"8589b19a1f62628f52e307b0a2e5a43b220b9887","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161447243-1322403015.png","hash":"b3fe0d0f3e6283bc91078bbf0702a8a8c92a19fa","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161500321-1046594983.png","hash":"0862aa54c606ce837423a43d1e13c22c9110d817","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161439551-1411541496.png","hash":"597bf09a8aa814c6f3a7449f5534da328a573ad2","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161431578-1856504518.png","hash":"07d71a9f3f805345e7f96ae2ec3da6e07c4ebb7c","modified":1670495609755},{"_id":"public/img/thumb/thumb_4.png","hash":"4b6a0b3313a33c587049bb6e94d3cc269e37249f","modified":1670495609755},{"_id":"public/img/wallhaven-m9xyg8.jpg","hash":"d438c78ce1e5329474d06925697290c3f9a4feac","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161315069-1517471827.png","hash":"18927fe3dbb8715684a3ef6a2d1b288ab6a1318b","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161532207-1251520737.png","hash":"150732ea61985c937089238c5c505d5230159bd7","modified":1670495609755},{"_id":"public/2022/05/31/Hexo+Github免费搭建博客教程/2291368-20220531233317633-390444962.png","hash":"b41ae8b734bfa101d24498c2dceba6903b7ea8fc","modified":1670495609755},{"_id":"public/2022/03/24/房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227144414328-1953458094.png","hash":"2fdf246cdb5f1909f0824f95870a50f257d0fa78","modified":1670495609755},{"_id":"public/2022/02/22/Markdown语法/2291368-20220103211113078-6410979.jpg","hash":"8f23eed452a2facf60148d3794b37318551879c4","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203047705-1415002471.png","hash":"2260d42aceb621c853722f856868ebbccfb79b82","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203047705-1415002471.png","hash":"2260d42aceb621c853722f856868ebbccfb79b82","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203055675-805963954.png","hash":"a138f964961fb9b484a1398ee5704734d511c03a","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203055675-805963954.png","hash":"a138f964961fb9b484a1398ee5704734d511c03a","modified":1670495609755},{"_id":"public/2022/02/20/检查笔记本电池消耗/2291368-20220220200703803-528834853.png","hash":"c553514ef35dd960eeaef62b93d55701a02aee26","modified":1670495609755},{"_id":"public/2022/02/20/检查笔记本电池消耗/2291368-20220220200725104-972245815.png","hash":"68d8990a2ee45e7e628e5ff6844ccb4b7e146766","modified":1670495609755},{"_id":"public/2022/11/22/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png","hash":"14cbe50dadb3a52ab281dcb73627ef28d80a6910","modified":1670495609755},{"_id":"public/2022/11/19/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125458669-276341619.png","hash":"302549bcbefc51eaf86a799b364dd47eed0c795c","modified":1670495609755},{"_id":"public/2022/11/19/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125458669-276341619.png","hash":"302549bcbefc51eaf86a799b364dd47eed0c795c","modified":1670495609755}],"Category":[{"name":"categories","_id":"clbexyfta0004sw6x0umq92h7"},{"name":"个人博客","_id":"clbexyftj000ssw6x3761c23k"},{"name":"工具IDE","_id":"clbexyftq001isw6x1fvl43tv"},{"name":"学习笔记","_id":"clbexyftt0023sw6x9vmw4qa7"},{"name":"环境","_id":"clbexyftu0028sw6xa9jmh534"},{"name":"中间件","_id":"clbexyftv002jsw6xgptf4xdf"},{"name":"项目梳理","_id":"clbexyfu2003isw6x1czr87z2"}],"Data":[{"_id":"link","data":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}]},{"_id":"widget","data":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}],"Page":[{"title":"关于我","date":"2022-11-15T10:10:21.000Z","type":"about","comments":0,"_content":"\n## 👲 基本信息\n\n- Name: CodeRain\n- Age: 23\n- Address: NanJing\n- Github: https://github.com/Code7Rain\n- Blog: https://code7rain.github.io/\n- CSDN: https://blog.csdn.net/qq_44138925\n- 博客园: https://www.cnblogs.com/Code-Rain/\n- Hobbies: Badminton\n- motto: 古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志。\n\n## 🔨 技术栈\n\n|  🏅基本掌握  |   💪正在努力    | 🗓️未来可期 |\n| :---------: | :------------: | :-------: |\n|    ☕Java    |    🐳Docker     |  🐘Hadoop  |\n|   🐬MySQL    |     🐚Shell     |   🐝Hive   |\n|   💾Redis    |      🐖Pig      |  ⭐Spark   |\n|   🐧Linux    | 🔍Elasticsearch |  🔯React   |\n|    💠git     |   📫RabbitMQ    |   🔰Vue    |\n|   🧮Ruoyi    |    👨‍🌾Nacos     |  🐍Python  |\n|   ⏱️Nginx    |                |           |\n|    🌐HTML    |                |           |\n| 🛡️JavaScript |                |           |\n|  📃Markdown  |                |           |\n|  🍃uni-app   |                |           |\n\n## 💌 联系博主\n\n- qq: 226114246\n\n- 公众号: CodeRain\n\n- email: coderain2022@163.com\n\n\n\n  \n\n\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2022-11-15 18:10:21\ntype: \"about\"\ncomments: false\n---\n\n## 👲 基本信息\n\n- Name: CodeRain\n- Age: 23\n- Address: NanJing\n- Github: https://github.com/Code7Rain\n- Blog: https://code7rain.github.io/\n- CSDN: https://blog.csdn.net/qq_44138925\n- 博客园: https://www.cnblogs.com/Code-Rain/\n- Hobbies: Badminton\n- motto: 古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志。\n\n## 🔨 技术栈\n\n|  🏅基本掌握  |   💪正在努力    | 🗓️未来可期 |\n| :---------: | :------------: | :-------: |\n|    ☕Java    |    🐳Docker     |  🐘Hadoop  |\n|   🐬MySQL    |     🐚Shell     |   🐝Hive   |\n|   💾Redis    |      🐖Pig      |  ⭐Spark   |\n|   🐧Linux    | 🔍Elasticsearch |  🔯React   |\n|    💠git     |   📫RabbitMQ    |   🔰Vue    |\n|   🧮Ruoyi    |    👨‍🌾Nacos     |  🐍Python  |\n|   ⏱️Nginx    |                |           |\n|    🌐HTML    |                |           |\n| 🛡️JavaScript |                |           |\n|  📃Markdown  |                |           |\n|  🍃uni-app   |                |           |\n\n## 💌 联系博主\n\n- qq: 226114246\n\n- 公众号: CodeRain\n\n- email: coderain2022@163.com\n\n\n\n  \n\n\n\n","updated":"2022-12-08T10:18:14.426Z","path":"about/index.html","layout":"page","_id":"clbexyft30000sw6x32oz71b3","content":"<h2 id=\"👲-基本信息\"><a href=\"#👲-基本信息\" class=\"headerlink\" title=\"👲 基本信息\"></a>👲 基本信息</h2><ul>\n<li>Name: CodeRain</li>\n<li>Age: 23</li>\n<li>Address: NanJing</li>\n<li>Github: <a href=\"https://github.com/Code7Rain\">https://github.com/Code7Rain</a></li>\n<li>Blog: <a href=\"https://code7rain.github.io/\">https://code7rain.github.io/</a></li>\n<li>CSDN: <a href=\"https://blog.csdn.net/qq_44138925\">https://blog.csdn.net/qq_44138925</a></li>\n<li>博客园: <a href=\"https://www.cnblogs.com/Code-Rain/\">https://www.cnblogs.com/Code-Rain/</a></li>\n<li>Hobbies: Badminton</li>\n<li>motto: 古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志。</li>\n</ul>\n<h2 id=\"🔨-技术栈\"><a href=\"#🔨-技术栈\" class=\"headerlink\" title=\"🔨 技术栈\"></a>🔨 技术栈</h2><table>\n<thead>\n<tr>\n<th align=\"center\">🏅基本掌握</th>\n<th align=\"center\">💪正在努力</th>\n<th align=\"center\">🗓️未来可期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">☕Java</td>\n<td align=\"center\">🐳Docker</td>\n<td align=\"center\">🐘Hadoop</td>\n</tr>\n<tr>\n<td align=\"center\">🐬MySQL</td>\n<td align=\"center\">🐚Shell</td>\n<td align=\"center\">🐝Hive</td>\n</tr>\n<tr>\n<td align=\"center\">💾Redis</td>\n<td align=\"center\">🐖Pig</td>\n<td align=\"center\">⭐Spark</td>\n</tr>\n<tr>\n<td align=\"center\">🐧Linux</td>\n<td align=\"center\">🔍Elasticsearch</td>\n<td align=\"center\">🔯React</td>\n</tr>\n<tr>\n<td align=\"center\">💠git</td>\n<td align=\"center\">📫RabbitMQ</td>\n<td align=\"center\">🔰Vue</td>\n</tr>\n<tr>\n<td align=\"center\">🧮Ruoyi</td>\n<td align=\"center\">👨‍🌾Nacos</td>\n<td align=\"center\">🐍Python</td>\n</tr>\n<tr>\n<td align=\"center\">⏱️Nginx</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">🌐HTML</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">🛡️JavaScript</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">📃Markdown</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">🍃uni-app</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<h2 id=\"💌-联系博主\"><a href=\"#💌-联系博主\" class=\"headerlink\" title=\"💌 联系博主\"></a>💌 联系博主</h2><ul>\n<li><p>qq: 226114246</p>\n</li>\n<li><p>公众号: CodeRain</p>\n</li>\n<li><p>email: <a href=\"mailto:&#x63;&#x6f;&#100;&#101;&#x72;&#97;&#x69;&#110;&#x32;&#48;&#x32;&#x32;&#x40;&#x31;&#54;&#x33;&#x2e;&#99;&#x6f;&#x6d;\">&#x63;&#x6f;&#100;&#101;&#x72;&#97;&#x69;&#110;&#x32;&#48;&#x32;&#x32;&#x40;&#x31;&#54;&#x33;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg","excerpt":"","more":"<h2 id=\"👲-基本信息\"><a href=\"#👲-基本信息\" class=\"headerlink\" title=\"👲 基本信息\"></a>👲 基本信息</h2><ul>\n<li>Name: CodeRain</li>\n<li>Age: 23</li>\n<li>Address: NanJing</li>\n<li>Github: <a href=\"https://github.com/Code7Rain\">https://github.com/Code7Rain</a></li>\n<li>Blog: <a href=\"https://code7rain.github.io/\">https://code7rain.github.io/</a></li>\n<li>CSDN: <a href=\"https://blog.csdn.net/qq_44138925\">https://blog.csdn.net/qq_44138925</a></li>\n<li>博客园: <a href=\"https://www.cnblogs.com/Code-Rain/\">https://www.cnblogs.com/Code-Rain/</a></li>\n<li>Hobbies: Badminton</li>\n<li>motto: 古今之成大事者，不惟有超世之才，亦必有坚忍不拔之志。</li>\n</ul>\n<h2 id=\"🔨-技术栈\"><a href=\"#🔨-技术栈\" class=\"headerlink\" title=\"🔨 技术栈\"></a>🔨 技术栈</h2><table>\n<thead>\n<tr>\n<th align=\"center\">🏅基本掌握</th>\n<th align=\"center\">💪正在努力</th>\n<th align=\"center\">🗓️未来可期</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"center\">☕Java</td>\n<td align=\"center\">🐳Docker</td>\n<td align=\"center\">🐘Hadoop</td>\n</tr>\n<tr>\n<td align=\"center\">🐬MySQL</td>\n<td align=\"center\">🐚Shell</td>\n<td align=\"center\">🐝Hive</td>\n</tr>\n<tr>\n<td align=\"center\">💾Redis</td>\n<td align=\"center\">🐖Pig</td>\n<td align=\"center\">⭐Spark</td>\n</tr>\n<tr>\n<td align=\"center\">🐧Linux</td>\n<td align=\"center\">🔍Elasticsearch</td>\n<td align=\"center\">🔯React</td>\n</tr>\n<tr>\n<td align=\"center\">💠git</td>\n<td align=\"center\">📫RabbitMQ</td>\n<td align=\"center\">🔰Vue</td>\n</tr>\n<tr>\n<td align=\"center\">🧮Ruoyi</td>\n<td align=\"center\">👨‍🌾Nacos</td>\n<td align=\"center\">🐍Python</td>\n</tr>\n<tr>\n<td align=\"center\">⏱️Nginx</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">🌐HTML</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">🛡️JavaScript</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">📃Markdown</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\">🍃uni-app</td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n</tbody></table>\n<h2 id=\"💌-联系博主\"><a href=\"#💌-联系博主\" class=\"headerlink\" title=\"💌 联系博主\"></a>💌 联系博主</h2><ul>\n<li><p>qq: 226114246</p>\n</li>\n<li><p>公众号: CodeRain</p>\n</li>\n<li><p>email: <a href=\"mailto:&#x63;&#x6f;&#100;&#101;&#x72;&#97;&#x69;&#110;&#x32;&#48;&#x32;&#x32;&#x40;&#x31;&#54;&#x33;&#x2e;&#99;&#x6f;&#x6d;\">&#x63;&#x6f;&#100;&#101;&#x72;&#97;&#x69;&#110;&#x32;&#48;&#x32;&#x32;&#x40;&#x31;&#54;&#x33;&#x2e;&#99;&#x6f;&#x6d;</a></p>\n</li>\n</ul>\n"},{"title":"分类","date":"2018-01-04T16:00:00.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2018-01-05 00:00:00\ntype: \"categories\"\ncomments: false\n---\n","updated":"2022-11-17T06:39:15.570Z","path":"categories/index.html","layout":"page","_id":"clbexyft80002sw6xbze42hto","content":"","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":""},{"title":"优站锦集","date":"2022-12-01T08:34:46.000Z","comments":0,"_content":"\n","source":"collection/index.md","raw":"---\ntitle: 优站锦集\ndate: 2022-12-01 16:34:46\ncomments: false\n---\n\n","updated":"2022-12-01T08:46:23.879Z","path":"collection/index.html","layout":"page","_id":"clbexyftb0006sw6x9bup7tta","content":"","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":""},{"title":"图集","date":"2022-11-15T10:16:46.000Z","type":"gallery","comments":0,"_content":"\n{% gallery %}\n![](https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg)\n\n![](https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg)\n\n![](https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg)\n\n![](https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg)\n\n\n{% endgallery %}\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁纸' '收藏的一些壁纸' '/gallery/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup 'GIRL' '关于GIRL的图片' '/gallery/girl' https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg %}\n</div>\n","source":"gallery/index.md","raw":"---\ntitle: 图集\ndate: 2022-11-15 18:16:46\ntype: \"gallery\"\ncomments: false\n---\n\n{% gallery %}\n![](https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg)\n\n![](https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg)\n\n![](https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg)\n\n![](https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg)\n\n\n{% endgallery %}\n\n<div class=\"gallery-group-main\">\n{% galleryGroup '壁纸' '收藏的一些壁纸' '/gallery/wallpaper' https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png %}\n{% galleryGroup 'GIRL' '关于GIRL的图片' '/gallery/girl' https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg %}\n</div>\n","updated":"2022-12-01T14:21:16.581Z","path":"gallery/index.html","layout":"page","_id":"clbexyftc0008sw6x3ayja3c3","content":"<div class=\"fj-gallery\"><p><img src=\"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg\"></p>\n          </div>\n\n<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/gallery/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">GIRL</div>\n  <p>关于GIRL的图片</p>\n  <a href='/gallery/girl'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg\"></p>\n          </div>\n\n<div class=\"gallery-group-main\">\n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">壁纸</div>\n  <p>收藏的一些壁纸</p>\n  <a href='/gallery/wallpaper'></a>\n  </figcaption>\n  </figure>\n  \n\n  <figure class=\"gallery-group\">\n  <img class=\"gallery-group-img no-lightbox\" src='https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg' alt=\"Group Image Gallery\">\n  <figcaption>\n  <div class=\"gallery-group-name\">GIRL</div>\n  <p>关于GIRL的图片</p>\n  <a href='/gallery/girl'></a>\n  </figcaption>\n  </figure>\n  \n</div>\n"},{"_content":"/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}","source":"css/transpancy.css","raw":"/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}","date":"2022-12-01T12:29:59.221Z","updated":"2022-12-01T12:29:59.221Z","path":"css/transpancy.css","layout":"false","title":"","comments":1,"_id":"clbexyftd000asw6x45cp498e","content":"/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}"},{"title":"关于本站","date":"2022-11-30T06:55:13.000Z","comments":0,"_content":"\n## 💘 关于网站\n\n> \n>Hexo 框架 + Butterfly 主题\n>\n> 博客中的部分图片源于网络，侵删\n>\n> 本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处\n>\n> 欢迎小伙伴们交换友链，具体说明可在 友链页 查看。\n\n\n\n## 📖 站点日志\n\n{% timeline 更新日志,blue %}\n\n<!-- timeline 2022.12.07-08 -->\n\n{% label 增加 orange %} 文章内容，迁移自博客园\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.12.03 -->\n\n{% label 增加 orange %} 本地图片存储 post_asset_folder: true\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.12.01 -->\n\n{% label 增加 orange %} 侧边栏公众号、QQ群二维码\n\n{% label 增加 orange %} 导航菜单栏 养生 优站\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.11.30 -->\n\n{% label 优化 orange %} 导航菜单栏 关于我 关于网站\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.11.29 -->\n\n{% label 增加 orange %} 豆瓣图书电影 页面\n\n{% label 优化 orange %} 导航菜单栏 搜索 功能\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.11.09 -->\n\n{% label 重构 orange %} 主题为 butterfly4.5.1\n\n{% label 增加 orange %} 音乐播放器\n\n{% label 增加 orange %} 站点访问统计\n\n{% label 增加 orange %} 赞赏博主\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.06.09 -->\n\n{% label 重构 orange %} 建站使用kratos-rebirth\n\n<!-- endtimeline -->\n\n<!-- timeline 2021.03.19 -->\n\n{% label 创建 orange %} hexo 博客 \n\n{% label 创建 orange %} Github仓库\n\n{% label 增加 orange %} 使用Next主题\n\n<!-- endtimeline -->\n\n{% endtimeline %}\n\n\n\n\n## 🙋 免责声明\n\n> 本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。\n\n>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。\n","source":"site/index.md","raw":"---\ntitle: 关于本站\ndate: 2022-11-30 14:55:13\ncomments: false\n---\n\n## 💘 关于网站\n\n> \n>Hexo 框架 + Butterfly 主题\n>\n> 博客中的部分图片源于网络，侵删\n>\n> 本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处\n>\n> 欢迎小伙伴们交换友链，具体说明可在 友链页 查看。\n\n\n\n## 📖 站点日志\n\n{% timeline 更新日志,blue %}\n\n<!-- timeline 2022.12.07-08 -->\n\n{% label 增加 orange %} 文章内容，迁移自博客园\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.12.03 -->\n\n{% label 增加 orange %} 本地图片存储 post_asset_folder: true\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.12.01 -->\n\n{% label 增加 orange %} 侧边栏公众号、QQ群二维码\n\n{% label 增加 orange %} 导航菜单栏 养生 优站\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.11.30 -->\n\n{% label 优化 orange %} 导航菜单栏 关于我 关于网站\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.11.29 -->\n\n{% label 增加 orange %} 豆瓣图书电影 页面\n\n{% label 优化 orange %} 导航菜单栏 搜索 功能\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.11.09 -->\n\n{% label 重构 orange %} 主题为 butterfly4.5.1\n\n{% label 增加 orange %} 音乐播放器\n\n{% label 增加 orange %} 站点访问统计\n\n{% label 增加 orange %} 赞赏博主\n\n<!-- endtimeline -->\n\n<!-- timeline 2022.06.09 -->\n\n{% label 重构 orange %} 建站使用kratos-rebirth\n\n<!-- endtimeline -->\n\n<!-- timeline 2021.03.19 -->\n\n{% label 创建 orange %} hexo 博客 \n\n{% label 创建 orange %} Github仓库\n\n{% label 增加 orange %} 使用Next主题\n\n<!-- endtimeline -->\n\n{% endtimeline %}\n\n\n\n\n## 🙋 免责声明\n\n> 本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。\n\n>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。\n","updated":"2022-12-08T10:19:23.902Z","path":"site/index.html","layout":"page","_id":"clbexyftf000fsw6x06yrgwg3","content":"<h2 id=\"💘-关于网站\"><a href=\"#💘-关于网站\" class=\"headerlink\" title=\"💘 关于网站\"></a>💘 关于网站</h2><blockquote>\n<p>Hexo 框架 + Butterfly 主题</p>\n<p>博客中的部分图片源于网络，侵删</p>\n<p>本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处</p>\n<p>欢迎小伙伴们交换友链，具体说明可在 友链页 查看。</p>\n</blockquote>\n<h2 id=\"📖-站点日志\"><a href=\"#📖-站点日志\" class=\"headerlink\" title=\"📖 站点日志\"></a>📖 站点日志</h2><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.12.07-08</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  文章内容，迁移自博客园</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.12.03</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  本地图片存储 post_asset_folder: true</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.12.01</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  侧边栏公众号、QQ群二维码</p>\n<p><mark class=\"hl-label orange\">增加</mark>  导航菜单栏 养生 优站</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.30</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">优化</mark>  导航菜单栏 关于我 关于网站</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.29</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  豆瓣图书电影 页面</p>\n<p><mark class=\"hl-label orange\">优化</mark>  导航菜单栏 搜索 功能</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.09</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">重构</mark>  主题为 butterfly4.5.1</p>\n<p><mark class=\"hl-label orange\">增加</mark>  音乐播放器</p>\n<p><mark class=\"hl-label orange\">增加</mark>  站点访问统计</p>\n<p><mark class=\"hl-label orange\">增加</mark>  赞赏博主</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.06.09</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">重构</mark>  建站使用kratos-rebirth</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021.03.19</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">创建</mark>  hexo 博客 </p>\n<p><mark class=\"hl-label orange\">创建</mark>  Github仓库</p>\n<p><mark class=\"hl-label orange\">增加</mark>  使用Next主题</p>\n</div></div></div>\n\n\n\n\n<h2 id=\"🙋-免责声明\"><a href=\"#🙋-免责声明\" class=\"headerlink\" title=\"🙋 免责声明\"></a>🙋 免责声明</h2><blockquote>\n<p>本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。</p>\n</blockquote>\n<blockquote>\n<p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg","excerpt":"","more":"<h2 id=\"💘-关于网站\"><a href=\"#💘-关于网站\" class=\"headerlink\" title=\"💘 关于网站\"></a>💘 关于网站</h2><blockquote>\n<p>Hexo 框架 + Butterfly 主题</p>\n<p>博客中的部分图片源于网络，侵删</p>\n<p>本博客文章采用 CC BY-NC-SA 4.0 协议，转载请注明出处</p>\n<p>欢迎小伙伴们交换友链，具体说明可在 友链页 查看。</p>\n</blockquote>\n<h2 id=\"📖-站点日志\"><a href=\"#📖-站点日志\" class=\"headerlink\" title=\"📖 站点日志\"></a>📖 站点日志</h2><div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>更新日志</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.12.07-08</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  文章内容，迁移自博客园</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.12.03</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  本地图片存储 post_asset_folder: true</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.12.01</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  侧边栏公众号、QQ群二维码</p>\n<p><mark class=\"hl-label orange\">增加</mark>  导航菜单栏 养生 优站</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.30</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">优化</mark>  导航菜单栏 关于我 关于网站</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.29</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">增加</mark>  豆瓣图书电影 页面</p>\n<p><mark class=\"hl-label orange\">优化</mark>  导航菜单栏 搜索 功能</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.11.09</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">重构</mark>  主题为 butterfly4.5.1</p>\n<p><mark class=\"hl-label orange\">增加</mark>  音乐播放器</p>\n<p><mark class=\"hl-label orange\">增加</mark>  站点访问统计</p>\n<p><mark class=\"hl-label orange\">增加</mark>  赞赏博主</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2022.06.09</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">重构</mark>  建站使用kratos-rebirth</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2021.03.19</p>\n</div></div><div class='timeline-item-content'><p><mark class=\"hl-label orange\">创建</mark>  hexo 博客 </p>\n<p><mark class=\"hl-label orange\">创建</mark>  Github仓库</p>\n<p><mark class=\"hl-label orange\">增加</mark>  使用Next主题</p>\n</div></div></div>\n\n\n\n\n<h2 id=\"🙋-免责声明\"><a href=\"#🙋-免责声明\" class=\"headerlink\" title=\"🙋 免责声明\"></a>🙋 免责声明</h2><blockquote>\n<p>本站以分享互联网经验、学习知识为目的，所有文章所涉及使用的工具、资源等均来自互联网， 仅供学习和研究使用，版权归作者所有，如果无意之中侵犯了您的版权，请来信告知。本站将在第一时间删除！另外， 本站内的文章多为博主原创，大部分是由CSDN平台搬迁过来，仅供学习交流之用，不参与商业用途。</p>\n</blockquote>\n<blockquote>\n<p>遵守相关法律法规，由于本站资源部分来源于网络，开发也是使用开源模板，故无法核实资源侵权的真实性，无论出于何种目的要求本站删除内容，“您”均需要提供相关证明，否则不予处理。</p>\n</blockquote>\n"},{"title":"标签","date":"2018-01-04T16:00:00.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2018-01-05 00:00:00\ntype: \"tags\"\ncomments: false\n---\n","updated":"2022-11-17T06:39:25.660Z","path":"tags/index.html","layout":"page","_id":"clbexyftg000hsw6x0gw52ato","content":"","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":""},{"title":"养生之道","date":"2022-12-01T08:33:21.000Z","comments":0,"_content":"\n\n\n<iframe src=\"//player.bilibili.com/player.html?aid=903281707&bvid=BV1xP4y197wZ&cid=911954704&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n五款口腔溃疡外用药\n\n\n\n（1）壳聚糖口腔溃疡凝胶\n\n作用原理：在创口表面形成保护膜，阻碍物理、化学刺激，使人几乎没有感觉。\n\n缺点：需要经常补涂\n\n\n\n（2）口腔溃疡膜\n\n效果与（1）相似\n\n用法：贴在创口上\n\n缺点：个头大，壳比较硬\n\n\n\n（3）醋酸地塞米松口腔贴片\n\n作用原理：物理隔绝+治疗\n\n缺点：地塞米松是一种激素，不建议大量使用\n\n糖尿病、高血压、骨质疏松、胃十二指肠溃疡等患者，尽量避免使用！\n\n\n\n（4）复方口腔溃疡凝胶\n\n说明：是北医三院自制药，配方保密，可能有一点麻药成分。\n\n效果：即刻止疼\n\n缺点：仅限北医三院\n\n\n\n（5）西瓜霜口腔喷剂\n\n使用广泛\n\n缺点：味道比较苦，有刺痛感\n","source":"health/index.md","raw":"---\ntitle: 养生之道\ndate: 2022-12-01 16:33:21\ncomments: false\n---\n\n\n\n<iframe src=\"//player.bilibili.com/player.html?aid=903281707&bvid=BV1xP4y197wZ&cid=911954704&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n五款口腔溃疡外用药\n\n\n\n（1）壳聚糖口腔溃疡凝胶\n\n作用原理：在创口表面形成保护膜，阻碍物理、化学刺激，使人几乎没有感觉。\n\n缺点：需要经常补涂\n\n\n\n（2）口腔溃疡膜\n\n效果与（1）相似\n\n用法：贴在创口上\n\n缺点：个头大，壳比较硬\n\n\n\n（3）醋酸地塞米松口腔贴片\n\n作用原理：物理隔绝+治疗\n\n缺点：地塞米松是一种激素，不建议大量使用\n\n糖尿病、高血压、骨质疏松、胃十二指肠溃疡等患者，尽量避免使用！\n\n\n\n（4）复方口腔溃疡凝胶\n\n说明：是北医三院自制药，配方保密，可能有一点麻药成分。\n\n效果：即刻止疼\n\n缺点：仅限北医三院\n\n\n\n（5）西瓜霜口腔喷剂\n\n使用广泛\n\n缺点：味道比较苦，有刺痛感\n","updated":"2022-12-04T12:27:08.409Z","path":"health/index.html","layout":"page","_id":"clbexyfti000msw6xbi8yc9oz","content":"<iframe src=\"//player.bilibili.com/player.html?aid=903281707&bvid=BV1xP4y197wZ&cid=911954704&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>五款口腔溃疡外用药</p>\n<p>（1）壳聚糖口腔溃疡凝胶</p>\n<p>作用原理：在创口表面形成保护膜，阻碍物理、化学刺激，使人几乎没有感觉。</p>\n<p>缺点：需要经常补涂</p>\n<p>（2）口腔溃疡膜</p>\n<p>效果与（1）相似</p>\n<p>用法：贴在创口上</p>\n<p>缺点：个头大，壳比较硬</p>\n<p>（3）醋酸地塞米松口腔贴片</p>\n<p>作用原理：物理隔绝+治疗</p>\n<p>缺点：地塞米松是一种激素，不建议大量使用</p>\n<p>糖尿病、高血压、骨质疏松、胃十二指肠溃疡等患者，尽量避免使用！</p>\n<p>（4）复方口腔溃疡凝胶</p>\n<p>说明：是北医三院自制药，配方保密，可能有一点麻药成分。</p>\n<p>效果：即刻止疼</p>\n<p>缺点：仅限北医三院</p>\n<p>（5）西瓜霜口腔喷剂</p>\n<p>使用广泛</p>\n<p>缺点：味道比较苦，有刺痛感</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"","more":"<iframe src=\"//player.bilibili.com/player.html?aid=903281707&bvid=BV1xP4y197wZ&cid=911954704&page=1\" scrolling=\"no\" border=\"0\" frameborder=\"no\" framespacing=\"0\" allowfullscreen=\"true\"> </iframe>\n\n<p>五款口腔溃疡外用药</p>\n<p>（1）壳聚糖口腔溃疡凝胶</p>\n<p>作用原理：在创口表面形成保护膜，阻碍物理、化学刺激，使人几乎没有感觉。</p>\n<p>缺点：需要经常补涂</p>\n<p>（2）口腔溃疡膜</p>\n<p>效果与（1）相似</p>\n<p>用法：贴在创口上</p>\n<p>缺点：个头大，壳比较硬</p>\n<p>（3）醋酸地塞米松口腔贴片</p>\n<p>作用原理：物理隔绝+治疗</p>\n<p>缺点：地塞米松是一种激素，不建议大量使用</p>\n<p>糖尿病、高血压、骨质疏松、胃十二指肠溃疡等患者，尽量避免使用！</p>\n<p>（4）复方口腔溃疡凝胶</p>\n<p>说明：是北医三院自制药，配方保密，可能有一点麻药成分。</p>\n<p>效果：即刻止疼</p>\n<p>缺点：仅限北医三院</p>\n<p>（5）西瓜霜口腔喷剂</p>\n<p>使用广泛</p>\n<p>缺点：味道比较苦，有刺痛感</p>\n"},{"title":"友情链接","date":"2022-11-15T07:04:43.000Z","type":"link","_content":"\n## 交换友链\n\n若您想在本页面留下友链，请在评论区评论来交换友链，格式如下：\n\n```yml\nname: 站点名称\nlink: 站点链接地址\navatar: 站点头像\ndesc：站点描述\n```\n\n例子|我的友链信息（请添加本站信息至你的友链）\n\n```yml\nname: CodeRain\nlink: https://code7rain.github.io/\navatar: https://code7rain.github.io/img/avatar_my01.jpg\ndesc：记录Java后端成长\n```","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2022-11-15 15:04:43\ntype: \"link\"\n---\n\n## 交换友链\n\n若您想在本页面留下友链，请在评论区评论来交换友链，格式如下：\n\n```yml\nname: 站点名称\nlink: 站点链接地址\navatar: 站点头像\ndesc：站点描述\n```\n\n例子|我的友链信息（请添加本站信息至你的友链）\n\n```yml\nname: CodeRain\nlink: https://code7rain.github.io/\navatar: https://code7rain.github.io/img/avatar_my01.jpg\ndesc：记录Java后端成长\n```","updated":"2022-12-01T07:18:41.146Z","path":"link/index.html","comments":1,"layout":"page","_id":"clbexyfti000qsw6xey8p8h5h","content":"<h2 id=\"交换友链\"><a href=\"#交换友链\" class=\"headerlink\" title=\"交换友链\"></a>交换友链</h2><p>若您想在本页面留下友链，请在评论区评论来交换友链，格式如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">站点名称</span></span><br><span class=\"line\"><span class=\"attr\">link:</span> <span class=\"string\">站点链接地址</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">站点头像</span></span><br><span class=\"line\"><span class=\"string\">desc：站点描述</span></span><br></pre></td></tr></table></figure>\n\n<p>例子|我的友链信息（请添加本站信息至你的友链）</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">CodeRain</span></span><br><span class=\"line\"><span class=\"attr\">link:</span> <span class=\"string\">https://code7rain.github.io/</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">https://code7rain.github.io/img/avatar_my01.jpg</span></span><br><span class=\"line\"><span class=\"string\">desc：记录Java后端成长</span></span><br></pre></td></tr></table></figure>","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"","more":"<h2 id=\"交换友链\"><a href=\"#交换友链\" class=\"headerlink\" title=\"交换友链\"></a>交换友链</h2><p>若您想在本页面留下友链，请在评论区评论来交换友链，格式如下：</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">站点名称</span></span><br><span class=\"line\"><span class=\"attr\">link:</span> <span class=\"string\">站点链接地址</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">站点头像</span></span><br><span class=\"line\"><span class=\"string\">desc：站点描述</span></span><br></pre></td></tr></table></figure>\n\n<p>例子|我的友链信息（请添加本站信息至你的友链）</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">name:</span> <span class=\"string\">CodeRain</span></span><br><span class=\"line\"><span class=\"attr\">link:</span> <span class=\"string\">https://code7rain.github.io/</span></span><br><span class=\"line\"><span class=\"attr\">avatar:</span> <span class=\"string\">https://code7rain.github.io/img/avatar_my01.jpg</span></span><br><span class=\"line\"><span class=\"string\">desc：记录Java后端成长</span></span><br></pre></td></tr></table></figure>"},{"title":"girl","date":"2022-12-01T09:05:37.000Z","comments":0,"_content":"\n![](https://w.wallhaven.cc/full/zy/wallhaven-zym92v.jpg)\n\n![](https://w.wallhaven.cc/full/p9/wallhaven-p981rj.jpg)\n\n![](https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg)\n\n\n\n![](https://w.wallhaven.cc/full/rr/wallhaven-rr2wmm.png)\n\n![](https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg)\n\n![](https://w.wallhaven.cc/full/5g/wallhaven-5gw751.jpg)\n\n","source":"gallery/girl/index.md","raw":"---\ntitle: girl\ndate: 2022-12-01 17:05:37\ncomments: false\n---\n\n![](https://w.wallhaven.cc/full/zy/wallhaven-zym92v.jpg)\n\n![](https://w.wallhaven.cc/full/p9/wallhaven-p981rj.jpg)\n\n![](https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg)\n\n\n\n![](https://w.wallhaven.cc/full/rr/wallhaven-rr2wmm.png)\n\n![](https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg)\n\n![](https://w.wallhaven.cc/full/5g/wallhaven-5gw751.jpg)\n\n","updated":"2022-12-01T11:31:39.321Z","path":"gallery/girl/index.html","layout":"page","_id":"clbexyftk000vsw6xhftad4su","content":"<p><img src=\"https://w.wallhaven.cc/full/zy/wallhaven-zym92v.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/p9/wallhaven-p981rj.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/rr/wallhaven-rr2wmm.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/5g/wallhaven-5gw751.jpg\"></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<p><img src=\"https://w.wallhaven.cc/full/zy/wallhaven-zym92v.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/p9/wallhaven-p981rj.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/rr/wallhaven-rr2wmm.png\"></p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/Y-JINHAO/resources/img/backiee-180435-landscape.jpg\"></p>\n<p><img src=\"https://w.wallhaven.cc/full/5g/wallhaven-5gw751.jpg\"></p>\n"},{"title":"wallpaper","date":"2022-12-01T08:58:58.000Z","comments":0,"_content":"\n{% gallery %}\n![](https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg)\n\n![](https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg)\n\n![](https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg)\n\n![](https://w.wallhaven.cc/full/d6/wallhaven-d6gqjj.png)\n\n![](https://w.wallhaven.cc/full/6k/wallhaven-6kegww.jpg)\n\n![](https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg)\n\n![](https://w.wallhaven.cc/full/1k/wallhaven-1k9e5g.png)\n\n{% endgallery %}\n","source":"gallery/wallpaper/index.md","raw":"---\ntitle: wallpaper\ndate: 2022-12-01 16:58:58\ncomments: false\n---\n\n{% gallery %}\n![](https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg)\n\n![](https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg)\n\n![](https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg)\n\n![](https://w.wallhaven.cc/full/d6/wallhaven-d6gqjj.png)\n\n![](https://w.wallhaven.cc/full/6k/wallhaven-6kegww.jpg)\n\n![](https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg)\n\n![](https://w.wallhaven.cc/full/1k/wallhaven-1k9e5g.png)\n\n{% endgallery %}\n","updated":"2022-12-01T11:30:54.494Z","path":"gallery/wallpaper/index.html","layout":"page","_id":"clbexyftk000ysw6xgt8b0k7g","content":"<div class=\"fj-gallery\"><p><img src=\"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/d6/wallhaven-d6gqjj.png\"></p><p><img src=\"https://w.wallhaven.cc/full/6k/wallhaven-6kegww.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/1k/wallhaven-1k9e5g.png\"></p>\n          </div>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/d6/wallhaven-d6gqjj.png\"></p><p><img src=\"https://w.wallhaven.cc/full/6k/wallhaven-6kegww.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg\"></p><p><img src=\"https://w.wallhaven.cc/full/1k/wallhaven-1k9e5g.png\"></p>\n          </div>\n"}],"Post":[{"title":"CentOS7.x下在后台运行和关闭（Java）项目","copyright":true,"date":"2022-11-12T11:10:00.000Z","_content":"\n## 需求\n\n在一般情况下，在服务器通过 java -jar xxx.jar 来运行一个jar包。但是如果退出了控制台，那么这个程序就将被关闭。因此让jar包后台运行十分必要。\n\n\n## 解决方案\n\n### 运行\n\n方式一：\n\n```\njava -jar xx.jar & \n```\n&代表在后台运行\n\n方式二：\n\nnohup java -jar xx.jar &\n\n方式三(推荐):\n\n```\nnohup java -jar xxx.jar  >log.file  2>&1 &\n```\n\n上面的意思如下:\n\n- 0    标准输入（一般是键盘）\n- 1    标准输出（一般是显示屏，是用户终端控制台）\n- 2    标准错误（错误信息输出）\n- `>log.file` 将运行的jar 错误日志信息输出到log.file文件中来,如果不指定，默认该项目所有输出被重定向到nohup.out的文件中。可查看运行的日志文件，查看jar包启动有没有报错\n- `2>&1`就是表示将错误重定向输出到标准输出上\n- 最后一个&,表示在后台运行。\n\n\n推荐后两种方式，因为前者是直接后台运行jar包，并没有进入到java的dos窗口。\n但假如我们的java程序需要我们进入到它的dos窗口，输入一些参数来运行的话，前两种是不可取的。因为可以在运行jar包后进入java的dos窗口来输入一些程序需要的参数，随后退出dos窗口让其在后台运行。\n\n\n### 关闭后台运行的Java jar包项目\n\n方法一\n\n直接杀死进程（根据端口）\n```\nsudo fuser -k -n tcp 8888\n```\n方法二\n\n根据pid 停止运行\n\n1.查看进程命令为\n```\nps aux|grep myblog-0.0.1-SNAPSHOT.jar\n```\n2.将会看到此jar的进程信息\n```\nroot      9150  0.0  0.0 112708  1012 pts/1    S+   19:05   0:00 grep --color=auto blog-api-0.0.1-SNAPSHOT.jar\n```\n3.其中9150则为此jar的pid，杀掉命令为\n```\nkill -9 9150\n```\n","source":"_posts/CentOS7.x下在后台运行和关闭（Java）项目.md","raw":"---\ntitle: 'CentOS7.x下在后台运行和关闭（Java）项目'\ncopyright: true\ndate: '2022-11-12 19:10'\ntags: '运维'\ncategories: 'categories'\n---\n\n## 需求\n\n在一般情况下，在服务器通过 java -jar xxx.jar 来运行一个jar包。但是如果退出了控制台，那么这个程序就将被关闭。因此让jar包后台运行十分必要。\n\n\n## 解决方案\n\n### 运行\n\n方式一：\n\n```\njava -jar xx.jar & \n```\n&代表在后台运行\n\n方式二：\n\nnohup java -jar xx.jar &\n\n方式三(推荐):\n\n```\nnohup java -jar xxx.jar  >log.file  2>&1 &\n```\n\n上面的意思如下:\n\n- 0    标准输入（一般是键盘）\n- 1    标准输出（一般是显示屏，是用户终端控制台）\n- 2    标准错误（错误信息输出）\n- `>log.file` 将运行的jar 错误日志信息输出到log.file文件中来,如果不指定，默认该项目所有输出被重定向到nohup.out的文件中。可查看运行的日志文件，查看jar包启动有没有报错\n- `2>&1`就是表示将错误重定向输出到标准输出上\n- 最后一个&,表示在后台运行。\n\n\n推荐后两种方式，因为前者是直接后台运行jar包，并没有进入到java的dos窗口。\n但假如我们的java程序需要我们进入到它的dos窗口，输入一些参数来运行的话，前两种是不可取的。因为可以在运行jar包后进入java的dos窗口来输入一些程序需要的参数，随后退出dos窗口让其在后台运行。\n\n\n### 关闭后台运行的Java jar包项目\n\n方法一\n\n直接杀死进程（根据端口）\n```\nsudo fuser -k -n tcp 8888\n```\n方法二\n\n根据pid 停止运行\n\n1.查看进程命令为\n```\nps aux|grep myblog-0.0.1-SNAPSHOT.jar\n```\n2.将会看到此jar的进程信息\n```\nroot      9150  0.0  0.0 112708  1012 pts/1    S+   19:05   0:00 grep --color=auto blog-api-0.0.1-SNAPSHOT.jar\n```\n3.其中9150则为此jar的pid，杀掉命令为\n```\nkill -9 9150\n```\n","slug":"CentOS7.x下在后台运行和关闭（Java）项目","published":1,"updated":"2022-12-08T05:33:37.842Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyft60001sw6x7c9z5rw1","content":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>在一般情况下，在服务器通过 java -jar xxx.jar 来运行一个jar包。但是如果退出了控制台，那么这个程序就将被关闭。因此让jar包后台运行十分必要。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p>方式一：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar xx.jar &amp; </span><br></pre></td></tr></table></figure>\n<p>&amp;代表在后台运行</p>\n<p>方式二：</p>\n<p>nohup java -jar xx.jar &amp;</p>\n<p>方式三(推荐):</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup java -jar xxx.jar  &gt;log.file  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n\n<p>上面的意思如下:</p>\n<ul>\n<li>0    标准输入（一般是键盘）</li>\n<li>1    标准输出（一般是显示屏，是用户终端控制台）</li>\n<li>2    标准错误（错误信息输出）</li>\n<li><code>&gt;log.file</code> 将运行的jar 错误日志信息输出到log.file文件中来,如果不指定，默认该项目所有输出被重定向到nohup.out的文件中。可查看运行的日志文件，查看jar包启动有没有报错</li>\n<li><code>2&gt;&amp;1</code>就是表示将错误重定向输出到标准输出上</li>\n<li>最后一个&amp;,表示在后台运行。</li>\n</ul>\n<p>推荐后两种方式，因为前者是直接后台运行jar包，并没有进入到java的dos窗口。<br>但假如我们的java程序需要我们进入到它的dos窗口，输入一些参数来运行的话，前两种是不可取的。因为可以在运行jar包后进入java的dos窗口来输入一些程序需要的参数，随后退出dos窗口让其在后台运行。</p>\n<h3 id=\"关闭后台运行的Java-jar包项目\"><a href=\"#关闭后台运行的Java-jar包项目\" class=\"headerlink\" title=\"关闭后台运行的Java jar包项目\"></a>关闭后台运行的Java jar包项目</h3><p>方法一</p>\n<p>直接杀死进程（根据端口）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fuser -k -n tcp 8888</span><br></pre></td></tr></table></figure>\n<p>方法二</p>\n<p>根据pid 停止运行</p>\n<p>1.查看进程命令为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux|grep myblog-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n<p>2.将会看到此jar的进程信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root      9150  0.0  0.0 112708  1012 pts/1    S+   19:05   0:00 grep --color=auto blog-api-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n<p>3.其中9150则为此jar的pid，杀掉命令为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -9 9150</span><br></pre></td></tr></table></figure>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg","excerpt":"","more":"<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>在一般情况下，在服务器通过 java -jar xxx.jar 来运行一个jar包。但是如果退出了控制台，那么这个程序就将被关闭。因此让jar包后台运行十分必要。</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><h3 id=\"运行\"><a href=\"#运行\" class=\"headerlink\" title=\"运行\"></a>运行</h3><p>方式一：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">java -jar xx.jar &amp; </span><br></pre></td></tr></table></figure>\n<p>&amp;代表在后台运行</p>\n<p>方式二：</p>\n<p>nohup java -jar xx.jar &amp;</p>\n<p>方式三(推荐):</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nohup java -jar xxx.jar  &gt;log.file  2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>\n\n<p>上面的意思如下:</p>\n<ul>\n<li>0    标准输入（一般是键盘）</li>\n<li>1    标准输出（一般是显示屏，是用户终端控制台）</li>\n<li>2    标准错误（错误信息输出）</li>\n<li><code>&gt;log.file</code> 将运行的jar 错误日志信息输出到log.file文件中来,如果不指定，默认该项目所有输出被重定向到nohup.out的文件中。可查看运行的日志文件，查看jar包启动有没有报错</li>\n<li><code>2&gt;&amp;1</code>就是表示将错误重定向输出到标准输出上</li>\n<li>最后一个&amp;,表示在后台运行。</li>\n</ul>\n<p>推荐后两种方式，因为前者是直接后台运行jar包，并没有进入到java的dos窗口。<br>但假如我们的java程序需要我们进入到它的dos窗口，输入一些参数来运行的话，前两种是不可取的。因为可以在运行jar包后进入java的dos窗口来输入一些程序需要的参数，随后退出dos窗口让其在后台运行。</p>\n<h3 id=\"关闭后台运行的Java-jar包项目\"><a href=\"#关闭后台运行的Java-jar包项目\" class=\"headerlink\" title=\"关闭后台运行的Java jar包项目\"></a>关闭后台运行的Java jar包项目</h3><p>方法一</p>\n<p>直接杀死进程（根据端口）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo fuser -k -n tcp 8888</span><br></pre></td></tr></table></figure>\n<p>方法二</p>\n<p>根据pid 停止运行</p>\n<p>1.查看进程命令为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps aux|grep myblog-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n<p>2.将会看到此jar的进程信息</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root      9150  0.0  0.0 112708  1012 pts/1    S+   19:05   0:00 grep --color=auto blog-api-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure>\n<p>3.其中9150则为此jar的pid，杀掉命令为</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">kill -9 9150</span><br></pre></td></tr></table></figure>\n"},{"title":"Dell Vostro 5568型号笔记本电脑更换电池教程","copyright":true,"date":"2022-06-18T13:36:00.000Z","_content":"\n## 前期准备\n\n拆机工具：小型的十字螺丝刀（购买电池时可以考虑咨询店家是否附赠）\n\n新电池： **注意购买前注意查看自己电脑型号**\n\n如何查看电脑型号？\n\n方法一，在搜索栏里输入dxdiag，点击确定，页面中所显示的系统型号即为电脑型号。\n\n方法二，使用快捷键Windows+R，在搜索栏输入cmd，点击确定，直接在页面输入`systeminfo`回车即可出现系统型号。\n\n## 更换步骤\n\n关机，拔掉所有外部设备（使用无线鼠的注意无线鼠标接收器）将笔记本翻过来。\n\n开始拆卸后盖，拧松固定螺丝，**注意有的螺丝拧松就好**，是拧不出来的。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211144391-144641139.jpg)\n\n然后用卡片，将后盖咬合的卡扣划开，然后揭开后盖，**注意不要生掰**。\n\n拆开后效果\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211447243-2064752888.jpg)\n\n可以看到自己的电池明显鼓包。对比新买电池如下图可以看出老电池用的多暴力了。目前老电池残余电量拔掉电源电脑三秒钟必定关机。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211352284-96900639.jpg)\n\n拆出旧电池，首先断开电池与电脑主板的连接，将电池上的连接线从主要上连接槽拔出，拆卸螺丝，取下电池。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211907063-2100004146.jpg)\n\n连接线换到新电池上并装回电脑指定位置。此处有坑，下文细讲。尽量连接电池前按住电源键放电几秒钟。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211750061-803600409.jpg)\n\n然后复原即可插上电源开机查看电池情况。\n[查看电池情况](https://www.cnblogs.com/Code-Rain/p/15916422.html)\n\n## 踩坑\n\n换电池后无法开机，插上电源显示灯正常亮。\n\n查阅网上方案类似现象\n\n现象：按下电源开关键之后电源灯都不亮，但是充电指示灯亮着。\n\n原因：主板不通电。\n\n方案：释放静电尝试，去除电脑的电池和电源线，确保笔记本处于完全不通电状态，重复按电源开关几次，每次持续按住10秒，接上电源尝试开机，然后能正常开机了。\n","source":"_posts/Dell Vostro 5568型号笔记本电脑更换电池教程.md","raw":"---\ntitle: 'Dell Vostro 5568型号笔记本电脑更换电池教程'\ncopyright: true\ndate: '2022-06-18 21:36'\ntags: '电脑维修'\ncategories: 'categories'\n---\n\n## 前期准备\n\n拆机工具：小型的十字螺丝刀（购买电池时可以考虑咨询店家是否附赠）\n\n新电池： **注意购买前注意查看自己电脑型号**\n\n如何查看电脑型号？\n\n方法一，在搜索栏里输入dxdiag，点击确定，页面中所显示的系统型号即为电脑型号。\n\n方法二，使用快捷键Windows+R，在搜索栏输入cmd，点击确定，直接在页面输入`systeminfo`回车即可出现系统型号。\n\n## 更换步骤\n\n关机，拔掉所有外部设备（使用无线鼠的注意无线鼠标接收器）将笔记本翻过来。\n\n开始拆卸后盖，拧松固定螺丝，**注意有的螺丝拧松就好**，是拧不出来的。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211144391-144641139.jpg)\n\n然后用卡片，将后盖咬合的卡扣划开，然后揭开后盖，**注意不要生掰**。\n\n拆开后效果\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211447243-2064752888.jpg)\n\n可以看到自己的电池明显鼓包。对比新买电池如下图可以看出老电池用的多暴力了。目前老电池残余电量拔掉电源电脑三秒钟必定关机。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211352284-96900639.jpg)\n\n拆出旧电池，首先断开电池与电脑主板的连接，将电池上的连接线从主要上连接槽拔出，拆卸螺丝，取下电池。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211907063-2100004146.jpg)\n\n连接线换到新电池上并装回电脑指定位置。此处有坑，下文细讲。尽量连接电池前按住电源键放电几秒钟。\n\n![](Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211750061-803600409.jpg)\n\n然后复原即可插上电源开机查看电池情况。\n[查看电池情况](https://www.cnblogs.com/Code-Rain/p/15916422.html)\n\n## 踩坑\n\n换电池后无法开机，插上电源显示灯正常亮。\n\n查阅网上方案类似现象\n\n现象：按下电源开关键之后电源灯都不亮，但是充电指示灯亮着。\n\n原因：主板不通电。\n\n方案：释放静电尝试，去除电脑的电池和电源线，确保笔记本处于完全不通电状态，重复按电源开关几次，每次持续按住10秒，接上电源尝试开机，然后能正常开机了。\n","slug":"Dell Vostro 5568型号笔记本电脑更换电池教程","published":1,"updated":"2022-12-08T05:24:06.722Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyft90003sw6x3tfed8np","content":"<h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><p>拆机工具：小型的十字螺丝刀（购买电池时可以考虑咨询店家是否附赠）</p>\n<p>新电池： <strong>注意购买前注意查看自己电脑型号</strong></p>\n<p>如何查看电脑型号？</p>\n<p>方法一，在搜索栏里输入dxdiag，点击确定，页面中所显示的系统型号即为电脑型号。</p>\n<p>方法二，使用快捷键Windows+R，在搜索栏输入cmd，点击确定，直接在页面输入<code>systeminfo</code>回车即可出现系统型号。</p>\n<h2 id=\"更换步骤\"><a href=\"#更换步骤\" class=\"headerlink\" title=\"更换步骤\"></a>更换步骤</h2><p>关机，拔掉所有外部设备（使用无线鼠的注意无线鼠标接收器）将笔记本翻过来。</p>\n<p>开始拆卸后盖，拧松固定螺丝，<strong>注意有的螺丝拧松就好</strong>，是拧不出来的。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211144391-144641139.jpg\" class=\"\">\n\n<p>然后用卡片，将后盖咬合的卡扣划开，然后揭开后盖，<strong>注意不要生掰</strong>。</p>\n<p>拆开后效果</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211447243-2064752888.jpg\" class=\"\">\n\n<p>可以看到自己的电池明显鼓包。对比新买电池如下图可以看出老电池用的多暴力了。目前老电池残余电量拔掉电源电脑三秒钟必定关机。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211352284-96900639.jpg\" class=\"\">\n\n<p>拆出旧电池，首先断开电池与电脑主板的连接，将电池上的连接线从主要上连接槽拔出，拆卸螺丝，取下电池。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211907063-2100004146.jpg\" class=\"\">\n\n<p>连接线换到新电池上并装回电脑指定位置。此处有坑，下文细讲。尽量连接电池前按住电源键放电几秒钟。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211750061-803600409.jpg\" class=\"\">\n\n<p>然后复原即可插上电源开机查看电池情况。<br><a href=\"https://www.cnblogs.com/Code-Rain/p/15916422.html\">查看电池情况</a></p>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>换电池后无法开机，插上电源显示灯正常亮。</p>\n<p>查阅网上方案类似现象</p>\n<p>现象：按下电源开关键之后电源灯都不亮，但是充电指示灯亮着。</p>\n<p>原因：主板不通电。</p>\n<p>方案：释放静电尝试，去除电脑的电池和电源线，确保笔记本处于完全不通电状态，重复按电源开关几次，每次持续按住10秒，接上电源尝试开机，然后能正常开机了。</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<h2 id=\"前期准备\"><a href=\"#前期准备\" class=\"headerlink\" title=\"前期准备\"></a>前期准备</h2><p>拆机工具：小型的十字螺丝刀（购买电池时可以考虑咨询店家是否附赠）</p>\n<p>新电池： <strong>注意购买前注意查看自己电脑型号</strong></p>\n<p>如何查看电脑型号？</p>\n<p>方法一，在搜索栏里输入dxdiag，点击确定，页面中所显示的系统型号即为电脑型号。</p>\n<p>方法二，使用快捷键Windows+R，在搜索栏输入cmd，点击确定，直接在页面输入<code>systeminfo</code>回车即可出现系统型号。</p>\n<h2 id=\"更换步骤\"><a href=\"#更换步骤\" class=\"headerlink\" title=\"更换步骤\"></a>更换步骤</h2><p>关机，拔掉所有外部设备（使用无线鼠的注意无线鼠标接收器）将笔记本翻过来。</p>\n<p>开始拆卸后盖，拧松固定螺丝，<strong>注意有的螺丝拧松就好</strong>，是拧不出来的。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211144391-144641139.jpg\" class=\"\">\n\n<p>然后用卡片，将后盖咬合的卡扣划开，然后揭开后盖，<strong>注意不要生掰</strong>。</p>\n<p>拆开后效果</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211447243-2064752888.jpg\" class=\"\">\n\n<p>可以看到自己的电池明显鼓包。对比新买电池如下图可以看出老电池用的多暴力了。目前老电池残余电量拔掉电源电脑三秒钟必定关机。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211352284-96900639.jpg\" class=\"\">\n\n<p>拆出旧电池，首先断开电池与电脑主板的连接，将电池上的连接线从主要上连接槽拔出，拆卸螺丝，取下电池。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211907063-2100004146.jpg\" class=\"\">\n\n<p>连接线换到新电池上并装回电脑指定位置。此处有坑，下文细讲。尽量连接电池前按住电源键放电几秒钟。</p>\n<img src=\"/2022/06/18/Dell%20Vostro%205568%E5%9E%8B%E5%8F%B7%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E8%84%91%E6%9B%B4%E6%8D%A2%E7%94%B5%E6%B1%A0%E6%95%99%E7%A8%8B/2291368-20220618211750061-803600409.jpg\" class=\"\">\n\n<p>然后复原即可插上电源开机查看电池情况。<br><a href=\"https://www.cnblogs.com/Code-Rain/p/15916422.html\">查看电池情况</a></p>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>换电池后无法开机，插上电源显示灯正常亮。</p>\n<p>查阅网上方案类似现象</p>\n<p>现象：按下电源开关键之后电源灯都不亮，但是充电指示灯亮着。</p>\n<p>原因：主板不通电。</p>\n<p>方案：释放静电尝试，去除电脑的电池和电源线，确保笔记本处于完全不通电状态，重复按电源开关几次，每次持续按住10秒，接上电源尝试开机，然后能正常开机了。</p>\n"},{"title":"AJReport小白配置大屏教程","copyright":true,"date":"2022-07-21T11:32:00.000Z","description":"AJReport小白配置大屏教程","_content":"\n## AJ-Report小白配置大屏教程\n### 背景\nleader 上周周五快下班时给了我一个任务，问我说项目新集成的 AJ-Report 玩的怎么样了，下周给部门其他同事做个技术分享，快速教会其他人上手，刚来公司还算新人的我这叫一个受宠若惊啊，心想这是什么福报【手动狗头】，周六加班的理由来了啊，然后周六肝了一天，去官网探索后整理出这么一份算是操作手册吧。\n\n由于项目已经集成到项目中，所以下文主要展开怎么配置大屏，对于怎么集成以后有机会再做介绍。\n\n### 前言\n#### 其他大屏可视化工具\n由于不知道大家对大屏可视化的了解程度，所以先大概聊一下大屏可视化以及AJ-report有哪些优点，\n\n可能大家已经了解市面上DataEase、Superset等，这些大屏可视化技术目的都是为了让数据展示的更加直观，重点数据一目了然。\n当然各有优缺点，如付费，技术栈支持等。有兴趣的话可以自己去研究一下，我就不多做赘述。\n\n[大屏可视化—DataEase、AJ-report、Superset调研对比](https://blog.csdn.net/shunshuntuo/article/details/123739448)\n\n[dataease、AJ-report大屏可视化工具对比](https://blog.csdn.net/weixin_38500689/article/details/121290545?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-121290545-blog-123739448.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-121290545-blog-123739448.pc_relevant_aa&utm_relevant_index=4)\n\n#### AJ-Report优点\n接下来回到AJ-report，来看一下AJ-report有哪些优点，当然这也是我个人认为学习新技术比较重要的一点，官网的东西一般是最全的，并且比较有权威。\n\n[AJ-report官网操作指南](https://ajreport.beliefteam.cn/report-doc/)\n\n我简单总结了一下五点：\n\n- 完全开源的BI平台\n\n  [BI平台](https://zhuanlan.zhihu.com/p/152340660) BI(Business Intelligence)，也就是商业智能。\n\n- 多数据源支持\n\n  内置mysql、elasticsearch、kudu等多种驱动\n\n- 组件丰富\n\n  大屏酷炫支持20种大屏组件/图表\n\n- 最新最稳定的技术栈\n\n- 设计简单\n\n  **三步轻松完成大屏设计：配置数据源---->写SQL配置数据集---->拖拽配置大屏**，保存发布即可。\n\n\t实际这三步很好理解\n\t\n\t配置数据源就是连接数据库的意思\n\t\n\t---->写SQL配置数据集就是写sql语句查询想要的数据\n\n\t---->拖拽配置大屏就是搞个前端页面把查询的数据展示出来\n\n实际很多可视化流程思路都是类似的。 也就是说理解这个思路其他看板的配置也应该难不倒大家了。\n\n  数据流程图：\n\n ![](AJ-Report小白配置大屏教程/2291368-20220721191749922-146783398.png)\n\n\n\n\n### 报表设计\n\n下面聊一下如何设计。\n\n也就是以上三步，我们就直接来设计页面看一下。\n\n#### 配置数据源（连接数据库）\n\n1. 步骤\n\n   点击菜单栏数据源 -> 新增 -> 项目基础配置,然后进行简单配置即可\n\n   ![](AJ-Report小白配置大屏教程/2291368-20220721191906001-129999431.png)\n\n   - 驱动类、连接串、用户名、密码必须填写正确。\n   - 只有测试通过的数据源才可以保存。\n\n#### 配置数据集（查表）\n\n1. 步骤\n\n   点击菜单栏数据集 -> 新增 -> 编辑数据集，填写数据源，数据集编码及名称，sql语句即可。\n\n   ![](AJ-Report小白配置大屏教程/2291368-20220721191926832-623454467.png)\n\n2. 注意\n\n   SQL数据集尽量不要使用 “select *”，以及展示很大的数据量，图表不一定能展示、页面可能会卡死\n\n3. 功能栏\n\n   - 查询参数(扩展)\n   - 数据转换(扩展)\n   - 测试预览\n\n\n#### 配置大屏或报表（渲染展示）\n\n 1.  添加报表\n\n     点击报表管理数据 -> 新增 -> 报表管理，填写报表名称、编码、类型。\n\n     注意报表编码唯一。\n     \n     ![](AJ-Report小白配置大屏教程/2291368-20220721191945273-633031838.png)\n\n   2. 设计大屏（进入设计大屏）\n\n   \t\t进入设计大屏其一：报表管理 -> 列表操作栏 -> 更多 -> 设计可进入；其二：大屏报表 -> 列表 ->  设计图标可进入。\n   \t\n   \t   设计空白页如下图有工具栏、图层、保存和配置栏等。 \n   \t\n   \t   ![](AJ-Report小白配置大屏教程/2291368-20220721192015456-1643726883.png)\n   \t   \n   \t  点击工具栏组件拖到中间设计屏幕，鼠标选中组件可以看到右边有具体组件的配置，数据绑定及位置坐标设置，进行具体设置即可。\n   \t ![](AJ-Report小白配置大屏教程/2291368-20220721192029555-1871185722.png)\n\n  3. 保存、预览、分享\n     \n     点击预览即可进入大屏展示界面。\n\n     这个分享还是有点意思的，像百度网盘一样分享需要密码才能打开。\n\n     具体如图。\n\n     操作 - > 更多 -> 分享\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192358791-779277970.png)\n     \n     然后跳转到如下界面\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192408284-1212976555.png)\n     \n     点击创建链接\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192416373-1191184138.png)\n\n     复制链接和分享码到浏览器打开时候就需要输入密码了。\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192426073-764010738.png)\n\n     输入密码确认即可进入大屏了。\n\n### 系统设置\n\n#### 文件管理\n\n支持多种文件上传，如图片、pdf、视频等。\n\n#### 数据字典\n\n系统设置 -> 数据字典 -> 新增 -> 填写配置\n\n字典列表操作 -> 更多 -> 编辑字典项\n\n### 扩展\n\n数据库伪数据\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191608294-1205959101.png)\n\n\n#### 查询参数\n\n> 查询参数主要是针对 sql 中存在的动态参数，需要在后续的大屏使用时动态传入的时候做的操作。http 类型数据源支持改请求路径。请求头，请求体内容。\n\n如图所示，查询 sql 中，定义了两个变量，startTime 和 endTime。那需要我们在查询参数中添加对应的两个参数。 参数名保持和查询 sql 中 ${param} 保持一致。\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191652637-703350503.png)\n\n\n测试预览：（展示的数据就只有startTime 和 endTime这段时间的数据了）\n\n```\n[\n  {\n    \"datetime\": \"2021-06-19\",\n    \"unsales\": 0,\n    \"manus\": 7,\n    \"id\": 8,\n    \"rework\": 1,\n    \"brand\": \"A-100\",\n    \"sales\": 7,\n    \"return\": 0\n  },\n  ...\n  ...\n]\n```\n#### 数据转换\n\n步骤：数据转换 -> 新增 -> (js脚本为例)\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191538622-1742764931.png)\n\n\n**需求1：实现对brand字段进行拆分,例如 A-100 拆分为 A 和 100**\n\n点击js脚本前小蜡笔图标编辑如下代码\n\n```javascript\n\n   function dataTransform(data){\n\n       //自定义脚本内容\n\n       //1.遍历测试预览中的java.util.ArrayList<java.lang.Object>\n\n       for(j = 0, len = data.length; j < len; j++){\n\n           //获取一行数据\n\n           var row = data[j]\n\n           //比如对brand字段进行拆分,例如A-100，B-50\n\n           var brand = row['brand']\n\n           var split = brand.split('-')\n\n           //新增两个字段\n\n           var model = split[0]\n\n           var series = split[1]\n\n           //对原始对象赋值\n\n           dataj = model\n\n           dataj = series\n\n       }\n\n       return data;\n\n   }\n\n```\n\n数据转换后测试预览\n\n```\n  [\n     {\n       \"datetime\": \"2021-06-19\",\n       \"unsales\": 0,\n       \"manus\": 7,\n       \"series\": \"100\",\n       \"model\": \"A\",\n       \"id\": 8,\n       \"rework\": 1,\n       \"brand\": \"A-100\",\n       \"sales\": 7,\n       \"return\": 0\n     }\n   ] \n```\n\n   字典翻译(数据转换的一种，应该是官方封装好的脚本)\n\n**需求2：\"model\": \"A\",转换为\"model\": \"A模型\",**\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191515359-510796598.png)\n\n\n\n数据转换+字典翻译后测试预览\n\n```\n[\n  {\n     \"datetime\": \"2021-06-19\",\n     \"unsales\": 0,\n     \"manus\": 7,\n     \"series\": \"100\",\n     \"model\": \"A模型\",\n     \"id\": 8,\n     \"rework\": 1,\n     \"brand\": \"A-100\",\n     \"sales\": 7,\n     \"return\": 0\n   }\n] \n```\n\n### 后记\n以上就是我关于此次分享全部内容。\n\n当然因为水平和时间有限，如有不足之处，欢迎之后交流指正。\n\n最后感谢各位的聆听。","source":"_posts/AJ-Report小白配置大屏教程.md","raw":"---\ntitle: 'AJReport小白配置大屏教程'\ncopyright: true\ndate: '2022-07-21 19:32'\ndescription: 'AJReport小白配置大屏教程'\ntags: 'AJ-Report'\ncategories: 'categories'\n---\n\n## AJ-Report小白配置大屏教程\n### 背景\nleader 上周周五快下班时给了我一个任务，问我说项目新集成的 AJ-Report 玩的怎么样了，下周给部门其他同事做个技术分享，快速教会其他人上手，刚来公司还算新人的我这叫一个受宠若惊啊，心想这是什么福报【手动狗头】，周六加班的理由来了啊，然后周六肝了一天，去官网探索后整理出这么一份算是操作手册吧。\n\n由于项目已经集成到项目中，所以下文主要展开怎么配置大屏，对于怎么集成以后有机会再做介绍。\n\n### 前言\n#### 其他大屏可视化工具\n由于不知道大家对大屏可视化的了解程度，所以先大概聊一下大屏可视化以及AJ-report有哪些优点，\n\n可能大家已经了解市面上DataEase、Superset等，这些大屏可视化技术目的都是为了让数据展示的更加直观，重点数据一目了然。\n当然各有优缺点，如付费，技术栈支持等。有兴趣的话可以自己去研究一下，我就不多做赘述。\n\n[大屏可视化—DataEase、AJ-report、Superset调研对比](https://blog.csdn.net/shunshuntuo/article/details/123739448)\n\n[dataease、AJ-report大屏可视化工具对比](https://blog.csdn.net/weixin_38500689/article/details/121290545?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-121290545-blog-123739448.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-2-121290545-blog-123739448.pc_relevant_aa&utm_relevant_index=4)\n\n#### AJ-Report优点\n接下来回到AJ-report，来看一下AJ-report有哪些优点，当然这也是我个人认为学习新技术比较重要的一点，官网的东西一般是最全的，并且比较有权威。\n\n[AJ-report官网操作指南](https://ajreport.beliefteam.cn/report-doc/)\n\n我简单总结了一下五点：\n\n- 完全开源的BI平台\n\n  [BI平台](https://zhuanlan.zhihu.com/p/152340660) BI(Business Intelligence)，也就是商业智能。\n\n- 多数据源支持\n\n  内置mysql、elasticsearch、kudu等多种驱动\n\n- 组件丰富\n\n  大屏酷炫支持20种大屏组件/图表\n\n- 最新最稳定的技术栈\n\n- 设计简单\n\n  **三步轻松完成大屏设计：配置数据源---->写SQL配置数据集---->拖拽配置大屏**，保存发布即可。\n\n\t实际这三步很好理解\n\t\n\t配置数据源就是连接数据库的意思\n\t\n\t---->写SQL配置数据集就是写sql语句查询想要的数据\n\n\t---->拖拽配置大屏就是搞个前端页面把查询的数据展示出来\n\n实际很多可视化流程思路都是类似的。 也就是说理解这个思路其他看板的配置也应该难不倒大家了。\n\n  数据流程图：\n\n ![](AJ-Report小白配置大屏教程/2291368-20220721191749922-146783398.png)\n\n\n\n\n### 报表设计\n\n下面聊一下如何设计。\n\n也就是以上三步，我们就直接来设计页面看一下。\n\n#### 配置数据源（连接数据库）\n\n1. 步骤\n\n   点击菜单栏数据源 -> 新增 -> 项目基础配置,然后进行简单配置即可\n\n   ![](AJ-Report小白配置大屏教程/2291368-20220721191906001-129999431.png)\n\n   - 驱动类、连接串、用户名、密码必须填写正确。\n   - 只有测试通过的数据源才可以保存。\n\n#### 配置数据集（查表）\n\n1. 步骤\n\n   点击菜单栏数据集 -> 新增 -> 编辑数据集，填写数据源，数据集编码及名称，sql语句即可。\n\n   ![](AJ-Report小白配置大屏教程/2291368-20220721191926832-623454467.png)\n\n2. 注意\n\n   SQL数据集尽量不要使用 “select *”，以及展示很大的数据量，图表不一定能展示、页面可能会卡死\n\n3. 功能栏\n\n   - 查询参数(扩展)\n   - 数据转换(扩展)\n   - 测试预览\n\n\n#### 配置大屏或报表（渲染展示）\n\n 1.  添加报表\n\n     点击报表管理数据 -> 新增 -> 报表管理，填写报表名称、编码、类型。\n\n     注意报表编码唯一。\n     \n     ![](AJ-Report小白配置大屏教程/2291368-20220721191945273-633031838.png)\n\n   2. 设计大屏（进入设计大屏）\n\n   \t\t进入设计大屏其一：报表管理 -> 列表操作栏 -> 更多 -> 设计可进入；其二：大屏报表 -> 列表 ->  设计图标可进入。\n   \t\n   \t   设计空白页如下图有工具栏、图层、保存和配置栏等。 \n   \t\n   \t   ![](AJ-Report小白配置大屏教程/2291368-20220721192015456-1643726883.png)\n   \t   \n   \t  点击工具栏组件拖到中间设计屏幕，鼠标选中组件可以看到右边有具体组件的配置，数据绑定及位置坐标设置，进行具体设置即可。\n   \t ![](AJ-Report小白配置大屏教程/2291368-20220721192029555-1871185722.png)\n\n  3. 保存、预览、分享\n     \n     点击预览即可进入大屏展示界面。\n\n     这个分享还是有点意思的，像百度网盘一样分享需要密码才能打开。\n\n     具体如图。\n\n     操作 - > 更多 -> 分享\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192358791-779277970.png)\n     \n     然后跳转到如下界面\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192408284-1212976555.png)\n     \n     点击创建链接\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192416373-1191184138.png)\n\n     复制链接和分享码到浏览器打开时候就需要输入密码了。\n     ![](AJ-Report小白配置大屏教程/2291368-20220721192426073-764010738.png)\n\n     输入密码确认即可进入大屏了。\n\n### 系统设置\n\n#### 文件管理\n\n支持多种文件上传，如图片、pdf、视频等。\n\n#### 数据字典\n\n系统设置 -> 数据字典 -> 新增 -> 填写配置\n\n字典列表操作 -> 更多 -> 编辑字典项\n\n### 扩展\n\n数据库伪数据\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191608294-1205959101.png)\n\n\n#### 查询参数\n\n> 查询参数主要是针对 sql 中存在的动态参数，需要在后续的大屏使用时动态传入的时候做的操作。http 类型数据源支持改请求路径。请求头，请求体内容。\n\n如图所示，查询 sql 中，定义了两个变量，startTime 和 endTime。那需要我们在查询参数中添加对应的两个参数。 参数名保持和查询 sql 中 ${param} 保持一致。\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191652637-703350503.png)\n\n\n测试预览：（展示的数据就只有startTime 和 endTime这段时间的数据了）\n\n```\n[\n  {\n    \"datetime\": \"2021-06-19\",\n    \"unsales\": 0,\n    \"manus\": 7,\n    \"id\": 8,\n    \"rework\": 1,\n    \"brand\": \"A-100\",\n    \"sales\": 7,\n    \"return\": 0\n  },\n  ...\n  ...\n]\n```\n#### 数据转换\n\n步骤：数据转换 -> 新增 -> (js脚本为例)\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191538622-1742764931.png)\n\n\n**需求1：实现对brand字段进行拆分,例如 A-100 拆分为 A 和 100**\n\n点击js脚本前小蜡笔图标编辑如下代码\n\n```javascript\n\n   function dataTransform(data){\n\n       //自定义脚本内容\n\n       //1.遍历测试预览中的java.util.ArrayList<java.lang.Object>\n\n       for(j = 0, len = data.length; j < len; j++){\n\n           //获取一行数据\n\n           var row = data[j]\n\n           //比如对brand字段进行拆分,例如A-100，B-50\n\n           var brand = row['brand']\n\n           var split = brand.split('-')\n\n           //新增两个字段\n\n           var model = split[0]\n\n           var series = split[1]\n\n           //对原始对象赋值\n\n           dataj = model\n\n           dataj = series\n\n       }\n\n       return data;\n\n   }\n\n```\n\n数据转换后测试预览\n\n```\n  [\n     {\n       \"datetime\": \"2021-06-19\",\n       \"unsales\": 0,\n       \"manus\": 7,\n       \"series\": \"100\",\n       \"model\": \"A\",\n       \"id\": 8,\n       \"rework\": 1,\n       \"brand\": \"A-100\",\n       \"sales\": 7,\n       \"return\": 0\n     }\n   ] \n```\n\n   字典翻译(数据转换的一种，应该是官方封装好的脚本)\n\n**需求2：\"model\": \"A\",转换为\"model\": \"A模型\",**\n\n![](AJ-Report小白配置大屏教程/2291368-20220721191515359-510796598.png)\n\n\n\n数据转换+字典翻译后测试预览\n\n```\n[\n  {\n     \"datetime\": \"2021-06-19\",\n     \"unsales\": 0,\n     \"manus\": 7,\n     \"series\": \"100\",\n     \"model\": \"A模型\",\n     \"id\": 8,\n     \"rework\": 1,\n     \"brand\": \"A-100\",\n     \"sales\": 7,\n     \"return\": 0\n   }\n] \n```\n\n### 后记\n以上就是我关于此次分享全部内容。\n\n当然因为水平和时间有限，如有不足之处，欢迎之后交流指正。\n\n最后感谢各位的聆听。","slug":"AJ-Report小白配置大屏教程","published":1,"updated":"2022-12-07T08:28:11.532Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftb0007sw6x0vok3bwe","content":"<h2 id=\"AJ-Report小白配置大屏教程\"><a href=\"#AJ-Report小白配置大屏教程\" class=\"headerlink\" title=\"AJ-Report小白配置大屏教程\"></a>AJ-Report小白配置大屏教程</h2><h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>leader 上周周五快下班时给了我一个任务，问我说项目新集成的 AJ-Report 玩的怎么样了，下周给部门其他同事做个技术分享，快速教会其他人上手，刚来公司还算新人的我这叫一个受宠若惊啊，心想这是什么福报【手动狗头】，周六加班的理由来了啊，然后周六肝了一天，去官网探索后整理出这么一份算是操作手册吧。</p>\n<p>由于项目已经集成到项目中，所以下文主要展开怎么配置大屏，对于怎么集成以后有机会再做介绍。</p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><h4 id=\"其他大屏可视化工具\"><a href=\"#其他大屏可视化工具\" class=\"headerlink\" title=\"其他大屏可视化工具\"></a>其他大屏可视化工具</h4><p>由于不知道大家对大屏可视化的了解程度，所以先大概聊一下大屏可视化以及AJ-report有哪些优点，</p>\n<p>可能大家已经了解市面上DataEase、Superset等，这些大屏可视化技术目的都是为了让数据展示的更加直观，重点数据一目了然。<br>当然各有优缺点，如付费，技术栈支持等。有兴趣的话可以自己去研究一下，我就不多做赘述。</p>\n<p><a href=\"https://blog.csdn.net/shunshuntuo/article/details/123739448\">大屏可视化—DataEase、AJ-report、Superset调研对比</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_38500689/article/details/121290545?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-121290545-blog-123739448.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-121290545-blog-123739448.pc_relevant_aa&utm_relevant_index=4\">dataease、AJ-report大屏可视化工具对比</a></p>\n<h4 id=\"AJ-Report优点\"><a href=\"#AJ-Report优点\" class=\"headerlink\" title=\"AJ-Report优点\"></a>AJ-Report优点</h4><p>接下来回到AJ-report，来看一下AJ-report有哪些优点，当然这也是我个人认为学习新技术比较重要的一点，官网的东西一般是最全的，并且比较有权威。</p>\n<p><a href=\"https://ajreport.beliefteam.cn/report-doc/\">AJ-report官网操作指南</a></p>\n<p>我简单总结了一下五点：</p>\n<ul>\n<li><p>完全开源的BI平台</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/152340660\">BI平台</a> BI(Business Intelligence)，也就是商业智能。</p>\n</li>\n<li><p>多数据源支持</p>\n<p>内置mysql、elasticsearch、kudu等多种驱动</p>\n</li>\n<li><p>组件丰富</p>\n<p>大屏酷炫支持20种大屏组件/图表</p>\n</li>\n<li><p>最新最稳定的技术栈</p>\n</li>\n<li><p>设计简单</p>\n<p><strong>三步轻松完成大屏设计：配置数据源—-&gt;写SQL配置数据集—-&gt;拖拽配置大屏</strong>，保存发布即可。</p>\n<p>  实际这三步很好理解</p>\n<p>  配置数据源就是连接数据库的意思</p>\n<p>  —-&gt;写SQL配置数据集就是写sql语句查询想要的数据</p>\n<p>  —-&gt;拖拽配置大屏就是搞个前端页面把查询的数据展示出来</p>\n</li>\n</ul>\n<p>实际很多可视化流程思路都是类似的。 也就是说理解这个思路其他看板的配置也应该难不倒大家了。</p>\n<p>  数据流程图：</p>\n <img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191749922-146783398.png\" class=\"\">\n\n\n\n\n<h3 id=\"报表设计\"><a href=\"#报表设计\" class=\"headerlink\" title=\"报表设计\"></a>报表设计</h3><p>下面聊一下如何设计。</p>\n<p>也就是以上三步，我们就直接来设计页面看一下。</p>\n<h4 id=\"配置数据源（连接数据库）\"><a href=\"#配置数据源（连接数据库）\" class=\"headerlink\" title=\"配置数据源（连接数据库）\"></a>配置数据源（连接数据库）</h4><ol>\n<li><p>步骤</p>\n<p>点击菜单栏数据源 -&gt; 新增 -&gt; 项目基础配置,然后进行简单配置即可</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191906001-129999431.png\" class=\"\">\n\n<ul>\n<li>驱动类、连接串、用户名、密码必须填写正确。</li>\n<li>只有测试通过的数据源才可以保存。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"配置数据集（查表）\"><a href=\"#配置数据集（查表）\" class=\"headerlink\" title=\"配置数据集（查表）\"></a>配置数据集（查表）</h4><ol>\n<li><p>步骤</p>\n<p>点击菜单栏数据集 -&gt; 新增 -&gt; 编辑数据集，填写数据源，数据集编码及名称，sql语句即可。</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191926832-623454467.png\" class=\"\"></li>\n<li><p>注意</p>\n<p>SQL数据集尽量不要使用 “select *”，以及展示很大的数据量，图表不一定能展示、页面可能会卡死</p>\n</li>\n<li><p>功能栏</p>\n<ul>\n<li>查询参数(扩展)</li>\n<li>数据转换(扩展)</li>\n<li>测试预览</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"配置大屏或报表（渲染展示）\"><a href=\"#配置大屏或报表（渲染展示）\" class=\"headerlink\" title=\"配置大屏或报表（渲染展示）\"></a>配置大屏或报表（渲染展示）</h4><ol>\n<li><p>添加报表</p>\n<p> 点击报表管理数据 -&gt; 新增 -&gt; 报表管理，填写报表名称、编码、类型。</p>\n<p> 注意报表编码唯一。</p>\n <img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191945273-633031838.png\" class=\"\"></li>\n<li><p>设计大屏（进入设计大屏）</p>\n<pre><code> 进入设计大屏其一：报表管理 -&gt; 列表操作栏 -&gt; 更多 -&gt; 设计可进入；其二：大屏报表 -&gt; 列表 -&gt;  设计图标可进入。\n\n设计空白页如下图有工具栏、图层、保存和配置栏等。 \n\n&#123;% asset_img 2291368-20220721192015456-1643726883.png  %&#125;\n</code></pre>\n<p>   点击工具栏组件拖到中间设计屏幕，鼠标选中组件可以看到右边有具体组件的配置，数据绑定及位置坐标设置，进行具体设置即可。</p>\n  <img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192029555-1871185722.png\" class=\"\"></li>\n<li><p>保存、预览、分享</p>\n<p>点击预览即可进入大屏展示界面。</p>\n<p>这个分享还是有点意思的，像百度网盘一样分享需要密码才能打开。</p>\n<p>具体如图。</p>\n<p>操作 - &gt; 更多 -&gt; 分享</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192358791-779277970.png\" class=\"\">\n\n<p>然后跳转到如下界面</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192408284-1212976555.png\" class=\"\">\n\n<p>点击创建链接</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192416373-1191184138.png\" class=\"\">\n\n<p>复制链接和分享码到浏览器打开时候就需要输入密码了。</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192426073-764010738.png\" class=\"\">\n\n<p>输入密码确认即可进入大屏了。</p>\n</li>\n</ol>\n<h3 id=\"系统设置\"><a href=\"#系统设置\" class=\"headerlink\" title=\"系统设置\"></a>系统设置</h3><h4 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h4><p>支持多种文件上传，如图片、pdf、视频等。</p>\n<h4 id=\"数据字典\"><a href=\"#数据字典\" class=\"headerlink\" title=\"数据字典\"></a>数据字典</h4><p>系统设置 -&gt; 数据字典 -&gt; 新增 -&gt; 填写配置</p>\n<p>字典列表操作 -&gt; 更多 -&gt; 编辑字典项</p>\n<h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h3><p>数据库伪数据</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191608294-1205959101.png\" class=\"\">\n\n\n<h4 id=\"查询参数\"><a href=\"#查询参数\" class=\"headerlink\" title=\"查询参数\"></a>查询参数</h4><blockquote>\n<p>查询参数主要是针对 sql 中存在的动态参数，需要在后续的大屏使用时动态传入的时候做的操作。http 类型数据源支持改请求路径。请求头，请求体内容。</p>\n</blockquote>\n<p>如图所示，查询 sql 中，定义了两个变量，startTime 和 endTime。那需要我们在查询参数中添加对应的两个参数。 参数名保持和查询 sql 中 ${param} 保持一致。</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191652637-703350503.png\" class=\"\">\n\n\n<p>测试预览：（展示的数据就只有startTime 和 endTime这段时间的数据了）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class=\"line\">    &quot;unsales&quot;: 0,</span><br><span class=\"line\">    &quot;manus&quot;: 7,</span><br><span class=\"line\">    &quot;id&quot;: 8,</span><br><span class=\"line\">    &quot;rework&quot;: 1,</span><br><span class=\"line\">    &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class=\"line\">    &quot;sales&quot;: 7,</span><br><span class=\"line\">    &quot;return&quot;: 0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"数据转换\"><a href=\"#数据转换\" class=\"headerlink\" title=\"数据转换\"></a>数据转换</h4><p>步骤：数据转换 -&gt; 新增 -&gt; (js脚本为例)</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191538622-1742764931.png\" class=\"\">\n\n\n<p><strong>需求1：实现对brand字段进行拆分,例如 A-100 拆分为 A 和 100</strong></p>\n<p>点击js脚本前小蜡笔图标编辑如下代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dataTransform</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//自定义脚本内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.遍历测试预览中的java.util.ArrayList&lt;java.lang.Object&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>, len = data.<span class=\"property\">length</span>; j &lt; len; j++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取一行数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> row = data[j]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//比如对brand字段进行拆分,例如A-100，B-50</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> brand = row[<span class=\"string\">&#x27;brand&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> split = brand.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//新增两个字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> model = split[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> series = split[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//对原始对象赋值</span></span><br><span class=\"line\"></span><br><span class=\"line\">        dataj = model</span><br><span class=\"line\"></span><br><span class=\"line\">        dataj = series</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>数据转换后测试预览</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class=\"line\">     &quot;unsales&quot;: 0,</span><br><span class=\"line\">     &quot;manus&quot;: 7,</span><br><span class=\"line\">     &quot;series&quot;: &quot;100&quot;,</span><br><span class=\"line\">     &quot;model&quot;: &quot;A&quot;,</span><br><span class=\"line\">     &quot;id&quot;: 8,</span><br><span class=\"line\">     &quot;rework&quot;: 1,</span><br><span class=\"line\">     &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class=\"line\">     &quot;sales&quot;: 7,</span><br><span class=\"line\">     &quot;return&quot;: 0</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> ] </span><br></pre></td></tr></table></figure>\n\n<p>   字典翻译(数据转换的一种，应该是官方封装好的脚本)</p>\n<p><strong>需求2：”model”: “A”,转换为”model”: “A模型”,</strong></p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191515359-510796598.png\" class=\"\">\n\n\n\n<p>数据转换+字典翻译后测试预览</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">     &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class=\"line\">     &quot;unsales&quot;: 0,</span><br><span class=\"line\">     &quot;manus&quot;: 7,</span><br><span class=\"line\">     &quot;series&quot;: &quot;100&quot;,</span><br><span class=\"line\">     &quot;model&quot;: &quot;A模型&quot;,</span><br><span class=\"line\">     &quot;id&quot;: 8,</span><br><span class=\"line\">     &quot;rework&quot;: 1,</span><br><span class=\"line\">     &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class=\"line\">     &quot;sales&quot;: 7,</span><br><span class=\"line\">     &quot;return&quot;: 0</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">] </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>以上就是我关于此次分享全部内容。</p>\n<p>当然因为水平和时间有限，如有不足之处，欢迎之后交流指正。</p>\n<p>最后感谢各位的聆听。</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<h2 id=\"AJ-Report小白配置大屏教程\"><a href=\"#AJ-Report小白配置大屏教程\" class=\"headerlink\" title=\"AJ-Report小白配置大屏教程\"></a>AJ-Report小白配置大屏教程</h2><h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>leader 上周周五快下班时给了我一个任务，问我说项目新集成的 AJ-Report 玩的怎么样了，下周给部门其他同事做个技术分享，快速教会其他人上手，刚来公司还算新人的我这叫一个受宠若惊啊，心想这是什么福报【手动狗头】，周六加班的理由来了啊，然后周六肝了一天，去官网探索后整理出这么一份算是操作手册吧。</p>\n<p>由于项目已经集成到项目中，所以下文主要展开怎么配置大屏，对于怎么集成以后有机会再做介绍。</p>\n<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><h4 id=\"其他大屏可视化工具\"><a href=\"#其他大屏可视化工具\" class=\"headerlink\" title=\"其他大屏可视化工具\"></a>其他大屏可视化工具</h4><p>由于不知道大家对大屏可视化的了解程度，所以先大概聊一下大屏可视化以及AJ-report有哪些优点，</p>\n<p>可能大家已经了解市面上DataEase、Superset等，这些大屏可视化技术目的都是为了让数据展示的更加直观，重点数据一目了然。<br>当然各有优缺点，如付费，技术栈支持等。有兴趣的话可以自己去研究一下，我就不多做赘述。</p>\n<p><a href=\"https://blog.csdn.net/shunshuntuo/article/details/123739448\">大屏可视化—DataEase、AJ-report、Superset调研对比</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_38500689/article/details/121290545?spm=1001.2101.3001.6650.2&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-121290545-blog-123739448.pc_relevant_aa&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-2-121290545-blog-123739448.pc_relevant_aa&utm_relevant_index=4\">dataease、AJ-report大屏可视化工具对比</a></p>\n<h4 id=\"AJ-Report优点\"><a href=\"#AJ-Report优点\" class=\"headerlink\" title=\"AJ-Report优点\"></a>AJ-Report优点</h4><p>接下来回到AJ-report，来看一下AJ-report有哪些优点，当然这也是我个人认为学习新技术比较重要的一点，官网的东西一般是最全的，并且比较有权威。</p>\n<p><a href=\"https://ajreport.beliefteam.cn/report-doc/\">AJ-report官网操作指南</a></p>\n<p>我简单总结了一下五点：</p>\n<ul>\n<li><p>完全开源的BI平台</p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/152340660\">BI平台</a> BI(Business Intelligence)，也就是商业智能。</p>\n</li>\n<li><p>多数据源支持</p>\n<p>内置mysql、elasticsearch、kudu等多种驱动</p>\n</li>\n<li><p>组件丰富</p>\n<p>大屏酷炫支持20种大屏组件/图表</p>\n</li>\n<li><p>最新最稳定的技术栈</p>\n</li>\n<li><p>设计简单</p>\n<p><strong>三步轻松完成大屏设计：配置数据源—-&gt;写SQL配置数据集—-&gt;拖拽配置大屏</strong>，保存发布即可。</p>\n<p>  实际这三步很好理解</p>\n<p>  配置数据源就是连接数据库的意思</p>\n<p>  —-&gt;写SQL配置数据集就是写sql语句查询想要的数据</p>\n<p>  —-&gt;拖拽配置大屏就是搞个前端页面把查询的数据展示出来</p>\n</li>\n</ul>\n<p>实际很多可视化流程思路都是类似的。 也就是说理解这个思路其他看板的配置也应该难不倒大家了。</p>\n<p>  数据流程图：</p>\n <img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191749922-146783398.png\" class=\"\">\n\n\n\n\n<h3 id=\"报表设计\"><a href=\"#报表设计\" class=\"headerlink\" title=\"报表设计\"></a>报表设计</h3><p>下面聊一下如何设计。</p>\n<p>也就是以上三步，我们就直接来设计页面看一下。</p>\n<h4 id=\"配置数据源（连接数据库）\"><a href=\"#配置数据源（连接数据库）\" class=\"headerlink\" title=\"配置数据源（连接数据库）\"></a>配置数据源（连接数据库）</h4><ol>\n<li><p>步骤</p>\n<p>点击菜单栏数据源 -&gt; 新增 -&gt; 项目基础配置,然后进行简单配置即可</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191906001-129999431.png\" class=\"\">\n\n<ul>\n<li>驱动类、连接串、用户名、密码必须填写正确。</li>\n<li>只有测试通过的数据源才可以保存。</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"配置数据集（查表）\"><a href=\"#配置数据集（查表）\" class=\"headerlink\" title=\"配置数据集（查表）\"></a>配置数据集（查表）</h4><ol>\n<li><p>步骤</p>\n<p>点击菜单栏数据集 -&gt; 新增 -&gt; 编辑数据集，填写数据源，数据集编码及名称，sql语句即可。</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191926832-623454467.png\" class=\"\"></li>\n<li><p>注意</p>\n<p>SQL数据集尽量不要使用 “select *”，以及展示很大的数据量，图表不一定能展示、页面可能会卡死</p>\n</li>\n<li><p>功能栏</p>\n<ul>\n<li>查询参数(扩展)</li>\n<li>数据转换(扩展)</li>\n<li>测试预览</li>\n</ul>\n</li>\n</ol>\n<h4 id=\"配置大屏或报表（渲染展示）\"><a href=\"#配置大屏或报表（渲染展示）\" class=\"headerlink\" title=\"配置大屏或报表（渲染展示）\"></a>配置大屏或报表（渲染展示）</h4><ol>\n<li><p>添加报表</p>\n<p> 点击报表管理数据 -&gt; 新增 -&gt; 报表管理，填写报表名称、编码、类型。</p>\n<p> 注意报表编码唯一。</p>\n <img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191945273-633031838.png\" class=\"\"></li>\n<li><p>设计大屏（进入设计大屏）</p>\n<pre><code> 进入设计大屏其一：报表管理 -&gt; 列表操作栏 -&gt; 更多 -&gt; 设计可进入；其二：大屏报表 -&gt; 列表 -&gt;  设计图标可进入。\n\n设计空白页如下图有工具栏、图层、保存和配置栏等。 \n\n&#123;% asset_img 2291368-20220721192015456-1643726883.png  %&#125;\n</code></pre>\n<p>   点击工具栏组件拖到中间设计屏幕，鼠标选中组件可以看到右边有具体组件的配置，数据绑定及位置坐标设置，进行具体设置即可。</p>\n  <img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192029555-1871185722.png\" class=\"\"></li>\n<li><p>保存、预览、分享</p>\n<p>点击预览即可进入大屏展示界面。</p>\n<p>这个分享还是有点意思的，像百度网盘一样分享需要密码才能打开。</p>\n<p>具体如图。</p>\n<p>操作 - &gt; 更多 -&gt; 分享</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192358791-779277970.png\" class=\"\">\n\n<p>然后跳转到如下界面</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192408284-1212976555.png\" class=\"\">\n\n<p>点击创建链接</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192416373-1191184138.png\" class=\"\">\n\n<p>复制链接和分享码到浏览器打开时候就需要输入密码了。</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721192426073-764010738.png\" class=\"\">\n\n<p>输入密码确认即可进入大屏了。</p>\n</li>\n</ol>\n<h3 id=\"系统设置\"><a href=\"#系统设置\" class=\"headerlink\" title=\"系统设置\"></a>系统设置</h3><h4 id=\"文件管理\"><a href=\"#文件管理\" class=\"headerlink\" title=\"文件管理\"></a>文件管理</h4><p>支持多种文件上传，如图片、pdf、视频等。</p>\n<h4 id=\"数据字典\"><a href=\"#数据字典\" class=\"headerlink\" title=\"数据字典\"></a>数据字典</h4><p>系统设置 -&gt; 数据字典 -&gt; 新增 -&gt; 填写配置</p>\n<p>字典列表操作 -&gt; 更多 -&gt; 编辑字典项</p>\n<h3 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h3><p>数据库伪数据</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191608294-1205959101.png\" class=\"\">\n\n\n<h4 id=\"查询参数\"><a href=\"#查询参数\" class=\"headerlink\" title=\"查询参数\"></a>查询参数</h4><blockquote>\n<p>查询参数主要是针对 sql 中存在的动态参数，需要在后续的大屏使用时动态传入的时候做的操作。http 类型数据源支持改请求路径。请求头，请求体内容。</p>\n</blockquote>\n<p>如图所示，查询 sql 中，定义了两个变量，startTime 和 endTime。那需要我们在查询参数中添加对应的两个参数。 参数名保持和查询 sql 中 ${param} 保持一致。</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191652637-703350503.png\" class=\"\">\n\n\n<p>测试预览：（展示的数据就只有startTime 和 endTime这段时间的数据了）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class=\"line\">    &quot;unsales&quot;: 0,</span><br><span class=\"line\">    &quot;manus&quot;: 7,</span><br><span class=\"line\">    &quot;id&quot;: 8,</span><br><span class=\"line\">    &quot;rework&quot;: 1,</span><br><span class=\"line\">    &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class=\"line\">    &quot;sales&quot;: 7,</span><br><span class=\"line\">    &quot;return&quot;: 0</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  ...</span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n<h4 id=\"数据转换\"><a href=\"#数据转换\" class=\"headerlink\" title=\"数据转换\"></a>数据转换</h4><p>步骤：数据转换 -&gt; 新增 -&gt; (js脚本为例)</p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191538622-1742764931.png\" class=\"\">\n\n\n<p><strong>需求1：实现对brand字段进行拆分,例如 A-100 拆分为 A 和 100</strong></p>\n<p>点击js脚本前小蜡笔图标编辑如下代码</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">dataTransform</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//自定义脚本内容</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//1.遍历测试预览中的java.util.ArrayList&lt;java.lang.Object&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">for</span>(j = <span class=\"number\">0</span>, len = data.<span class=\"property\">length</span>; j &lt; len; j++)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//获取一行数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> row = data[j]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//比如对brand字段进行拆分,例如A-100，B-50</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> brand = row[<span class=\"string\">&#x27;brand&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> split = brand.<span class=\"title function_\">split</span>(<span class=\"string\">&#x27;-&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//新增两个字段</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> model = split[<span class=\"number\">0</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">var</span> series = split[<span class=\"number\">1</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//对原始对象赋值</span></span><br><span class=\"line\"></span><br><span class=\"line\">        dataj = model</span><br><span class=\"line\"></span><br><span class=\"line\">        dataj = series</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> data;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>数据转换后测试预览</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">   &#123;</span><br><span class=\"line\">     &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class=\"line\">     &quot;unsales&quot;: 0,</span><br><span class=\"line\">     &quot;manus&quot;: 7,</span><br><span class=\"line\">     &quot;series&quot;: &quot;100&quot;,</span><br><span class=\"line\">     &quot;model&quot;: &quot;A&quot;,</span><br><span class=\"line\">     &quot;id&quot;: 8,</span><br><span class=\"line\">     &quot;rework&quot;: 1,</span><br><span class=\"line\">     &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class=\"line\">     &quot;sales&quot;: 7,</span><br><span class=\"line\">     &quot;return&quot;: 0</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"> ] </span><br></pre></td></tr></table></figure>\n\n<p>   字典翻译(数据转换的一种，应该是官方封装好的脚本)</p>\n<p><strong>需求2：”model”: “A”,转换为”model”: “A模型”,</strong></p>\n<img src=\"/2022/07/21/AJ-Report%E5%B0%8F%E7%99%BD%E9%85%8D%E7%BD%AE%E5%A4%A7%E5%B1%8F%E6%95%99%E7%A8%8B/2291368-20220721191515359-510796598.png\" class=\"\">\n\n\n\n<p>数据转换+字典翻译后测试预览</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">     &quot;datetime&quot;: &quot;2021-06-19&quot;,</span><br><span class=\"line\">     &quot;unsales&quot;: 0,</span><br><span class=\"line\">     &quot;manus&quot;: 7,</span><br><span class=\"line\">     &quot;series&quot;: &quot;100&quot;,</span><br><span class=\"line\">     &quot;model&quot;: &quot;A模型&quot;,</span><br><span class=\"line\">     &quot;id&quot;: 8,</span><br><span class=\"line\">     &quot;rework&quot;: 1,</span><br><span class=\"line\">     &quot;brand&quot;: &quot;A-100&quot;,</span><br><span class=\"line\">     &quot;sales&quot;: 7,</span><br><span class=\"line\">     &quot;return&quot;: 0</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">] </span><br></pre></td></tr></table></figure>\n\n<h3 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h3><p>以上就是我关于此次分享全部内容。</p>\n<p>当然因为水平和时间有限，如有不足之处，欢迎之后交流指正。</p>\n<p>最后感谢各位的聆听。</p>\n"},{"title":"Centos7.X下Docker环境安装并配置加速镜像","copyright":true,"date":"2022-11-28T10:11:00.000Z","_content":"\n1、安装\n\n```\nyum install -y docker\n```\n\n2、开启Docker服务\n\n```\nsystemctl start docker.service\n```\n\n3、查看安装版本\n```\ndocker version\n```\n\n![](Centos7.X下Docker环境安装并配置加速镜像/2291368-20221128155713699-365566294.png)\n\n\n4、设置开机启动\n```\nsystemctl enable docker.service\n```\n\n5、配置DOCKER镜像下载加速\n默认安装后的Docker 环境在拉取Docker 镜像时速度较慢\n\n\n直接编辑配置⽂件：\n```\nvim /etc/docker/daemon.json\n```\n在其中加⼊加速镜像源地址(如网易)即可：\n```\n{\n\"registry-mirrors\": [\"http://hub-mirror.c.163.com\"]\n}\n```\n\n\n配置完加速地址后，重新加载配置⽂件\n```\nsystemctl daemon-reload\n```\n重启docker 服务即可\n```\nsystemctl restart docker.service\n```\n\n6、常见国内镜像源\n\n```\nDocker中国官方镜像加速\n--registry-mirror=https://registry.docker-cn.com\n \n网易163镜像加速\n--registry-mirror=http://hub-mirror.c.163.com\n \n中科大镜像加速\n--registry-mirror=https://docker.mirrors.ustc.edu.cn\n \n阿里云镜像加速（需要注册账号后使用）\n--registry-mirror=https://{your_id}.mirror.aliyuncs.com\n \ndaocloud镜像加速（需要注册账号后使用）\n--registry-mirror=http://{your_id}.m.daocloud.io\n```\n","source":"_posts/Centos7.X下Docker环境安装并配置加速镜像.md","raw":"---\ntitle: 'Centos7.X下Docker环境安装并配置加速镜像'\ncopyright: true\ndate: '2022-11-28 18:11'\ntags: 'Docker'\ncategories: 'categories'\n---\n\n1、安装\n\n```\nyum install -y docker\n```\n\n2、开启Docker服务\n\n```\nsystemctl start docker.service\n```\n\n3、查看安装版本\n```\ndocker version\n```\n\n![](Centos7.X下Docker环境安装并配置加速镜像/2291368-20221128155713699-365566294.png)\n\n\n4、设置开机启动\n```\nsystemctl enable docker.service\n```\n\n5、配置DOCKER镜像下载加速\n默认安装后的Docker 环境在拉取Docker 镜像时速度较慢\n\n\n直接编辑配置⽂件：\n```\nvim /etc/docker/daemon.json\n```\n在其中加⼊加速镜像源地址(如网易)即可：\n```\n{\n\"registry-mirrors\": [\"http://hub-mirror.c.163.com\"]\n}\n```\n\n\n配置完加速地址后，重新加载配置⽂件\n```\nsystemctl daemon-reload\n```\n重启docker 服务即可\n```\nsystemctl restart docker.service\n```\n\n6、常见国内镜像源\n\n```\nDocker中国官方镜像加速\n--registry-mirror=https://registry.docker-cn.com\n \n网易163镜像加速\n--registry-mirror=http://hub-mirror.c.163.com\n \n中科大镜像加速\n--registry-mirror=https://docker.mirrors.ustc.edu.cn\n \n阿里云镜像加速（需要注册账号后使用）\n--registry-mirror=https://{your_id}.mirror.aliyuncs.com\n \ndaocloud镜像加速（需要注册账号后使用）\n--registry-mirror=http://{your_id}.m.daocloud.io\n```\n","slug":"Centos7.X下Docker环境安装并配置加速镜像","published":1,"updated":"2022-12-08T05:34:52.111Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftc0009sw6x2qsh4l44","content":"<p>1、安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br></pre></td></tr></table></figure>\n\n<p>2、开启Docker服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n\n<p>3、查看安装版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/28/Centos7.X%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/2291368-20221128155713699-365566294.png\" class=\"\">\n\n\n<p>4、设置开机启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable docker.service</span><br></pre></td></tr></table></figure>\n\n<p>5、配置DOCKER镜像下载加速<br>默认安装后的Docker 环境在拉取Docker 镜像时速度较慢</p>\n<p>直接编辑配置⽂件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n<p>在其中加⼊加速镜像源地址(如网易)即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>配置完加速地址后，重新加载配置⽂件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n<p>重启docker 服务即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker.service</span><br></pre></td></tr></table></figure>\n\n<p>6、常见国内镜像源</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Docker中国官方镜像加速</span><br><span class=\"line\">--registry-mirror=https://registry.docker-cn.com</span><br><span class=\"line\"> </span><br><span class=\"line\">网易163镜像加速</span><br><span class=\"line\">--registry-mirror=http://hub-mirror.c.163.com</span><br><span class=\"line\"> </span><br><span class=\"line\">中科大镜像加速</span><br><span class=\"line\">--registry-mirror=https://docker.mirrors.ustc.edu.cn</span><br><span class=\"line\"> </span><br><span class=\"line\">阿里云镜像加速（需要注册账号后使用）</span><br><span class=\"line\">--registry-mirror=https://&#123;your_id&#125;.mirror.aliyuncs.com</span><br><span class=\"line\"> </span><br><span class=\"line\">daocloud镜像加速（需要注册账号后使用）</span><br><span class=\"line\">--registry-mirror=http://&#123;your_id&#125;.m.daocloud.io</span><br></pre></td></tr></table></figure>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"","more":"<p>1、安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y docker</span><br></pre></td></tr></table></figure>\n\n<p>2、开启Docker服务</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start docker.service</span><br></pre></td></tr></table></figure>\n\n<p>3、查看安装版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker version</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/28/Centos7.X%E4%B8%8BDocker%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AE%E5%8A%A0%E9%80%9F%E9%95%9C%E5%83%8F/2291368-20221128155713699-365566294.png\" class=\"\">\n\n\n<p>4、设置开机启动</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl enable docker.service</span><br></pre></td></tr></table></figure>\n\n<p>5、配置DOCKER镜像下载加速<br>默认安装后的Docker 环境在拉取Docker 镜像时速度较慢</p>\n<p>直接编辑配置⽂件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/docker/daemon.json</span><br></pre></td></tr></table></figure>\n<p>在其中加⼊加速镜像源地址(如网易)即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">&quot;registry-mirrors&quot;: [&quot;http://hub-mirror.c.163.com&quot;]</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<p>配置完加速地址后，重新加载配置⽂件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload</span><br></pre></td></tr></table></figure>\n<p>重启docker 服务即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart docker.service</span><br></pre></td></tr></table></figure>\n\n<p>6、常见国内镜像源</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Docker中国官方镜像加速</span><br><span class=\"line\">--registry-mirror=https://registry.docker-cn.com</span><br><span class=\"line\"> </span><br><span class=\"line\">网易163镜像加速</span><br><span class=\"line\">--registry-mirror=http://hub-mirror.c.163.com</span><br><span class=\"line\"> </span><br><span class=\"line\">中科大镜像加速</span><br><span class=\"line\">--registry-mirror=https://docker.mirrors.ustc.edu.cn</span><br><span class=\"line\"> </span><br><span class=\"line\">阿里云镜像加速（需要注册账号后使用）</span><br><span class=\"line\">--registry-mirror=https://&#123;your_id&#125;.mirror.aliyuncs.com</span><br><span class=\"line\"> </span><br><span class=\"line\">daocloud镜像加速（需要注册账号后使用）</span><br><span class=\"line\">--registry-mirror=http://&#123;your_id&#125;.m.daocloud.io</span><br></pre></td></tr></table></figure>\n"},{"title":"Hexo页面中嵌入豆瓣插件展示豆瓣图书电影","copyright":true,"date":"2022-11-29T09:05:00.000Z","_content":"\n## Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\n\n### 安装\n\n```\nnpm install hexo-douban --save\n```\n\n### 配置\n在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）\n```\n# 豆瓣 \ndouban:\n  id: 191537030\n  book:\n    path: books/index.html\n    title: 'CodeRain 的书架'\n    quote: ''\n  movie:\n    path: movies/index.html\n    title: '刻骨铭心的电影'\n    quote: '她'\n  timeout: 10000 \n```\n\n- user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？\n- path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。\n- title: 该页面的标题。\n- quote: 写在页面开头的一段话,支持html语法。\n- timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。\n如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。\n\n### 主题兼容\n对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :\n```\npjax:\n  enable: true\n  exclude:\n    - /movies/\n    - /books/\n    - /games/\n```\n\n### 菜单\n如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.\n```\nmenu:\n  Home: /\n  Archives: /archives\n  Books: /books     #This is your books page\n  Movies: /movies   #This is your movies page\n  Games: /games   #This is your games page\n```\n注意这些页面不需要new创建 \n而是使用`hexo douban -bmg`创建\n\n### 使用\n```\n$ hexo douban -h\nUsage: hexo douban\n\nDescription:\nGenerate pages from douban\n\nOptions:\n  -b, --books   Generate douban books only\n  -g, --games   Generate douban games only\n  -m, --movies  Generate douban movies only\n如果不加参数，那么默认参数为-bgm。\n```\n需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。\n\n\n官方指导文档：https://github.com/mythsman/hexo-douban\n\n### 效果\n\n执行`hexo douban -bm`\n\n![](Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影/2291368-20221129160808235-2056680578.png)\n","source":"_posts/Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影.md","raw":"---\ntitle: 'Hexo页面中嵌入豆瓣插件展示豆瓣图书电影'\ncopyright: true\ndate: '2022-11-29 17:05'\ntags: 'Hexo'\ncategories: '个人博客'\n---\n\n## Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\n\n### 安装\n\n```\nnpm install hexo-douban --save\n```\n\n### 配置\n在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）\n```\n# 豆瓣 \ndouban:\n  id: 191537030\n  book:\n    path: books/index.html\n    title: 'CodeRain 的书架'\n    quote: ''\n  movie:\n    path: movies/index.html\n    title: '刻骨铭心的电影'\n    quote: '她'\n  timeout: 10000 \n```\n\n- user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？\n- path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。\n- title: 该页面的标题。\n- quote: 写在页面开头的一段话,支持html语法。\n- timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。\n如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。\n\n### 主题兼容\n对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :\n```\npjax:\n  enable: true\n  exclude:\n    - /movies/\n    - /books/\n    - /games/\n```\n\n### 菜单\n如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.\n```\nmenu:\n  Home: /\n  Archives: /archives\n  Books: /books     #This is your books page\n  Movies: /movies   #This is your movies page\n  Games: /games   #This is your games page\n```\n注意这些页面不需要new创建 \n而是使用`hexo douban -bmg`创建\n\n### 使用\n```\n$ hexo douban -h\nUsage: hexo douban\n\nDescription:\nGenerate pages from douban\n\nOptions:\n  -b, --books   Generate douban books only\n  -g, --games   Generate douban games only\n  -m, --movies  Generate douban movies only\n如果不加参数，那么默认参数为-bgm。\n```\n需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。\n\n\n官方指导文档：https://github.com/mythsman/hexo-douban\n\n### 效果\n\n执行`hexo douban -bm`\n\n![](Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影/2291368-20221129160808235-2056680578.png)\n","slug":"Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影","published":1,"updated":"2022-12-07T07:45:06.484Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftd000bsw6x7cj0cl38","content":"<h2 id=\"Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\"><a href=\"#Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\" class=\"headerlink\" title=\"Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\"></a>Hexo页面中嵌入豆瓣插件展示豆瓣图书电影</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-douban --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 豆瓣 </span><br><span class=\"line\">douban:</span><br><span class=\"line\">  id: 191537030</span><br><span class=\"line\">  book:</span><br><span class=\"line\">    path: books/index.html</span><br><span class=\"line\">    title: &#x27;CodeRain 的书架&#x27;</span><br><span class=\"line\">    quote: &#x27;&#x27;</span><br><span class=\"line\">  movie:</span><br><span class=\"line\">    path: movies/index.html</span><br><span class=\"line\">    title: &#x27;刻骨铭心的电影&#x27;</span><br><span class=\"line\">    quote: &#x27;她&#x27;</span><br><span class=\"line\">  timeout: 10000 </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？</li>\n<li>path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。</li>\n<li>title: 该页面的标题。</li>\n<li>quote: 写在页面开头的一段话,支持html语法。</li>\n<li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</li>\n</ul>\n<h3 id=\"主题兼容\"><a href=\"#主题兼容\" class=\"headerlink\" title=\"主题兼容\"></a>主题兼容</h3><p>对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pjax:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - /movies/</span><br><span class=\"line\">    - /books/</span><br><span class=\"line\">    - /games/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h3><p>如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  Home: /</span><br><span class=\"line\">  Archives: /archives</span><br><span class=\"line\">  Books: /books     #This is your books page</span><br><span class=\"line\">  Movies: /movies   #This is your movies page</span><br><span class=\"line\">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure>\n<p>注意这些页面不需要new创建<br>而是使用<code>hexo douban -bmg</code>创建</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo douban -h</span><br><span class=\"line\">Usage: hexo douban</span><br><span class=\"line\"></span><br><span class=\"line\">Description:</span><br><span class=\"line\">Generate pages from douban</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -b, --books   Generate douban books only</span><br><span class=\"line\">  -g, --games   Generate douban games only</span><br><span class=\"line\">  -m, --movies  Generate douban movies only</span><br><span class=\"line\">如果不加参数，那么默认参数为-bgm。</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p>\n<p>官方指导文档：<a href=\"https://github.com/mythsman/hexo-douban\">https://github.com/mythsman/hexo-douban</a></p>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p>执行<code>hexo douban -bm</code></p>\n<img src=\"/2022/11/29/Hexo%20%E9%A1%B5%E9%9D%A2%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6%E5%B1%95%E7%A4%BA%E8%B1%86%E7%93%A3%E5%9B%BE%E4%B9%A6%E7%94%B5%E5%BD%B1/2291368-20221129160808235-2056680578.png\" class=\"\">\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"","more":"<h2 id=\"Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\"><a href=\"#Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\" class=\"headerlink\" title=\"Hexo页面中嵌入豆瓣插件展示豆瓣图书电影\"></a>Hexo页面中嵌入豆瓣插件展示豆瓣图书电影</h2><h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-douban --save</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h3><p>在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 豆瓣 </span><br><span class=\"line\">douban:</span><br><span class=\"line\">  id: 191537030</span><br><span class=\"line\">  book:</span><br><span class=\"line\">    path: books/index.html</span><br><span class=\"line\">    title: &#x27;CodeRain 的书架&#x27;</span><br><span class=\"line\">    quote: &#x27;&#x27;</span><br><span class=\"line\">  movie:</span><br><span class=\"line\">    path: movies/index.html</span><br><span class=\"line\">    title: &#x27;刻骨铭心的电影&#x27;</span><br><span class=\"line\">    quote: &#x27;她&#x27;</span><br><span class=\"line\">  timeout: 10000 </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？</li>\n<li>path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。</li>\n<li>title: 该页面的标题。</li>\n<li>quote: 写在页面开头的一段话,支持html语法。</li>\n<li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</li>\n</ul>\n<h3 id=\"主题兼容\"><a href=\"#主题兼容\" class=\"headerlink\" title=\"主题兼容\"></a>主题兼容</h3><p>对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pjax:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - /movies/</span><br><span class=\"line\">    - /books/</span><br><span class=\"line\">    - /games/</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h3><p>如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  Home: /</span><br><span class=\"line\">  Archives: /archives</span><br><span class=\"line\">  Books: /books     #This is your books page</span><br><span class=\"line\">  Movies: /movies   #This is your movies page</span><br><span class=\"line\">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure>\n<p>注意这些页面不需要new创建<br>而是使用<code>hexo douban -bmg</code>创建</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo douban -h</span><br><span class=\"line\">Usage: hexo douban</span><br><span class=\"line\"></span><br><span class=\"line\">Description:</span><br><span class=\"line\">Generate pages from douban</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -b, --books   Generate douban books only</span><br><span class=\"line\">  -g, --games   Generate douban games only</span><br><span class=\"line\">  -m, --movies  Generate douban movies only</span><br><span class=\"line\">如果不加参数，那么默认参数为-bgm。</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p>\n<p>官方指导文档：<a href=\"https://github.com/mythsman/hexo-douban\">https://github.com/mythsman/hexo-douban</a></p>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p>执行<code>hexo douban -bm</code></p>\n<img src=\"/2022/11/29/Hexo%20%E9%A1%B5%E9%9D%A2%E4%B8%AD%E5%B5%8C%E5%85%A5%E8%B1%86%E7%93%A3%E6%8F%92%E4%BB%B6%E5%B1%95%E7%A4%BA%E8%B1%86%E7%93%A3%E5%9B%BE%E4%B9%A6%E7%94%B5%E5%BD%B1/2291368-20221129160808235-2056680578.png\" class=\"\">\n"},{"title":"Hexo+Github免费搭建博客教程","copyright":true,"date":"2022-05-31T15:43:00.000Z","sticky":10,"_content":"\n# Hexo+Github免费搭建博客教程\n\n## 下载安装node.js\n\n在[node.js官网](https://nodejs.org/zh-cn/)下载安装包安装即可。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233223642-349131297.png)\n\n\nWin键+R输入cmd进入命令窗口输入node  -v(注意-v前有个空格)，如图若出现node版本信息，则安装成功。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233240621-744853097.png)\n\n\n## 注册GitHub\n\n在[github官网](https://github.com/)注册登录即可\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233317633-390444962.png)\n\n\n### 创建第一个github仓库\n\n如图：1创建>2命名>3勾选>4create即可\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233337883-596107071.png)\n\n\n\n**待完善**\n\n**待完善**\n\n---\n\n\n\n## 安装git\n\n在[git for windows](https://gitforwindows.org/)下载安装即可\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233356912-836859301.png)\n\n\n##四、GitHub的ssh配置\n\n打开git bash，输入如下命令\n\n```dos\nssh-keygen -t rsa -C \"your_email@youremail.com\" \n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233422511-823096424.png)\n\n\n如图执行这条命令，会产生下图两个文件\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233443240-218493205.png)\n\n\n打开GitHub，新建ssh key\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233458824-948378071.png)\n\n\n打开.ssh目录下的id_rsa.pub文件，复制里面的内容，到github如下所示SSH key的信息，添加即可。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233522724-1594630480.png)\n\n\n## hexo的使用\n\n新建Blog文件夹(自己任意设置)，装载hexo到E盘Blog文件夹下\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233545215-1500378559.png)\n\n\n```dos\nC:\\Users\\Li>E:      //切换到E盘，自行选择装在盘符地址\n\nE:\\>cd Blog\t\t\t//切换到Blog\t\t\t\n\nE:\\Blog>npm install hexo-cli -g   //下载hexo命令\n\n$ hexo init CodedogWorld\n```\n\n安装成功如图\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233607522-1071796197.png)\n\n\n执行以下代码\n\n```dos\nE:\\Blog>cd CodedogWorld\n\nE:\\Blog\\CodedogWorld>npm install    //安装依赖\n\nE:\\Blog\\CodedogWorld>hexo s -p 5555    \n```\n\n结果如图\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233627278-280180249.png)\n\n\n浏览器输入http://localhost:5555/出现如下图，则搭建成功。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233644620-1741914965.png)\n\n\nps:\n\n[hexo官网](https://hexo.io/zh-cn/docs/)，官网文档有安装步骤。\n\n[参考视频]()\n\n[参考博客](https://www.cnblogs.com/zjfjava/p/10080569.html)\n\n## 代码编辑器安装及修改博客内容\n\n**待补充**\n\n**待补充**\n\n---\n\n\n\n配置   [相关文档](https://hexo.io/docs/one-command-deployment)\n\n```xml\ntype: git                //注意git前空格 \nrepo：https://github.com/CodedogWorld/CodedogWorld.github.io.git\n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233729477-1011260416.png)\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233742049-1219964528.png)\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233757896-1394280158.png)\n\n\n## hexo发布到github\n\n```dos\nE:\\Blog\\CodedogWorld>hexo g\n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233817728-1392655527.png)\n\n\n报错\n\n```dos\nE:\\Blog\\CodedogWorld>hexo d\nINFO  Validating config\nERROR Deployer not found: git\n```\n\n修复问题(下端口)\n\n[Git文档](https://hexo.io/docs/one-command-deployment)\n\n```dos\nnpm install hexo-deployer-git --save\n\nE:\\Blog\\CodedogWorld>hexo g     //生成静态文件\n\nE:\\Blog\\CodedogWorld>hexo d    //文件生成后立即部署网站\n```\n\n成功运行\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233838933-422483785.png)\n\n\n## next主题使用\n\n[next使用教程](http://theme-next.iissnan.com/getting-started.html)\n\n**为NexT主题添加文章阅读量统计功能**\n\n标签分类关于页面创建\n\n```bash\nhexo n page tags    #标签页面创建\nhexo n page categories     #分类页面创建\nhexo n page about       #关于页面创建\n```\n\n然后分别在各自md文件中加入\n\n```md\ntype: \"tags\"\ntype: \"categories\"\n```\n\n\n## 博客创建\n\n命令行输入如下命令\n\n```node\nhexo new \"markdown语法\"\n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531234214780-944416990.png)\n\n\n删除已经创建或者创建错误的博客\n\n1. 到目录/source/_posts下删除相应的文章\n2. $ hexo g\n3. $ hexo d\n\n## hexo问题\n\n**问题1：**\n\n> Accessing non-existent property 'column' of module exports inside circular dependency\n\n```hexo\n(node:22132) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:22132) Warning: Accessing non-existent property 'column' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'column' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency\n```\n\n**方案**:\n\n\n\n**问题2：**\n\n```dos\nWARN  Since language_switcher is turned on, the caching is disabled to avoid potential hazards.\n```\n\n\n\n**问题3**：\n\n```dos\n err: Error: Spawn failed\n      at ChildProcess.<anonymous> (E:\\Blog\\CodedogWorld\\node_modules\\hexo-util\\lib\\spawn.js:51:21)\n      at ChildProcess.emit (events.js:315:20)\n      at ChildProcess.cp.emit (E:\\Blog\\CodedogWorld\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)\n      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) {\n    code: 128\n```\n\n**原因**:\n\n> 因为`git`进行`push`或者`hexo d`的时候改变了一些`.deploy_git`文件下的内容\n\n**方案**:\n\n>  1. 删除`.deploy_git`文件夹;\n>  2. 输入`git config --global core.autocrlf false`\n>  3. 然后，依次执行：\n>     `hexo clean`\n>     `hexo g`\n>     `hexo d`\n>\n\n\n\n**问题4**\n\n![谷歌无法访问](Hexo+Github免费搭建博客教程/2291368-20220531234251609-427743523.png)\n\n\n原因：谷歌搜索引擎问题\n\n解决方案：\n\n设置>管理搜索引擎>更换百度搜索引擎\n\n\n[换电脑后怎么迁移hexo博客？](https://blog.csdn.net/qq_36667170/article/details/118163563)","source":"_posts/Hexo+Github免费搭建博客教程.md","raw":"---\ntitle: 'Hexo+Github免费搭建博客教程'\ncopyright: true\ndate: '2022-05-31 23:43'\ntags: 'Hexo'\ncategories: '个人博客'\nsticky: 10\n---\n\n# Hexo+Github免费搭建博客教程\n\n## 下载安装node.js\n\n在[node.js官网](https://nodejs.org/zh-cn/)下载安装包安装即可。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233223642-349131297.png)\n\n\nWin键+R输入cmd进入命令窗口输入node  -v(注意-v前有个空格)，如图若出现node版本信息，则安装成功。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233240621-744853097.png)\n\n\n## 注册GitHub\n\n在[github官网](https://github.com/)注册登录即可\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233317633-390444962.png)\n\n\n### 创建第一个github仓库\n\n如图：1创建>2命名>3勾选>4create即可\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233337883-596107071.png)\n\n\n\n**待完善**\n\n**待完善**\n\n---\n\n\n\n## 安装git\n\n在[git for windows](https://gitforwindows.org/)下载安装即可\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233356912-836859301.png)\n\n\n##四、GitHub的ssh配置\n\n打开git bash，输入如下命令\n\n```dos\nssh-keygen -t rsa -C \"your_email@youremail.com\" \n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233422511-823096424.png)\n\n\n如图执行这条命令，会产生下图两个文件\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233443240-218493205.png)\n\n\n打开GitHub，新建ssh key\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233458824-948378071.png)\n\n\n打开.ssh目录下的id_rsa.pub文件，复制里面的内容，到github如下所示SSH key的信息，添加即可。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233522724-1594630480.png)\n\n\n## hexo的使用\n\n新建Blog文件夹(自己任意设置)，装载hexo到E盘Blog文件夹下\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233545215-1500378559.png)\n\n\n```dos\nC:\\Users\\Li>E:      //切换到E盘，自行选择装在盘符地址\n\nE:\\>cd Blog\t\t\t//切换到Blog\t\t\t\n\nE:\\Blog>npm install hexo-cli -g   //下载hexo命令\n\n$ hexo init CodedogWorld\n```\n\n安装成功如图\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233607522-1071796197.png)\n\n\n执行以下代码\n\n```dos\nE:\\Blog>cd CodedogWorld\n\nE:\\Blog\\CodedogWorld>npm install    //安装依赖\n\nE:\\Blog\\CodedogWorld>hexo s -p 5555    \n```\n\n结果如图\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233627278-280180249.png)\n\n\n浏览器输入http://localhost:5555/出现如下图，则搭建成功。\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233644620-1741914965.png)\n\n\nps:\n\n[hexo官网](https://hexo.io/zh-cn/docs/)，官网文档有安装步骤。\n\n[参考视频]()\n\n[参考博客](https://www.cnblogs.com/zjfjava/p/10080569.html)\n\n## 代码编辑器安装及修改博客内容\n\n**待补充**\n\n**待补充**\n\n---\n\n\n\n配置   [相关文档](https://hexo.io/docs/one-command-deployment)\n\n```xml\ntype: git                //注意git前空格 \nrepo：https://github.com/CodedogWorld/CodedogWorld.github.io.git\n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233729477-1011260416.png)\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233742049-1219964528.png)\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233757896-1394280158.png)\n\n\n## hexo发布到github\n\n```dos\nE:\\Blog\\CodedogWorld>hexo g\n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233817728-1392655527.png)\n\n\n报错\n\n```dos\nE:\\Blog\\CodedogWorld>hexo d\nINFO  Validating config\nERROR Deployer not found: git\n```\n\n修复问题(下端口)\n\n[Git文档](https://hexo.io/docs/one-command-deployment)\n\n```dos\nnpm install hexo-deployer-git --save\n\nE:\\Blog\\CodedogWorld>hexo g     //生成静态文件\n\nE:\\Blog\\CodedogWorld>hexo d    //文件生成后立即部署网站\n```\n\n成功运行\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531233838933-422483785.png)\n\n\n## next主题使用\n\n[next使用教程](http://theme-next.iissnan.com/getting-started.html)\n\n**为NexT主题添加文章阅读量统计功能**\n\n标签分类关于页面创建\n\n```bash\nhexo n page tags    #标签页面创建\nhexo n page categories     #分类页面创建\nhexo n page about       #关于页面创建\n```\n\n然后分别在各自md文件中加入\n\n```md\ntype: \"tags\"\ntype: \"categories\"\n```\n\n\n## 博客创建\n\n命令行输入如下命令\n\n```node\nhexo new \"markdown语法\"\n```\n\n![](Hexo+Github免费搭建博客教程/2291368-20220531234214780-944416990.png)\n\n\n删除已经创建或者创建错误的博客\n\n1. 到目录/source/_posts下删除相应的文章\n2. $ hexo g\n3. $ hexo d\n\n## hexo问题\n\n**问题1：**\n\n> Accessing non-existent property 'column' of module exports inside circular dependency\n\n```hexo\n(node:22132) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency\n(Use `node --trace-warnings ...` to show where the warning was created)\n(node:22132) Warning: Accessing non-existent property 'column' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'lineno' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'column' of module exports inside circular dependency\n(node:22132) Warning: Accessing non-existent property 'filename' of module exports inside circular dependency\n```\n\n**方案**:\n\n\n\n**问题2：**\n\n```dos\nWARN  Since language_switcher is turned on, the caching is disabled to avoid potential hazards.\n```\n\n\n\n**问题3**：\n\n```dos\n err: Error: Spawn failed\n      at ChildProcess.<anonymous> (E:\\Blog\\CodedogWorld\\node_modules\\hexo-util\\lib\\spawn.js:51:21)\n      at ChildProcess.emit (events.js:315:20)\n      at ChildProcess.cp.emit (E:\\Blog\\CodedogWorld\\node_modules\\cross-spawn\\lib\\enoent.js:34:29)\n      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) {\n    code: 128\n```\n\n**原因**:\n\n> 因为`git`进行`push`或者`hexo d`的时候改变了一些`.deploy_git`文件下的内容\n\n**方案**:\n\n>  1. 删除`.deploy_git`文件夹;\n>  2. 输入`git config --global core.autocrlf false`\n>  3. 然后，依次执行：\n>     `hexo clean`\n>     `hexo g`\n>     `hexo d`\n>\n\n\n\n**问题4**\n\n![谷歌无法访问](Hexo+Github免费搭建博客教程/2291368-20220531234251609-427743523.png)\n\n\n原因：谷歌搜索引擎问题\n\n解决方案：\n\n设置>管理搜索引擎>更换百度搜索引擎\n\n\n[换电脑后怎么迁移hexo博客？](https://blog.csdn.net/qq_36667170/article/details/118163563)","slug":"Hexo+Github免费搭建博客教程","published":1,"updated":"2022-12-08T10:06:40.716Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftf000gsw6xbsz57dg5","content":"<h1 id=\"Hexo-Github免费搭建博客教程\"><a href=\"#Hexo-Github免费搭建博客教程\" class=\"headerlink\" title=\"Hexo+Github免费搭建博客教程\"></a>Hexo+Github免费搭建博客教程</h1><h2 id=\"下载安装node-js\"><a href=\"#下载安装node-js\" class=\"headerlink\" title=\"下载安装node.js\"></a>下载安装node.js</h2><p>在<a href=\"https://nodejs.org/zh-cn/\">node.js官网</a>下载安装包安装即可。</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233223642-349131297.png\"></p>\n<p>Win键+R输入cmd进入命令窗口输入node  -v(注意-v前有个空格)，如图若出现node版本信息，则安装成功。</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233240621-744853097.png\"></p>\n<h2 id=\"注册GitHub\"><a href=\"#注册GitHub\" class=\"headerlink\" title=\"注册GitHub\"></a>注册GitHub</h2><p>在<a href=\"https://github.com/\">github官网</a>注册登录即可</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233317633-390444962.png\"></p>\n<h3 id=\"创建第一个github仓库\"><a href=\"#创建第一个github仓库\" class=\"headerlink\" title=\"创建第一个github仓库\"></a>创建第一个github仓库</h3><p>如图：1创建&gt;2命名&gt;3勾选&gt;4create即可</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233337883-596107071.png\"></p>\n<p><strong>待完善</strong></p>\n<p><strong>待完善</strong></p>\n<hr>\n<h2 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h2><p>在<a href=\"https://gitforwindows.org/\">git for windows</a>下载安装即可</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233356912-836859301.png\"></p>\n<p>##四、GitHub的ssh配置</p>\n<p>打开git bash，输入如下命令</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233422511-823096424.png\"></p>\n<p>如图执行这条命令，会产生下图两个文件</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233443240-218493205.png\"></p>\n<p>打开GitHub，新建ssh key</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233458824-948378071.png\"></p>\n<p>打开.ssh目录下的id_rsa.pub文件，复制里面的内容，到github如下所示SSH key的信息，添加即可。</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233522724-1594630480.png\"></p>\n<h2 id=\"hexo的使用\"><a href=\"#hexo的使用\" class=\"headerlink\" title=\"hexo的使用\"></a>hexo的使用</h2><p>新建Blog文件夹(自己任意设置)，装载hexo到E盘Blog文件夹下</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233545215-1500378559.png\"></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Users</span>\\<span class=\"title\">Li</span>&gt;<span class=\"title\">E</span>:      //切换到<span class=\"title\">E</span>盘，自行选择装在盘符地址</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\&gt;<span class=\"title\">cd</span> <span class=\"title\">Blog</span>\t\t\t//切换到<span class=\"title\">Blog</span>\t\t\t</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>&gt;<span class=\"title\">npm</span> <span class=\"title\">install</span> <span class=\"title\">hexo</span>-<span class=\"title\">cli</span> -<span class=\"title\">g</span>   //下载<span class=\"title\">hexo</span>命令</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">$ <span class=\"title\">hexo</span> <span class=\"title\">init</span> <span class=\"title\">CodedogWorld</span></span></span><br></pre></td></tr></table></figure>\n\n<p>安装成功如图</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233607522-1071796197.png\"></p>\n<p>执行以下代码</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>&gt;<span class=\"title\">cd</span> <span class=\"title\">CodedogWorld</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">npm</span> <span class=\"title\">install</span>    //安装依赖</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">s</span> -<span class=\"title\">p</span> 5555    </span></span><br></pre></td></tr></table></figure>\n\n<p>结果如图</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233627278-280180249.png\"></p>\n<p>浏览器输入<a href=\"http://localhost:5555/%E5%87%BA%E7%8E%B0%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%8C%E5%88%99%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E3%80%82\">http://localhost:5555/出现如下图，则搭建成功。</a></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233644620-1741914965.png\"></p>\n<p>ps:</p>\n<p><a href=\"https://hexo.io/zh-cn/docs/\">hexo官网</a>，官网文档有安装步骤。</p>\n<p><a href=\"\">参考视频</a></p>\n<p><a href=\"https://www.cnblogs.com/zjfjava/p/10080569.html\">参考博客</a></p>\n<h2 id=\"代码编辑器安装及修改博客内容\"><a href=\"#代码编辑器安装及修改博客内容\" class=\"headerlink\" title=\"代码编辑器安装及修改博客内容\"></a>代码编辑器安装及修改博客内容</h2><p><strong>待补充</strong></p>\n<p><strong>待补充</strong></p>\n<hr>\n<p>配置   <a href=\"https://hexo.io/docs/one-command-deployment\">相关文档</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git                //注意git前空格 </span><br><span class=\"line\">repo：https://github.com/CodedogWorld/CodedogWorld.github.io.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233729477-1011260416.png\"></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233742049-1219964528.png\"></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233757896-1394280158.png\"></p>\n<h2 id=\"hexo发布到github\"><a href=\"#hexo发布到github\" class=\"headerlink\" title=\"hexo发布到github\"></a>hexo发布到github</h2><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">g</span></span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233817728-1392655527.png\"></p>\n<p>报错</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">d</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">INFO</span>  <span class=\"title\">Validating</span> <span class=\"title\">config</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ERROR</span> <span class=\"title\">Deployer</span> <span class=\"title\">not</span> <span class=\"title\">found</span>: <span class=\"title\">git</span></span></span><br></pre></td></tr></table></figure>\n\n<p>修复问题(下端口)</p>\n<p><a href=\"https://hexo.io/docs/one-command-deployment\">Git文档</a></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">g</span>     //生成静态文件</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">d</span>    //文件生成后立即部署网站</span></span><br></pre></td></tr></table></figure>\n\n<p>成功运行</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233838933-422483785.png\"></p>\n<h2 id=\"next主题使用\"><a href=\"#next主题使用\" class=\"headerlink\" title=\"next主题使用\"></a>next主题使用</h2><p><a href=\"http://theme-next.iissnan.com/getting-started.html\">next使用教程</a></p>\n<p><strong>为NexT主题添加文章阅读量统计功能</strong></p>\n<p>标签分类关于页面创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n page tags    <span class=\"comment\">#标签页面创建</span></span><br><span class=\"line\">hexo n page categories     <span class=\"comment\">#分类页面创建</span></span><br><span class=\"line\">hexo n page about       <span class=\"comment\">#关于页面创建</span></span><br></pre></td></tr></table></figure>\n\n<p>然后分别在各自md文件中加入</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"博客创建\"><a href=\"#博客创建\" class=\"headerlink\" title=\"博客创建\"></a>博客创建</h2><p>命令行输入如下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;markdown语法&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531234214780-944416990.png\"></p>\n<p>删除已经创建或者创建错误的博客</p>\n<ol>\n<li>到目录/source/_posts下删除相应的文章</li>\n<li>$ hexo g</li>\n<li>$ hexo d</li>\n</ol>\n<h2 id=\"hexo问题\"><a href=\"#hexo问题\" class=\"headerlink\" title=\"hexo问题\"></a>hexo问题</h2><p><strong>问题1：</strong></p>\n<blockquote>\n<p>Accessing non-existent property ‘column’ of module exports inside circular dependency</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br></pre></td></tr></table></figure>\n\n<p><strong>方案</strong>:</p>\n<p><strong>问题2：</strong></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARN  Since language_switcher is turned on, the caching is disabled to avoid potential hazards.</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>问题3</strong>：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">err: <span class=\"title\">Error</span>: <span class=\"title\">Spawn</span> <span class=\"title\">failed</span></span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">ChildProcess</span>.&lt;<span class=\"title\">anonymous</span>&gt; (<span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>\\<span class=\"title\">node_modules</span>\\<span class=\"title\">hexo</span>-<span class=\"title\">util</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">spawn.js</span>:51:21)</span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">ChildProcess.emit</span> (<span class=\"title\">events.js</span>:315:20)</span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">ChildProcess.cp.emit</span> (<span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>\\<span class=\"title\">node_modules</span>\\<span class=\"title\">cross</span>-<span class=\"title\">spawn</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">enoent.js</span>:34:29)</span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">Process.ChildProcess._handle.onexit</span> (<span class=\"title\">internal</span>/<span class=\"title\">child_process.js</span>:277:12) &#123;</span></span><br><span class=\"line\"><span class=\"function\">   <span class=\"title\">code</span>: 128</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>原因</strong>:</p>\n<blockquote>\n<p>因为<code>git</code>进行<code>push</code>或者<code>hexo d</code>的时候改变了一些<code>.deploy_git</code>文件下的内容</p>\n</blockquote>\n<p><strong>方案</strong>:</p>\n<blockquote>\n<ol>\n<li>删除<code>.deploy_git</code>文件夹;</li>\n<li>输入<code>git config --global core.autocrlf false</code></li>\n<li>然后，依次执行：<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></li>\n</ol>\n</blockquote>\n<p><strong>问题4</strong></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531234251609-427743523.png\" alt=\"谷歌无法访问\"></p>\n<p>原因：谷歌搜索引擎问题</p>\n<p>解决方案：</p>\n<p>设置&gt;管理搜索引擎&gt;更换百度搜索引擎</p>\n<p><a href=\"https://blog.csdn.net/qq_36667170/article/details/118163563\">换电脑后怎么迁移hexo博客？</a></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<h1 id=\"Hexo-Github免费搭建博客教程\"><a href=\"#Hexo-Github免费搭建博客教程\" class=\"headerlink\" title=\"Hexo+Github免费搭建博客教程\"></a>Hexo+Github免费搭建博客教程</h1><h2 id=\"下载安装node-js\"><a href=\"#下载安装node-js\" class=\"headerlink\" title=\"下载安装node.js\"></a>下载安装node.js</h2><p>在<a href=\"https://nodejs.org/zh-cn/\">node.js官网</a>下载安装包安装即可。</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233223642-349131297.png\"></p>\n<p>Win键+R输入cmd进入命令窗口输入node  -v(注意-v前有个空格)，如图若出现node版本信息，则安装成功。</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233240621-744853097.png\"></p>\n<h2 id=\"注册GitHub\"><a href=\"#注册GitHub\" class=\"headerlink\" title=\"注册GitHub\"></a>注册GitHub</h2><p>在<a href=\"https://github.com/\">github官网</a>注册登录即可</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233317633-390444962.png\"></p>\n<h3 id=\"创建第一个github仓库\"><a href=\"#创建第一个github仓库\" class=\"headerlink\" title=\"创建第一个github仓库\"></a>创建第一个github仓库</h3><p>如图：1创建&gt;2命名&gt;3勾选&gt;4create即可</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233337883-596107071.png\"></p>\n<p><strong>待完善</strong></p>\n<p><strong>待完善</strong></p>\n<hr>\n<h2 id=\"安装git\"><a href=\"#安装git\" class=\"headerlink\" title=\"安装git\"></a>安装git</h2><p>在<a href=\"https://gitforwindows.org/\">git for windows</a>下载安装即可</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233356912-836859301.png\"></p>\n<p>##四、GitHub的ssh配置</p>\n<p>打开git bash，输入如下命令</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen -t rsa -C &quot;your_email@youremail.com&quot; </span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233422511-823096424.png\"></p>\n<p>如图执行这条命令，会产生下图两个文件</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233443240-218493205.png\"></p>\n<p>打开GitHub，新建ssh key</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233458824-948378071.png\"></p>\n<p>打开.ssh目录下的id_rsa.pub文件，复制里面的内容，到github如下所示SSH key的信息，添加即可。</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233522724-1594630480.png\"></p>\n<h2 id=\"hexo的使用\"><a href=\"#hexo的使用\" class=\"headerlink\" title=\"hexo的使用\"></a>hexo的使用</h2><p>新建Blog文件夹(自己任意设置)，装载hexo到E盘Blog文件夹下</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233545215-1500378559.png\"></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">C:\\<span class=\"title\">Users</span>\\<span class=\"title\">Li</span>&gt;<span class=\"title\">E</span>:      //切换到<span class=\"title\">E</span>盘，自行选择装在盘符地址</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\&gt;<span class=\"title\">cd</span> <span class=\"title\">Blog</span>\t\t\t//切换到<span class=\"title\">Blog</span>\t\t\t</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>&gt;<span class=\"title\">npm</span> <span class=\"title\">install</span> <span class=\"title\">hexo</span>-<span class=\"title\">cli</span> -<span class=\"title\">g</span>   //下载<span class=\"title\">hexo</span>命令</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">$ <span class=\"title\">hexo</span> <span class=\"title\">init</span> <span class=\"title\">CodedogWorld</span></span></span><br></pre></td></tr></table></figure>\n\n<p>安装成功如图</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233607522-1071796197.png\"></p>\n<p>执行以下代码</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>&gt;<span class=\"title\">cd</span> <span class=\"title\">CodedogWorld</span></span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">npm</span> <span class=\"title\">install</span>    //安装依赖</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">s</span> -<span class=\"title\">p</span> 5555    </span></span><br></pre></td></tr></table></figure>\n\n<p>结果如图</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233627278-280180249.png\"></p>\n<p>浏览器输入<a href=\"http://localhost:5555/%E5%87%BA%E7%8E%B0%E5%A6%82%E4%B8%8B%E5%9B%BE%EF%BC%8C%E5%88%99%E6%90%AD%E5%BB%BA%E6%88%90%E5%8A%9F%E3%80%82\">http://localhost:5555/出现如下图，则搭建成功。</a></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233644620-1741914965.png\"></p>\n<p>ps:</p>\n<p><a href=\"https://hexo.io/zh-cn/docs/\">hexo官网</a>，官网文档有安装步骤。</p>\n<p><a href=\"\">参考视频</a></p>\n<p><a href=\"https://www.cnblogs.com/zjfjava/p/10080569.html\">参考博客</a></p>\n<h2 id=\"代码编辑器安装及修改博客内容\"><a href=\"#代码编辑器安装及修改博客内容\" class=\"headerlink\" title=\"代码编辑器安装及修改博客内容\"></a>代码编辑器安装及修改博客内容</h2><p><strong>待补充</strong></p>\n<p><strong>待补充</strong></p>\n<hr>\n<p>配置   <a href=\"https://hexo.io/docs/one-command-deployment\">相关文档</a></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: git                //注意git前空格 </span><br><span class=\"line\">repo：https://github.com/CodedogWorld/CodedogWorld.github.io.git</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233729477-1011260416.png\"></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233742049-1219964528.png\"></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233757896-1394280158.png\"></p>\n<h2 id=\"hexo发布到github\"><a href=\"#hexo发布到github\" class=\"headerlink\" title=\"hexo发布到github\"></a>hexo发布到github</h2><figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">g</span></span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233817728-1392655527.png\"></p>\n<p>报错</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">d</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">INFO</span>  <span class=\"title\">Validating</span> <span class=\"title\">config</span></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">ERROR</span> <span class=\"title\">Deployer</span> <span class=\"title\">not</span> <span class=\"title\">found</span>: <span class=\"title\">git</span></span></span><br></pre></td></tr></table></figure>\n\n<p>修复问题(下端口)</p>\n<p><a href=\"https://hexo.io/docs/one-command-deployment\">Git文档</a></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">E:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">g</span>     //生成静态文件</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>&gt;<span class=\"title\">hexo</span> <span class=\"title\">d</span>    //文件生成后立即部署网站</span></span><br></pre></td></tr></table></figure>\n\n<p>成功运行</p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531233838933-422483785.png\"></p>\n<h2 id=\"next主题使用\"><a href=\"#next主题使用\" class=\"headerlink\" title=\"next主题使用\"></a>next主题使用</h2><p><a href=\"http://theme-next.iissnan.com/getting-started.html\">next使用教程</a></p>\n<p><strong>为NexT主题添加文章阅读量统计功能</strong></p>\n<p>标签分类关于页面创建</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo n page tags    <span class=\"comment\">#标签页面创建</span></span><br><span class=\"line\">hexo n page categories     <span class=\"comment\">#分类页面创建</span></span><br><span class=\"line\">hexo n page about       <span class=\"comment\">#关于页面创建</span></span><br></pre></td></tr></table></figure>\n\n<p>然后分别在各自md文件中加入</p>\n<figure class=\"highlight md\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">type: &quot;tags&quot;</span><br><span class=\"line\">type: &quot;categories&quot;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"博客创建\"><a href=\"#博客创建\" class=\"headerlink\" title=\"博客创建\"></a>博客创建</h2><p>命令行输入如下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;markdown语法&quot;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531234214780-944416990.png\"></p>\n<p>删除已经创建或者创建错误的博客</p>\n<ol>\n<li>到目录/source/_posts下删除相应的文章</li>\n<li>$ hexo g</li>\n<li>$ hexo d</li>\n</ol>\n<h2 id=\"hexo问题\"><a href=\"#hexo问题\" class=\"headerlink\" title=\"hexo问题\"></a>hexo问题</h2><p><strong>问题1：</strong></p>\n<blockquote>\n<p>Accessing non-existent property ‘column’ of module exports inside circular dependency</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(Use `node --trace-warnings ...` to show where the warning was created)</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;lineno&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;column&#x27; of module exports inside circular dependency</span><br><span class=\"line\">(node:22132) Warning: Accessing non-existent property &#x27;filename&#x27; of module exports inside circular dependency</span><br></pre></td></tr></table></figure>\n\n<p><strong>方案</strong>:</p>\n<p><strong>问题2：</strong></p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">WARN  Since language_switcher is turned on, the caching is disabled to avoid potential hazards.</span><br></pre></td></tr></table></figure>\n\n\n\n<p><strong>问题3</strong>：</p>\n<figure class=\"highlight dos\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">err: <span class=\"title\">Error</span>: <span class=\"title\">Spawn</span> <span class=\"title\">failed</span></span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">ChildProcess</span>.&lt;<span class=\"title\">anonymous</span>&gt; (<span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>\\<span class=\"title\">node_modules</span>\\<span class=\"title\">hexo</span>-<span class=\"title\">util</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">spawn.js</span>:51:21)</span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">ChildProcess.emit</span> (<span class=\"title\">events.js</span>:315:20)</span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">ChildProcess.cp.emit</span> (<span class=\"title\">E</span>:\\<span class=\"title\">Blog</span>\\<span class=\"title\">CodedogWorld</span>\\<span class=\"title\">node_modules</span>\\<span class=\"title\">cross</span>-<span class=\"title\">spawn</span>\\<span class=\"title\">lib</span>\\<span class=\"title\">enoent.js</span>:34:29)</span></span><br><span class=\"line\"><span class=\"function\">     <span class=\"title\">at</span> <span class=\"title\">Process.ChildProcess._handle.onexit</span> (<span class=\"title\">internal</span>/<span class=\"title\">child_process.js</span>:277:12) &#123;</span></span><br><span class=\"line\"><span class=\"function\">   <span class=\"title\">code</span>: 128</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>原因</strong>:</p>\n<blockquote>\n<p>因为<code>git</code>进行<code>push</code>或者<code>hexo d</code>的时候改变了一些<code>.deploy_git</code>文件下的内容</p>\n</blockquote>\n<p><strong>方案</strong>:</p>\n<blockquote>\n<ol>\n<li>删除<code>.deploy_git</code>文件夹;</li>\n<li>输入<code>git config --global core.autocrlf false</code></li>\n<li>然后，依次执行：<br><code>hexo clean</code><br><code>hexo g</code><br><code>hexo d</code></li>\n</ol>\n</blockquote>\n<p><strong>问题4</strong></p>\n<p><img src=\"Hexo+Github%E5%85%8D%E8%B4%B9%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E6%95%99%E7%A8%8B/2291368-20220531234251609-427743523.png\" alt=\"谷歌无法访问\"></p>\n<p>原因：谷歌搜索引擎问题</p>\n<p>解决方案：</p>\n<p>设置&gt;管理搜索引擎&gt;更换百度搜索引擎</p>\n<p><a href=\"https://blog.csdn.net/qq_36667170/article/details/118163563\">换电脑后怎么迁移hexo博客？</a></p>\n"},{"title":"Hexo+Butterfly主题设置背景透明度和字体","copyright":true,"date":"2022-11-19T04:59:00.000Z","_content":"\n### 效果\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125458669-276341619.png)\n\n### 新建css文件\n\n引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在`Blog\\CodeRain\\source\\css`新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。\n\n目录截图：\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125502046-569979710.png)\n\n\n`transpancy.css文件`\n\n```css \n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}\n\n```\n\n### 引入css 文件\n\n在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段\n\n位置图片：\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125806511-17842588.png)\n\n```\n<link rel=\"stylesheet\" href=\"/css/transpancy.css\">\n```\n\n### 排查过程（页脚为例）\n\n浏览器页面打开\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203047705-1415002471.png)\n\n浏览器调试\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203055675-805963954.png)\n\n去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将`footer_bg: false`\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203101693-1156912262.png)\n\n如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203107165-240361835.png)","source":"_posts/Hexo+Butterfly主题设置背景透明度和字体.md","raw":"---\ntitle: 'Hexo+Butterfly主题设置背景透明度和字体'\ncopyright: true\ndate: '2022-11-19 12:59'\ntags: 'Hexo'\ncategories: '个人博客'\n---\n\n### 效果\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125458669-276341619.png)\n\n### 新建css文件\n\n引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在`Blog\\CodeRain\\source\\css`新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。\n\n目录截图：\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125502046-569979710.png)\n\n\n`transpancy.css文件`\n\n```css \n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}\n\n```\n\n### 引入css 文件\n\n在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段\n\n位置图片：\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125806511-17842588.png)\n\n```\n<link rel=\"stylesheet\" href=\"/css/transpancy.css\">\n```\n\n### 排查过程（页脚为例）\n\n浏览器页面打开\n\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203047705-1415002471.png)\n\n浏览器调试\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203055675-805963954.png)\n\n去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将`footer_bg: false`\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203101693-1156912262.png)\n\n如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）\n![](Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203107165-240361835.png)","slug":"Hexo+Butterfly主题设置背景透明度和字体","published":1,"updated":"2022-12-07T07:38:00.210Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfth000isw6xgh837vjk","content":"<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125458669-276341619.png\"></p>\n<h3 id=\"新建css文件\"><a href=\"#新建css文件\" class=\"headerlink\" title=\"新建css文件\"></a>新建css文件</h3><p>引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在<code>Blog\\CodeRain\\source\\css</code>新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。</p>\n<p>目录截图：</p>\n<p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125502046-569979710.png\"></p>\n<p><code>transpancy.css文件</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 文章页背景 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 可以自行修改*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 所有页面背景 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#aside_content</span> <span class=\"selector-class\">.card-widget</span>, <span class=\"selector-id\">#recent-posts</span>&gt;<span class=\"selector-class\">.recent-post-item</span>, <span class=\"selector-class\">.layout_page</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:first</span>-child<span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.recent-posts</span>), <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#page</span>, <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>, <span class=\"selector-class\">.read-mode</span> <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*侧边卡片的透明度 */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">--card-bg</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, .<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 页脚透明 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>, .<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入css-文件\"><a href=\"#引入css-文件\" class=\"headerlink\" title=\"引入css 文件\"></a>引入css 文件</h3><p>在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段</p>\n<p>位置图片：</p>\n<p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125806511-17842588.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/transpancy.css&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排查过程（页脚为例）\"><a href=\"#排查过程（页脚为例）\" class=\"headerlink\" title=\"排查过程（页脚为例）\"></a>排查过程（页脚为例）</h3><p>浏览器页面打开</p>\n<p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203047705-1415002471.png\"></p>\n<p>浏览器调试<br><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203055675-805963954.png\"></p>\n<p>去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将<code>footer_bg: false</code><br><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203101693-1156912262.png\"></p>\n<p>如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）<br><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203107165-240361835.png\"></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"","more":"<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3><p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125458669-276341619.png\"></p>\n<h3 id=\"新建css文件\"><a href=\"#新建css文件\" class=\"headerlink\" title=\"新建css文件\"></a>新建css文件</h3><p>引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在<code>Blog\\CodeRain\\source\\css</code>新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。</p>\n<p>目录截图：</p>\n<p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125502046-569979710.png\"></p>\n<p><code>transpancy.css文件</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 文章页背景 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 可以自行修改*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 所有页面背景 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#aside_content</span> <span class=\"selector-class\">.card-widget</span>, <span class=\"selector-id\">#recent-posts</span>&gt;<span class=\"selector-class\">.recent-post-item</span>, <span class=\"selector-class\">.layout_page</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:first</span>-child<span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.recent-posts</span>), <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#page</span>, <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>, <span class=\"selector-class\">.read-mode</span> <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*侧边卡片的透明度 */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">--card-bg</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, .<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 页脚透明 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>, .<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"引入css-文件\"><a href=\"#引入css-文件\" class=\"headerlink\" title=\"引入css 文件\"></a>引入css 文件</h3><p>在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段</p>\n<p>位置图片：</p>\n<p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221119125806511-17842588.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/transpancy.css&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"排查过程（页脚为例）\"><a href=\"#排查过程（页脚为例）\" class=\"headerlink\" title=\"排查过程（页脚为例）\"></a>排查过程（页脚为例）</h3><p>浏览器页面打开</p>\n<p><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203047705-1415002471.png\"></p>\n<p>浏览器调试<br><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203055675-805963954.png\"></p>\n<p>去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将<code>footer_bg: false</code><br><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203101693-1156912262.png\"></p>\n<p>如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）<br><img src=\"Hexo+Butterfly%E4%B8%BB%E9%A2%98%E8%AE%BE%E7%BD%AE%E8%83%8C%E6%99%AF%E9%80%8F%E6%98%8E%E5%BA%A6%E5%92%8C%E5%AD%97%E4%BD%93/2291368-20221201203107165-240361835.png\"></p>\n"},{"title":"Hexo主题Butterfly配置、踩坑及魔改","date":"2022-11-19T06:20:53.000Z","sticky":10,"pic":null,"comments":1,"toc":true,"expire":true,"only":["home","category","tag"],"_content":"\n# Hexo主题Butterfly配置、踩坑及魔改\n\n## Butterfly配置\n\n### 参考文档\n\n已经特别详细了：https://butterfly.js.org/posts/21cfbf15/\n\n### 引入字数统计\n\n1. 引入字数统计相关插件：\n\n```\nnpm install hexo-wordcount --save\n```\n\n2. 修改主题配置文件_config.butterfly.yml\n\n```\nwordcount:\n  enable: true\n  post_wordcount: true\n  min2read: true\n  total_wordcount: true\n```\n\n## 踩坑\n\n### 问题1\n\n改导航菜单一定要hexo clean\n然后再重新hexo g\n否则可能会报错\n\n```\nFATAL YAMLException: bad indentation of a mapping entry at line 26, column 7:\n        读书: /books/ || fas fa-book\n\n......\n......\n\n  message: 'bad indentation of a mapping entry at line 26, column 7:\\n' +\n    '        读书: /books/ || fas fa-book\\n' +\n```\n\n![Snipaste_2022-11-29_19-45-45](Hexo主题Butterfly配置、踩坑及魔改/Snipaste_2022-11-29_19-45-45.png)\n\n### 问题2\n\n#### 问题\n\nHexo主题Butterfly启动后报错\n\n```\nextends includes/layout.pug block content include ./includes/mixins/post-ui\n.pug #recent-posts.recent-posts +postUI include includes/pagination.pug\n```\n\n#### 场景\n\n更换新主题Butterfly\n\n#### 原因\n\n没有 pug 以及 stylus 的渲染器\n\n#### 解决方案\n\n```\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\nnpm install hexo-deployer-git --save / yarn add hexo-deployer-git\n```\n再次依次执行\n\n```\nhexo clean\nhexo g\nhexo s -p 4000\n```\n\n### 问题3\n\n#### 问题\n\nValine、Waline评论失效，评论失败，翻墙可以评论成功。\n\n#### 场景\n\nHexo主题Butterfly添加评论功能\n\n#### 原因\n\n由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。\n\n#### 解决方案\n\n[关于waline国内无法使用的解决方案 （vercel.app国内无法使用问题）](https://blog.csdn.net/Panzer_Jack/article/details/127418379?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-13-127418379-blog-127204331.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-13-127418379-blog-127204331.pc_relevant_recovery_v2&utm_relevant_index=14)\n\n博客更换为Waline评论系统\n\nhttps://blog.csdn.net/hubojing/article/details/122659549\n\n## 魔改\n\n### 嵌入豆瓣插件展示豆瓣图书电影\n\n#### 安装\n\n```\nnpm install hexo-douban --save\n```\n\n#### 配置\n\n在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）\n```\n# 豆瓣 \ndouban:\n  id: 191537030\n  book:\n    path: books/index.html\n    title: 'CodeRain 的书架'\n    quote: ''\n  movie:\n    path: movies/index.html\n    title: '刻骨铭心的电影'\n    quote: '她'\n  timeout: 10000 \n```\n\n- user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？\n- path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。\n- title: 该页面的标题。\n- quote: 写在页面开头的一段话,支持html语法。\n- timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。\n如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。\n\n#### 主题兼容\n\n对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :\n```\npjax:\n  enable: true\n  exclude:\n    - /movies/\n    - /books/\n    - /games/\n```\n\n#### 菜单\n\n如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.\n```\nmenu:\n  Home: /\n  Archives: /archives\n  Books: /books     #This is your books page\n  Movies: /movies   #This is your movies page\n  Games: /games   #This is your games page\n```\n注意这些页面不需要new创建 \n而是使用`hexo douban -bmg`创建\n\n#### 使用\n\n```\n$ hexo douban -h\nUsage: hexo douban\n\nDescription:\nGenerate pages from douban\n\nOptions:\n  -b, --books   Generate douban books only\n  -g, --games   Generate douban games only\n  -m, --movies  Generate douban movies only\n如果不加参数，那么默认参数为-bgm。\n```\n需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。\n\n\n官方指导文档：https://github.com/mythsman/hexo-douban\n\n#### 效果\n\n执行`hexo douban -bm`\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221129160808235-2056680578.png)\n\n\n### hexo butterfly主题设置背景透明度和字体\n\n#### 效果\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125458669-276341619.png)\n\n#### 新建css文件\n\n引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在`Blog\\CodeRain\\source\\css`新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。\n\n目录截图：\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125502046-569979710.png)\n\n\n`transpancy.css文件`\n\n```css \n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}\n\n```\n\n#### 引入css 文件\n\n在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段\n\n位置图片：\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125806511-17842588.png)\n\n```\n<link rel=\"stylesheet\" href=\"/css/transpancy.css\">\n```\n\n#### 排查过程（页脚为例）\n\n浏览器页面打开\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203047705-1415002471.png)\n\n浏览器调试\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203055675-805963954.png)\n\n去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将`footer_bg: false`\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203101693-1156912262.png)\n\n如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203107165-240361835.png)\n\n","source":"_posts/Hexo主题Butterfly配置、踩坑及魔改.md","raw":"---\ntitle: Hexo主题Butterfly配置、踩坑及魔改\ndate: 2022-11-19 14:20:53\ncategories: 个人博客\ntags:\n- Hexo\n- Butterfly\nsticky: 10\npic:\ncomments: true\ntoc: true\nexpire: true\nonly:\n- home\n- category\n- tag\n---\n\n# Hexo主题Butterfly配置、踩坑及魔改\n\n## Butterfly配置\n\n### 参考文档\n\n已经特别详细了：https://butterfly.js.org/posts/21cfbf15/\n\n### 引入字数统计\n\n1. 引入字数统计相关插件：\n\n```\nnpm install hexo-wordcount --save\n```\n\n2. 修改主题配置文件_config.butterfly.yml\n\n```\nwordcount:\n  enable: true\n  post_wordcount: true\n  min2read: true\n  total_wordcount: true\n```\n\n## 踩坑\n\n### 问题1\n\n改导航菜单一定要hexo clean\n然后再重新hexo g\n否则可能会报错\n\n```\nFATAL YAMLException: bad indentation of a mapping entry at line 26, column 7:\n        读书: /books/ || fas fa-book\n\n......\n......\n\n  message: 'bad indentation of a mapping entry at line 26, column 7:\\n' +\n    '        读书: /books/ || fas fa-book\\n' +\n```\n\n![Snipaste_2022-11-29_19-45-45](Hexo主题Butterfly配置、踩坑及魔改/Snipaste_2022-11-29_19-45-45.png)\n\n### 问题2\n\n#### 问题\n\nHexo主题Butterfly启动后报错\n\n```\nextends includes/layout.pug block content include ./includes/mixins/post-ui\n.pug #recent-posts.recent-posts +postUI include includes/pagination.pug\n```\n\n#### 场景\n\n更换新主题Butterfly\n\n#### 原因\n\n没有 pug 以及 stylus 的渲染器\n\n#### 解决方案\n\n```\nnpm install hexo-renderer-pug hexo-renderer-stylus --save\nnpm install hexo-deployer-git --save / yarn add hexo-deployer-git\n```\n再次依次执行\n\n```\nhexo clean\nhexo g\nhexo s -p 4000\n```\n\n### 问题3\n\n#### 问题\n\nValine、Waline评论失效，评论失败，翻墙可以评论成功。\n\n#### 场景\n\nHexo主题Butterfly添加评论功能\n\n#### 原因\n\n由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。\n\n#### 解决方案\n\n[关于waline国内无法使用的解决方案 （vercel.app国内无法使用问题）](https://blog.csdn.net/Panzer_Jack/article/details/127418379?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-13-127418379-blog-127204331.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EOPENSEARCH%7ERate-13-127418379-blog-127204331.pc_relevant_recovery_v2&utm_relevant_index=14)\n\n博客更换为Waline评论系统\n\nhttps://blog.csdn.net/hubojing/article/details/122659549\n\n## 魔改\n\n### 嵌入豆瓣插件展示豆瓣图书电影\n\n#### 安装\n\n```\nnpm install hexo-douban --save\n```\n\n#### 配置\n\n在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）\n```\n# 豆瓣 \ndouban:\n  id: 191537030\n  book:\n    path: books/index.html\n    title: 'CodeRain 的书架'\n    quote: ''\n  movie:\n    path: movies/index.html\n    title: '刻骨铭心的电影'\n    quote: '她'\n  timeout: 10000 \n```\n\n- user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？\n- path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。\n- title: 该页面的标题。\n- quote: 写在页面开头的一段话,支持html语法。\n- timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。\n如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。\n\n#### 主题兼容\n\n对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :\n```\npjax:\n  enable: true\n  exclude:\n    - /movies/\n    - /books/\n    - /games/\n```\n\n#### 菜单\n\n如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.\n```\nmenu:\n  Home: /\n  Archives: /archives\n  Books: /books     #This is your books page\n  Movies: /movies   #This is your movies page\n  Games: /games   #This is your games page\n```\n注意这些页面不需要new创建 \n而是使用`hexo douban -bmg`创建\n\n#### 使用\n\n```\n$ hexo douban -h\nUsage: hexo douban\n\nDescription:\nGenerate pages from douban\n\nOptions:\n  -b, --books   Generate douban books only\n  -g, --games   Generate douban games only\n  -m, --movies  Generate douban movies only\n如果不加参数，那么默认参数为-bgm。\n```\n需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。\n\n\n官方指导文档：https://github.com/mythsman/hexo-douban\n\n#### 效果\n\n执行`hexo douban -bm`\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221129160808235-2056680578.png)\n\n\n### hexo butterfly主题设置背景透明度和字体\n\n#### 效果\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125458669-276341619.png)\n\n#### 新建css文件\n\n引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在`Blog\\CodeRain\\source\\css`新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。\n\n目录截图：\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125502046-569979710.png)\n\n\n`transpancy.css文件`\n\n```css \n/* 文章页背景 */\n.layout_post>#post {\n    /* 以下代表透明度为0.7 可以自行修改*/\n    background: rgba(255,255,255,.7);\n}\n\n/* 所有页面背景 */\n#aside_content .card-widget, #recent-posts>.recent-post-item, .layout_page>div:first-child:not(.recent-posts), .layout_post>#page, .layout_post>#post, .read-mode .layout_post>#post{\n    /* 以下代表透明度为0.7 */\n    background: rgba(255,255,255,.7);\n}\n/*侧边卡片的透明度 */\n:root {\n  --card-bg: rgba(255, 255, 255, .7);\n}\n/* 页脚透明 */\n#footer {\n\t/* 以下代表透明度为0.7 */\n\tbackground: rgba(255,255,255, .0);\n}\n\n```\n\n#### 引入css 文件\n\n在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段\n\n位置图片：\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125806511-17842588.png)\n\n```\n<link rel=\"stylesheet\" href=\"/css/transpancy.css\">\n```\n\n#### 排查过程（页脚为例）\n\n浏览器页面打开\n\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203047705-1415002471.png)\n\n浏览器调试\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203055675-805963954.png)\n\n去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将`footer_bg: false`\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203101693-1156912262.png)\n\n如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）\n![](Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203107165-240361835.png)\n\n","slug":"Hexo主题Butterfly配置、踩坑及魔改","published":1,"updated":"2022-12-08T10:05:46.101Z","layout":"post","photos":[],"link":"","_id":"clbexyfti000nsw6xgrb8a411","content":"<h1 id=\"Hexo主题Butterfly配置、踩坑及魔改\"><a href=\"#Hexo主题Butterfly配置、踩坑及魔改\" class=\"headerlink\" title=\"Hexo主题Butterfly配置、踩坑及魔改\"></a>Hexo主题Butterfly配置、踩坑及魔改</h1><h2 id=\"Butterfly配置\"><a href=\"#Butterfly配置\" class=\"headerlink\" title=\"Butterfly配置\"></a>Butterfly配置</h2><h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><p>已经特别详细了：<a href=\"https://butterfly.js.org/posts/21cfbf15/\">https://butterfly.js.org/posts/21cfbf15/</a></p>\n<h3 id=\"引入字数统计\"><a href=\"#引入字数统计\" class=\"headerlink\" title=\"引入字数统计\"></a>引入字数统计</h3><ol>\n<li>引入字数统计相关插件：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改主题配置文件_config.butterfly.yml</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wordcount:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  post_wordcount: true</span><br><span class=\"line\">  min2read: true</span><br><span class=\"line\">  total_wordcount: true</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h3><p>改导航菜单一定要hexo clean<br>然后再重新hexo g<br>否则可能会报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL YAMLException: bad indentation of a mapping entry at line 26, column 7:</span><br><span class=\"line\">        读书: /books/ || fas fa-book</span><br><span class=\"line\"></span><br><span class=\"line\">......</span><br><span class=\"line\">......</span><br><span class=\"line\"></span><br><span class=\"line\">  message: &#x27;bad indentation of a mapping entry at line 26, column 7:\\n&#x27; +</span><br><span class=\"line\">    &#x27;        读书: /books/ || fas fa-book\\n&#x27; +</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/Snipaste_2022-11-29_19-45-45.png\" class=\"\" title=\"Snipaste_2022-11-29_19-45-45\">\n\n<h3 id=\"问题2\"><a href=\"#问题2\" class=\"headerlink\" title=\"问题2\"></a>问题2</h3><h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>Hexo主题Butterfly启动后报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends includes/layout.pug block content include ./includes/mixins/post-ui</span><br><span class=\"line\">.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h4><p>更换新主题Butterfly</p>\n<h4 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>没有 pug 以及 stylus 的渲染器</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class=\"line\">npm install hexo-deployer-git --save / yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<p>再次依次执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s -p 4000</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"问题3\"><a href=\"#问题3\" class=\"headerlink\" title=\"问题3\"></a>问题3</h3><h4 id=\"问题-1\"><a href=\"#问题-1\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>Valine、Waline评论失效，评论失败，翻墙可以评论成功。</p>\n<h4 id=\"场景-1\"><a href=\"#场景-1\" class=\"headerlink\" title=\"场景\"></a>场景</h4><p>Hexo主题Butterfly添加评论功能</p>\n<h4 id=\"原因-1\"><a href=\"#原因-1\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。</p>\n<h4 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p><a href=\"https://blog.csdn.net/Panzer_Jack/article/details/127418379?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-13-127418379-blog-127204331.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-13-127418379-blog-127204331.pc_relevant_recovery_v2&utm_relevant_index=14\">关于waline国内无法使用的解决方案 （vercel.app国内无法使用问题）</a></p>\n<p>博客更换为Waline评论系统</p>\n<p><a href=\"https://blog.csdn.net/hubojing/article/details/122659549\">https://blog.csdn.net/hubojing/article/details/122659549</a></p>\n<h2 id=\"魔改\"><a href=\"#魔改\" class=\"headerlink\" title=\"魔改\"></a>魔改</h2><h3 id=\"嵌入豆瓣插件展示豆瓣图书电影\"><a href=\"#嵌入豆瓣插件展示豆瓣图书电影\" class=\"headerlink\" title=\"嵌入豆瓣插件展示豆瓣图书电影\"></a>嵌入豆瓣插件展示豆瓣图书电影</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-douban --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 豆瓣 </span><br><span class=\"line\">douban:</span><br><span class=\"line\">  id: 191537030</span><br><span class=\"line\">  book:</span><br><span class=\"line\">    path: books/index.html</span><br><span class=\"line\">    title: &#x27;CodeRain 的书架&#x27;</span><br><span class=\"line\">    quote: &#x27;&#x27;</span><br><span class=\"line\">  movie:</span><br><span class=\"line\">    path: movies/index.html</span><br><span class=\"line\">    title: &#x27;刻骨铭心的电影&#x27;</span><br><span class=\"line\">    quote: &#x27;她&#x27;</span><br><span class=\"line\">  timeout: 10000 </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？</li>\n<li>path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。</li>\n<li>title: 该页面的标题。</li>\n<li>quote: 写在页面开头的一段话,支持html语法。</li>\n<li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</li>\n</ul>\n<h4 id=\"主题兼容\"><a href=\"#主题兼容\" class=\"headerlink\" title=\"主题兼容\"></a>主题兼容</h4><p>对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pjax:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - /movies/</span><br><span class=\"line\">    - /books/</span><br><span class=\"line\">    - /games/</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h4><p>如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  Home: /</span><br><span class=\"line\">  Archives: /archives</span><br><span class=\"line\">  Books: /books     #This is your books page</span><br><span class=\"line\">  Movies: /movies   #This is your movies page</span><br><span class=\"line\">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure>\n<p>注意这些页面不需要new创建<br>而是使用<code>hexo douban -bmg</code>创建</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo douban -h</span><br><span class=\"line\">Usage: hexo douban</span><br><span class=\"line\"></span><br><span class=\"line\">Description:</span><br><span class=\"line\">Generate pages from douban</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -b, --books   Generate douban books only</span><br><span class=\"line\">  -g, --games   Generate douban games only</span><br><span class=\"line\">  -m, --movies  Generate douban movies only</span><br><span class=\"line\">如果不加参数，那么默认参数为-bgm。</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p>\n<p>官方指导文档：<a href=\"https://github.com/mythsman/hexo-douban\">https://github.com/mythsman/hexo-douban</a></p>\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h4><p>执行<code>hexo douban -bm</code></p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221129160808235-2056680578.png\" class=\"\">\n\n\n<h3 id=\"hexo-butterfly主题设置背景透明度和字体\"><a href=\"#hexo-butterfly主题设置背景透明度和字体\" class=\"headerlink\" title=\"hexo butterfly主题设置背景透明度和字体\"></a>hexo butterfly主题设置背景透明度和字体</h3><h4 id=\"效果-1\"><a href=\"#效果-1\" class=\"headerlink\" title=\"效果\"></a>效果</h4><img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125458669-276341619.png\" class=\"\">\n\n<h4 id=\"新建css文件\"><a href=\"#新建css文件\" class=\"headerlink\" title=\"新建css文件\"></a>新建css文件</h4><p>引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在<code>Blog\\CodeRain\\source\\css</code>新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。</p>\n<p>目录截图：</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125502046-569979710.png\" class=\"\">\n\n\n<p><code>transpancy.css文件</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 文章页背景 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 可以自行修改*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 所有页面背景 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#aside_content</span> <span class=\"selector-class\">.card-widget</span>, <span class=\"selector-id\">#recent-posts</span>&gt;<span class=\"selector-class\">.recent-post-item</span>, <span class=\"selector-class\">.layout_page</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:first</span>-child<span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.recent-posts</span>), <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#page</span>, <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>, <span class=\"selector-class\">.read-mode</span> <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*侧边卡片的透明度 */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">--card-bg</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, .<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 页脚透明 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>, .<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"引入css-文件\"><a href=\"#引入css-文件\" class=\"headerlink\" title=\"引入css 文件\"></a>引入css 文件</h4><p>在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段</p>\n<p>位置图片：</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125806511-17842588.png\" class=\"\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/transpancy.css&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"排查过程（页脚为例）\"><a href=\"#排查过程（页脚为例）\" class=\"headerlink\" title=\"排查过程（页脚为例）\"></a>排查过程（页脚为例）</h4><p>浏览器页面打开</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203047705-1415002471.png\" class=\"\">\n\n<p>浏览器调试</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203055675-805963954.png\" class=\"\">\n\n<p>去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将<code>footer_bg: false</code></p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203101693-1156912262.png\" class=\"\">\n\n<p>如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203107165-240361835.png\" class=\"\">\n\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg","excerpt":"","more":"<h1 id=\"Hexo主题Butterfly配置、踩坑及魔改\"><a href=\"#Hexo主题Butterfly配置、踩坑及魔改\" class=\"headerlink\" title=\"Hexo主题Butterfly配置、踩坑及魔改\"></a>Hexo主题Butterfly配置、踩坑及魔改</h1><h2 id=\"Butterfly配置\"><a href=\"#Butterfly配置\" class=\"headerlink\" title=\"Butterfly配置\"></a>Butterfly配置</h2><h3 id=\"参考文档\"><a href=\"#参考文档\" class=\"headerlink\" title=\"参考文档\"></a>参考文档</h3><p>已经特别详细了：<a href=\"https://butterfly.js.org/posts/21cfbf15/\">https://butterfly.js.org/posts/21cfbf15/</a></p>\n<h3 id=\"引入字数统计\"><a href=\"#引入字数统计\" class=\"headerlink\" title=\"引入字数统计\"></a>引入字数统计</h3><ol>\n<li>引入字数统计相关插件：</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>修改主题配置文件_config.butterfly.yml</li>\n</ol>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wordcount:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  post_wordcount: true</span><br><span class=\"line\">  min2read: true</span><br><span class=\"line\">  total_wordcount: true</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><h3 id=\"问题1\"><a href=\"#问题1\" class=\"headerlink\" title=\"问题1\"></a>问题1</h3><p>改导航菜单一定要hexo clean<br>然后再重新hexo g<br>否则可能会报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FATAL YAMLException: bad indentation of a mapping entry at line 26, column 7:</span><br><span class=\"line\">        读书: /books/ || fas fa-book</span><br><span class=\"line\"></span><br><span class=\"line\">......</span><br><span class=\"line\">......</span><br><span class=\"line\"></span><br><span class=\"line\">  message: &#x27;bad indentation of a mapping entry at line 26, column 7:\\n&#x27; +</span><br><span class=\"line\">    &#x27;        读书: /books/ || fas fa-book\\n&#x27; +</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/Snipaste_2022-11-29_19-45-45.png\" class=\"\" title=\"Snipaste_2022-11-29_19-45-45\">\n\n<h3 id=\"问题2\"><a href=\"#问题2\" class=\"headerlink\" title=\"问题2\"></a>问题2</h3><h4 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>Hexo主题Butterfly启动后报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">extends includes/layout.pug block content include ./includes/mixins/post-ui</span><br><span class=\"line\">.pug #recent-posts.recent-posts +postUI include includes/pagination.pug</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"场景\"><a href=\"#场景\" class=\"headerlink\" title=\"场景\"></a>场景</h4><p>更换新主题Butterfly</p>\n<h4 id=\"原因\"><a href=\"#原因\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>没有 pug 以及 stylus 的渲染器</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br><span class=\"line\">npm install hexo-deployer-git --save / yarn add hexo-deployer-git</span><br></pre></td></tr></table></figure>\n<p>再次依次执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s -p 4000</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"问题3\"><a href=\"#问题3\" class=\"headerlink\" title=\"问题3\"></a>问题3</h3><h4 id=\"问题-1\"><a href=\"#问题-1\" class=\"headerlink\" title=\"问题\"></a>问题</h4><p>Valine、Waline评论失效，评论失败，翻墙可以评论成功。</p>\n<h4 id=\"场景-1\"><a href=\"#场景-1\" class=\"headerlink\" title=\"场景\"></a>场景</h4><p>Hexo主题Butterfly添加评论功能</p>\n<h4 id=\"原因-1\"><a href=\"#原因-1\" class=\"headerlink\" title=\"原因\"></a>原因</h4><p>由于 Valine 的国际版共享域名将于 2022 年 8 月 1 日起不再向中国大陆的最终用户提供服务，国际版共享域名仅服务于海外用户。</p>\n<h4 id=\"解决方案-1\"><a href=\"#解决方案-1\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><p><a href=\"https://blog.csdn.net/Panzer_Jack/article/details/127418379?spm=1001.2101.3001.6650.13&utm_medium=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-13-127418379-blog-127204331.pc_relevant_recovery_v2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~OPENSEARCH~Rate-13-127418379-blog-127204331.pc_relevant_recovery_v2&utm_relevant_index=14\">关于waline国内无法使用的解决方案 （vercel.app国内无法使用问题）</a></p>\n<p>博客更换为Waline评论系统</p>\n<p><a href=\"https://blog.csdn.net/hubojing/article/details/122659549\">https://blog.csdn.net/hubojing/article/details/122659549</a></p>\n<h2 id=\"魔改\"><a href=\"#魔改\" class=\"headerlink\" title=\"魔改\"></a>魔改</h2><h3 id=\"嵌入豆瓣插件展示豆瓣图书电影\"><a href=\"#嵌入豆瓣插件展示豆瓣图书电影\" class=\"headerlink\" title=\"嵌入豆瓣插件展示豆瓣图书电影\"></a>嵌入豆瓣插件展示豆瓣图书电影</h3><h4 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-douban --save</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h4><p>在博客站点的配置文件 _config.yml 中添加以下内容（注意：不是主题的配置文件）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 豆瓣 </span><br><span class=\"line\">douban:</span><br><span class=\"line\">  id: 191537030</span><br><span class=\"line\">  book:</span><br><span class=\"line\">    path: books/index.html</span><br><span class=\"line\">    title: &#x27;CodeRain 的书架&#x27;</span><br><span class=\"line\">    quote: &#x27;&#x27;</span><br><span class=\"line\">  movie:</span><br><span class=\"line\">    path: movies/index.html</span><br><span class=\"line\">    title: &#x27;刻骨铭心的电影&#x27;</span><br><span class=\"line\">    quote: &#x27;她&#x27;</span><br><span class=\"line\">  timeout: 10000 </span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>user: 你的豆瓣ID(纯数字格式，不是自定义的域名)。获取方法可以参考怎样获取豆瓣的数字 ID ？</li>\n<li>path: 生成页面后的路径，默认生成在 //yourblog/books/index.html 等下面。如需自定义路径，则可以修改这里。</li>\n<li>title: 该页面的标题。</li>\n<li>quote: 写在页面开头的一段话,支持html语法。</li>\n<li>timeout: 爬取数据的超时时间，默认是 10000ms ,如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</li>\n</ul>\n<h4 id=\"主题兼容\"><a href=\"#主题兼容\" class=\"headerlink\" title=\"主题兼容\"></a>主题兼容</h4><p>对于使用 hexo-theme-butterfly 等使用 pjax 进行渲染的主题，需要在 _config.yml 中将豆瓣页进行排除，否则 js 会失效导致页面异常 @ISSUE 108 :</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pjax:</span><br><span class=\"line\">  enable: true</span><br><span class=\"line\">  exclude:</span><br><span class=\"line\">    - /movies/</span><br><span class=\"line\">    - /books/</span><br><span class=\"line\">    - /games/</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"菜单\"><a href=\"#菜单\" class=\"headerlink\" title=\"菜单\"></a>菜单</h4><p>如果上面的显示没有问题就可以在主题的配置文件 _config.yml 里添加如下配置来为这些页面添加菜单链接.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">menu:</span><br><span class=\"line\">  Home: /</span><br><span class=\"line\">  Archives: /archives</span><br><span class=\"line\">  Books: /books     #This is your books page</span><br><span class=\"line\">  Movies: /movies   #This is your movies page</span><br><span class=\"line\">  Games: /games   #This is your games page</span><br></pre></td></tr></table></figure>\n<p>注意这些页面不需要new创建<br>而是使用<code>hexo douban -bmg</code>创建</p>\n<h4 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo douban -h</span><br><span class=\"line\">Usage: hexo douban</span><br><span class=\"line\"></span><br><span class=\"line\">Description:</span><br><span class=\"line\">Generate pages from douban</span><br><span class=\"line\"></span><br><span class=\"line\">Options:</span><br><span class=\"line\">  -b, --books   Generate douban books only</span><br><span class=\"line\">  -g, --games   Generate douban games only</span><br><span class=\"line\">  -m, --movies  Generate douban movies only</span><br><span class=\"line\">如果不加参数，那么默认参数为-bgm。</span><br></pre></td></tr></table></figure>\n<p>需要注意的是，通常大家都喜欢用hexo d来作为hexo deploy命令的简化，但是当安装了hexo douban之后，就不能用hexo d了，因为hexo douban跟hexo deploy的前缀都是hexo d。</p>\n<p>官方指导文档：<a href=\"https://github.com/mythsman/hexo-douban\">https://github.com/mythsman/hexo-douban</a></p>\n<h4 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h4><p>执行<code>hexo douban -bm</code></p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221129160808235-2056680578.png\" class=\"\">\n\n\n<h3 id=\"hexo-butterfly主题设置背景透明度和字体\"><a href=\"#hexo-butterfly主题设置背景透明度和字体\" class=\"headerlink\" title=\"hexo butterfly主题设置背景透明度和字体\"></a>hexo butterfly主题设置背景透明度和字体</h3><h4 id=\"效果-1\"><a href=\"#效果-1\" class=\"headerlink\" title=\"效果\"></a>效果</h4><img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125458669-276341619.png\" class=\"\">\n\n<h4 id=\"新建css文件\"><a href=\"#新建css文件\" class=\"headerlink\" title=\"新建css文件\"></a>新建css文件</h4><p>引入css改变页面的样式，推荐在一个自己新建目录创建。有人选择在主题文件夹下找到css文件夹（\\themes\\Butterfly\\source\\css），这样系统升级可能会把自己的代码覆盖掉。本人是在<code>Blog\\CodeRain\\source\\css</code>新建一个transpancy.css文件（文件名可以自取），修改最右边的数字改变透明度。</p>\n<p>目录截图：</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125502046-569979710.png\" class=\"\">\n\n\n<p><code>transpancy.css文件</code></p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 文章页背景 */</span></span><br><span class=\"line\"><span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 可以自行修改*/</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 所有页面背景 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#aside_content</span> <span class=\"selector-class\">.card-widget</span>, <span class=\"selector-id\">#recent-posts</span>&gt;<span class=\"selector-class\">.recent-post-item</span>, <span class=\"selector-class\">.layout_page</span>&gt;<span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">:first</span>-child<span class=\"selector-pseudo\">:not</span>(<span class=\"selector-class\">.recent-posts</span>), <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#page</span>, <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>, <span class=\"selector-class\">.read-mode</span> <span class=\"selector-class\">.layout_post</span>&gt;<span class=\"selector-id\">#post</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>,.<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*侧边卡片的透明度 */</span></span><br><span class=\"line\"><span class=\"selector-pseudo\">:root</span> &#123;</span><br><span class=\"line\">  <span class=\"attr\">--card-bg</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, .<span class=\"number\">7</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/* 页脚透明 */</span></span><br><span class=\"line\"><span class=\"selector-id\">#footer</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">/* 以下代表透明度为0.7 */</span></span><br><span class=\"line\">\t<span class=\"attribute\">background</span>: <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>,<span class=\"number\">255</span>,<span class=\"number\">255</span>, .<span class=\"number\">0</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"引入css-文件\"><a href=\"#引入css-文件\" class=\"headerlink\" title=\"引入css 文件\"></a>引入css 文件</h4><p>在主题配置文件_config.yml引入css文件,全局检索inject,在以下head位置插入字段</p>\n<p>位置图片：</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221119125806511-17842588.png\" class=\"\">\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;link rel=&quot;stylesheet&quot; href=&quot;/css/transpancy.css&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"排查过程（页脚为例）\"><a href=\"#排查过程（页脚为例）\" class=\"headerlink\" title=\"排查过程（页脚为例）\"></a>排查过程（页脚为例）</h4><p>浏览器页面打开</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203047705-1415002471.png\" class=\"\">\n\n<p>浏览器调试</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203055675-805963954.png\" class=\"\">\n\n<p>去主题下面css文件夹下修改文件，此外发现仍有阴影，记得去（我本地设置）_config.butterfly.yml配置文件中将<code>footer_bg: false</code></p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203101693-1156912262.png\" class=\"\">\n\n<p>如上目录下把这个背景色注释掉发现问题解决（粗暴有侵入，所以另外引入CSS）</p>\n<img src=\"/2022/11/19/Hexo%E4%B8%BB%E9%A2%98Butterfly%E9%85%8D%E7%BD%AE%E3%80%81%E8%B8%A9%E5%9D%91%E5%8F%8A%E9%AD%94%E6%94%B9/2291368-20221201203107165-240361835.png\" class=\"\">\n\n"},{"title":"IDEA2021.3.3配置Maven（详细版）","copyright":true,"date":"2022-08-31T14:03:00.000Z","_content":"\n0、需求\n\nmaven用来管理依赖，是专门用于构建和管理项目的工具，很大程度方便了我们对依赖导包等，然而Idea配置自己本地maven很有必要\n\n1、准备\n\nidea2021.3.3\nmaven 对应版本\n\n2、步骤\n\n首先打开File ==> Setting\n\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831214155978-149933813.png)\n\n然后 Build ==> Build Tools ==> Maven，如下图选择对应的路径及配置应用确认即可。\n\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831214203083-833526346.png)\n\n注意的是：idea使用的JDK版本要和第二步试运行maven时显示的JDK版本一致。\n\n3、扩展\n\n全局设置maven配置（如果平时项目所用版本一致，可以考虑设置）\n\nIdea启动页面找到设置\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831215842519-392248897.png)\n\n找到maven设置即可进行全局设置。\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831215848336-1055632127.png)\n\n此外maven helper插件是个宝藏插件，可以考虑下载使用解决依赖冲突。","source":"_posts/IDEA2021.3.3配置Maven（详细版）.md","raw":"---\ntitle: 'IDEA2021.3.3配置Maven（详细版）'\ncopyright: true\ndate: '2022-08-31 22:03'\ntags: 'Maven'\ncategories: '工具IDE'\n---\n\n0、需求\n\nmaven用来管理依赖，是专门用于构建和管理项目的工具，很大程度方便了我们对依赖导包等，然而Idea配置自己本地maven很有必要\n\n1、准备\n\nidea2021.3.3\nmaven 对应版本\n\n2、步骤\n\n首先打开File ==> Setting\n\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831214155978-149933813.png)\n\n然后 Build ==> Build Tools ==> Maven，如下图选择对应的路径及配置应用确认即可。\n\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831214203083-833526346.png)\n\n注意的是：idea使用的JDK版本要和第二步试运行maven时显示的JDK版本一致。\n\n3、扩展\n\n全局设置maven配置（如果平时项目所用版本一致，可以考虑设置）\n\nIdea启动页面找到设置\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831215842519-392248897.png)\n\n找到maven设置即可进行全局设置。\n![](IDEA2021.3.3配置Maven（详细版）/2291368-20220831215848336-1055632127.png)\n\n此外maven helper插件是个宝藏插件，可以考虑下载使用解决依赖冲突。","slug":"IDEA2021.3.3配置Maven（详细版）","published":1,"updated":"2022-12-08T05:57:24.045Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftj000rsw6x7bpo20tr","content":"<p>0、需求</p>\n<p>maven用来管理依赖，是专门用于构建和管理项目的工具，很大程度方便了我们对依赖导包等，然而Idea配置自己本地maven很有必要</p>\n<p>1、准备</p>\n<p>idea2021.3.3<br>maven 对应版本</p>\n<p>2、步骤</p>\n<p>首先打开File ==&gt; Setting</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831214155978-149933813.png\" class=\"\">\n\n<p>然后 Build ==&gt; Build Tools ==&gt; Maven，如下图选择对应的路径及配置应用确认即可。</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831214203083-833526346.png\" class=\"\">\n\n<p>注意的是：idea使用的JDK版本要和第二步试运行maven时显示的JDK版本一致。</p>\n<p>3、扩展</p>\n<p>全局设置maven配置（如果平时项目所用版本一致，可以考虑设置）</p>\n<p>Idea启动页面找到设置</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831215842519-392248897.png\" class=\"\">\n\n<p>找到maven设置即可进行全局设置。</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831215848336-1055632127.png\" class=\"\">\n\n<p>此外maven helper插件是个宝藏插件，可以考虑下载使用解决依赖冲突。</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"<p>0、需求</p>\n<p>maven用来管理依赖，是专门用于构建和管理项目的工具，很大程度方便了我们对依赖导包等，然而Idea配置自己本地maven很有必要</p>\n<p>1、准备</p>\n<p>idea2021.3.3<br>maven 对应版本</p>\n<p>2、步骤</p>\n<p>首先打开File ==&gt; Setting</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831214155978-149933813.png\" class=\"\">\n\n<p>然后 Build ==&gt; Build Tools ==&gt; Maven，如下图选择对应的路径及配置应用确认即可。</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831214203083-833526346.png\" class=\"\">\n\n<p>注意的是：idea使用的JDK版本要和第二步试运行maven时显示的JDK版本一致。</p>\n<p>3、扩展</p>\n<p>全局设置maven配置（如果平时项目所用版本一致，可以考虑设置）</p>\n<p>Idea启动页面找到设置</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831215842519-392248897.png\" class=\"\">\n\n<p>找到maven设置即可进行全局设置。</p>\n<img src=\"/2022/08/31/IDEA2021.3.3%E9%85%8D%E7%BD%AEMaven%EF%BC%88%E8%AF%A6%E7%BB%86%E7%89%88%EF%BC%89/2291368-20220831215848336-1055632127.png\" class=\"\">\n\n<p>此外maven helper插件是个宝藏插件，可以考虑下载使用解决依赖冲突。</p>\n"},{"title":"IDEA2021.3安装及破解教程","copyright":true,"date":"2022-05-09T08:57:00.000Z","_content":"\n# IDEA2021_3安装及破解\n\n## 下载安装包\n\n[历史版本下载链接](https://www.jetbrains.com/idea/download/other.html\n)\n如下选择2021.3版本下载即可。\n![](IDEA2021.3安装及破解教程/2291368-20220509164251511-317252381.png)\n\n## 安装\n\n\n![](IDEA2021.3安装及破解教程/2291368-20220509164525444-1888185146.png)\n\n中间步骤省略，下一步或者install选择默认即可。\n\n![](IDEA2021.3安装及破解教程/2291368-20220509164533939-754309439.png)\n\n## 破解\n\n具体破解安装包见文末参考链接。\n\n复制补丁文件夹到硬盘某个位置且后期位置不在移动。打开文件夹后，目录下的ja-netfilter.jar 为激活补丁\n\n接下来破解步骤有\n\n首先点击此脚本\n\n![](IDEA2021.3安装及破解教程/2291368-20220825152816881-2076432223.png)\n\n\n其次引用激活补丁\n进入 IDEA 的安装目录，进入 /bin 目录下，修改 idea64.exe.vmoptions 配置文件：\n\n文件中加入如下代码\n```\n# 补丁的绝对路径（可根据你实际的位置进行修改）,注意路径一定要填写正确，且不能包含中文，否则会导致 IDEA 无法启动\n# 实际路径 ：D:\\Software\\ProSoftware\\JetBrains\\ja-netfilter 注意 /\n-javaagent:D:/Software/ProSoftware/JetBrains/ja-netfilter/ja-netfilter.jar\n\n# 最新 IDEA 版本需要添加下面两行，否则会报 key valid\n--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED\n```\n\n![](IDEA2021.3安装及破解教程/2291368-20220825153608481-312323332.png)\n\n再次打开idea填写指定激活码完成激活。\n\n![](IDEA2021.3安装及破解教程/2291368-20220825152855385-1081507081.png)\n\n激活后如图展示\n\n![](IDEA2021.3安装及破解教程/2291368-20220825154015874-1170150107.png)\n\n关闭即可。\n\n再次打开效果如图即破解成功。\n![](IDEA2021.3安装及破解教程/2291368-20220509165538782-356118260.png)\n\n[参考文章](https://www.exception.site/essay/how-to-free-use-idea-202021-by-resigter-code)\n","source":"_posts/IDEA2021.3安装及破解教程.md","raw":"---\ntitle: 'IDEA2021.3安装及破解教程'\ncopyright: true\ndate: '2022-05-09 16:57'\ntags: 'IDEA'\ncategories: '工具IDE'\n---\n\n# IDEA2021_3安装及破解\n\n## 下载安装包\n\n[历史版本下载链接](https://www.jetbrains.com/idea/download/other.html\n)\n如下选择2021.3版本下载即可。\n![](IDEA2021.3安装及破解教程/2291368-20220509164251511-317252381.png)\n\n## 安装\n\n\n![](IDEA2021.3安装及破解教程/2291368-20220509164525444-1888185146.png)\n\n中间步骤省略，下一步或者install选择默认即可。\n\n![](IDEA2021.3安装及破解教程/2291368-20220509164533939-754309439.png)\n\n## 破解\n\n具体破解安装包见文末参考链接。\n\n复制补丁文件夹到硬盘某个位置且后期位置不在移动。打开文件夹后，目录下的ja-netfilter.jar 为激活补丁\n\n接下来破解步骤有\n\n首先点击此脚本\n\n![](IDEA2021.3安装及破解教程/2291368-20220825152816881-2076432223.png)\n\n\n其次引用激活补丁\n进入 IDEA 的安装目录，进入 /bin 目录下，修改 idea64.exe.vmoptions 配置文件：\n\n文件中加入如下代码\n```\n# 补丁的绝对路径（可根据你实际的位置进行修改）,注意路径一定要填写正确，且不能包含中文，否则会导致 IDEA 无法启动\n# 实际路径 ：D:\\Software\\ProSoftware\\JetBrains\\ja-netfilter 注意 /\n-javaagent:D:/Software/ProSoftware/JetBrains/ja-netfilter/ja-netfilter.jar\n\n# 最新 IDEA 版本需要添加下面两行，否则会报 key valid\n--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED\n--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED\n```\n\n![](IDEA2021.3安装及破解教程/2291368-20220825153608481-312323332.png)\n\n再次打开idea填写指定激活码完成激活。\n\n![](IDEA2021.3安装及破解教程/2291368-20220825152855385-1081507081.png)\n\n激活后如图展示\n\n![](IDEA2021.3安装及破解教程/2291368-20220825154015874-1170150107.png)\n\n关闭即可。\n\n再次打开效果如图即破解成功。\n![](IDEA2021.3安装及破解教程/2291368-20220509165538782-356118260.png)\n\n[参考文章](https://www.exception.site/essay/how-to-free-use-idea-202021-by-resigter-code)\n","slug":"IDEA2021.3安装及破解教程","published":1,"updated":"2022-12-08T05:53:11.814Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftk000wsw6xfzpg8ju6","content":"<h1 id=\"IDEA2021-3安装及破解\"><a href=\"#IDEA2021-3安装及破解\" class=\"headerlink\" title=\"IDEA2021_3安装及破解\"></a>IDEA2021_3安装及破解</h1><h2 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h2><p><a href=\"https://www.jetbrains.com/idea/download/other.html\">历史版本下载链接</a><br>如下选择2021.3版本下载即可。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164251511-317252381.png\" class=\"\">\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164525444-1888185146.png\" class=\"\">\n\n<p>中间步骤省略，下一步或者install选择默认即可。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164533939-754309439.png\" class=\"\">\n\n<h2 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h2><p>具体破解安装包见文末参考链接。</p>\n<p>复制补丁文件夹到硬盘某个位置且后期位置不在移动。打开文件夹后，目录下的ja-netfilter.jar 为激活补丁</p>\n<p>接下来破解步骤有</p>\n<p>首先点击此脚本</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825152816881-2076432223.png\" class=\"\">\n\n\n<p>其次引用激活补丁<br>进入 IDEA 的安装目录，进入 /bin 目录下，修改 idea64.exe.vmoptions 配置文件：</p>\n<p>文件中加入如下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 补丁的绝对路径（可根据你实际的位置进行修改）,注意路径一定要填写正确，且不能包含中文，否则会导致 IDEA 无法启动</span><br><span class=\"line\"># 实际路径 ：D:\\Software\\ProSoftware\\JetBrains\\ja-netfilter 注意 /</span><br><span class=\"line\">-javaagent:D:/Software/ProSoftware/JetBrains/ja-netfilter/ja-netfilter.jar</span><br><span class=\"line\"></span><br><span class=\"line\"># 最新 IDEA 版本需要添加下面两行，否则会报 key valid</span><br><span class=\"line\">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class=\"line\">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825153608481-312323332.png\" class=\"\">\n\n<p>再次打开idea填写指定激活码完成激活。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825152855385-1081507081.png\" class=\"\">\n\n<p>激活后如图展示</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825154015874-1170150107.png\" class=\"\">\n\n<p>关闭即可。</p>\n<p>再次打开效果如图即破解成功。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509165538782-356118260.png\" class=\"\">\n\n<p><a href=\"https://www.exception.site/essay/how-to-free-use-idea-202021-by-resigter-code\">参考文章</a></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<h1 id=\"IDEA2021-3安装及破解\"><a href=\"#IDEA2021-3安装及破解\" class=\"headerlink\" title=\"IDEA2021_3安装及破解\"></a>IDEA2021_3安装及破解</h1><h2 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h2><p><a href=\"https://www.jetbrains.com/idea/download/other.html\">历史版本下载链接</a><br>如下选择2021.3版本下载即可。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164251511-317252381.png\" class=\"\">\n\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164525444-1888185146.png\" class=\"\">\n\n<p>中间步骤省略，下一步或者install选择默认即可。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509164533939-754309439.png\" class=\"\">\n\n<h2 id=\"破解\"><a href=\"#破解\" class=\"headerlink\" title=\"破解\"></a>破解</h2><p>具体破解安装包见文末参考链接。</p>\n<p>复制补丁文件夹到硬盘某个位置且后期位置不在移动。打开文件夹后，目录下的ja-netfilter.jar 为激活补丁</p>\n<p>接下来破解步骤有</p>\n<p>首先点击此脚本</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825152816881-2076432223.png\" class=\"\">\n\n\n<p>其次引用激活补丁<br>进入 IDEA 的安装目录，进入 /bin 目录下，修改 idea64.exe.vmoptions 配置文件：</p>\n<p>文件中加入如下代码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 补丁的绝对路径（可根据你实际的位置进行修改）,注意路径一定要填写正确，且不能包含中文，否则会导致 IDEA 无法启动</span><br><span class=\"line\"># 实际路径 ：D:\\Software\\ProSoftware\\JetBrains\\ja-netfilter 注意 /</span><br><span class=\"line\">-javaagent:D:/Software/ProSoftware/JetBrains/ja-netfilter/ja-netfilter.jar</span><br><span class=\"line\"></span><br><span class=\"line\"># 最新 IDEA 版本需要添加下面两行，否则会报 key valid</span><br><span class=\"line\">--add-opens=java.base/jdk.internal.org.objectweb.asm=ALL-UNNAMED</span><br><span class=\"line\">--add-opens=java.base/jdk.internal.org.objectweb.asm.tree=ALL-UNNAMED</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825153608481-312323332.png\" class=\"\">\n\n<p>再次打开idea填写指定激活码完成激活。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825152855385-1081507081.png\" class=\"\">\n\n<p>激活后如图展示</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220825154015874-1170150107.png\" class=\"\">\n\n<p>关闭即可。</p>\n<p>再次打开效果如图即破解成功。</p>\n<img src=\"/2022/05/09/IDEA2021.3%E5%AE%89%E8%A3%85%E5%8F%8A%E7%A0%B4%E8%A7%A3%E6%95%99%E7%A8%8B/2291368-20220509165538782-356118260.png\" class=\"\">\n\n<p><a href=\"https://www.exception.site/essay/how-to-free-use-idea-202021-by-resigter-code\">参考文章</a></p>\n"},{"title":"IDEA设置单行注释符在代码行首部","copyright":true,"date":"2022-11-22T13:06:00.000Z","_content":"\n#### 需求\n\n默认 IntelliJ IDEA 对于 Java 代码的单行注释是把注释的斜杠放在行数的最开头，个人觉得看着不舒服，所以设置为单行注释的两个斜杠跟随在代码的头部\n\n#### 解决方案\n\n![](IDEA设置单行注释符在代码行首部/2291368-20220921110657870-1510098922.png)\n\n注：\n1：斜杠显示在代码行首。\n2：斜杠显示在整行的最前端\n设置为1的效果如下：\n\n![](IDEA设置单行注释符在代码行首部/2291368-20220921110702758-278199113.png)","source":"_posts/IDEA设置单行注释符在代码行首部.md","raw":"---\ntitle: 'IDEA设置单行注释符在代码行首部'\ncopyright: true\ndate: '2022-11-22 21:06'\ntags: 'IDEA'\ncategories: '工具IDE'\n---\n\n#### 需求\n\n默认 IntelliJ IDEA 对于 Java 代码的单行注释是把注释的斜杠放在行数的最开头，个人觉得看着不舒服，所以设置为单行注释的两个斜杠跟随在代码的头部\n\n#### 解决方案\n\n![](IDEA设置单行注释符在代码行首部/2291368-20220921110657870-1510098922.png)\n\n注：\n1：斜杠显示在代码行首。\n2：斜杠显示在整行的最前端\n设置为1的效果如下：\n\n![](IDEA设置单行注释符在代码行首部/2291368-20220921110702758-278199113.png)","slug":"IDEA设置单行注释符在代码行首部","published":1,"updated":"2022-12-08T05:56:06.256Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftm000zsw6xfvkq09zl","content":"<h4 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h4><p>默认 IntelliJ IDEA 对于 Java 代码的单行注释是把注释的斜杠放在行数的最开头，个人觉得看着不舒服，所以设置为单行注释的两个斜杠跟随在代码的头部</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><img src=\"/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/2291368-20220921110657870-1510098922.png\" class=\"\">\n\n<p>注：<br>1：斜杠显示在代码行首。<br>2：斜杠显示在整行的最前端<br>设置为1的效果如下：</p>\n<img src=\"/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/2291368-20220921110702758-278199113.png\" class=\"\">","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<h4 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h4><p>默认 IntelliJ IDEA 对于 Java 代码的单行注释是把注释的斜杠放在行数的最开头，个人觉得看着不舒服，所以设置为单行注释的两个斜杠跟随在代码的头部</p>\n<h4 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h4><img src=\"/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/2291368-20220921110657870-1510098922.png\" class=\"\">\n\n<p>注：<br>1：斜杠显示在代码行首。<br>2：斜杠显示在整行的最前端<br>设置为1的效果如下：</p>\n<img src=\"/2022/11/22/IDEA%E8%AE%BE%E7%BD%AE%E5%8D%95%E8%A1%8C%E6%B3%A8%E9%87%8A%E7%AC%A6%E5%9C%A8%E4%BB%A3%E7%A0%81%E8%A1%8C%E9%A6%96%E9%83%A8/2291368-20220921110702758-278199113.png\" class=\"\">"},{"title":"IDEA热部署插件JRebel的安装与使用","copyright":true,"date":"2022-08-30T14:38:00.000Z","_content":"\n1、背景\n\n一般更新了 Java 文件后要手动重启整个项目，才能生效，这很影响开发速度，于是热部署就出现了。\n\n热部署就是正在运行状态的应用，修改了他的源码之后，在不重新启动的情况下能够把修改内容编译并部署到服务器上，使得修改立即生效。\n\n使用JRebel后，可以不用重启便可将修改的代码有效，非常的高效。\n\n2、下载安装\n\nIdea下安装JRebel插件\n\nFile -> Settings -> Plugins 中搜索JRebel,安装插件,\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727095004887-1021333814.png)\n\n下载完成后重启Idea，来到引导页面\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727095323044-351600479.png)\n\n**3、激活（由于是付费软件，所以这里需要激活）**\n\n激活前需要准备：GUID + 邮箱\n\n这里给出一个在线生成GUID地址： https://www.guidgen.com/\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727101157568-1260673146.png)\n\n如图界面拿到生成的一个 GUID ，并且准备好自己的邮箱（虚假邮箱也可，不校验），然后即可进入激活页面激活。\n\n点击 Jrabel Activation 进入激活\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727100744970-1033816311.png)\n\n地址格式是https://jrebel.qekang.com/GUID，其中的GUID是上述给出地址生成的\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727101209601-1551997987.png)\n\n点击激活完成后跳转到jrebel快速开始官网\n\n到此激活成功。\n\n4、其他配置\n\nFile -> Settings -> Jrebel&Xrebel 设置 Jrebel 离线工作，并且部署时间设置为1s\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220729162029857-1803090724.png)\n\n[参考文章](https://www.cnblogs.com/shan333/p/16098637.html)\n\n[参考文章](https://blog.csdn.net/qq_16148137/article/details/99694566?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&utm_relevant_index=9)\n\n[参考文章](https://www.cnblogs.com/fantyovo/p/15682345.html)\n","source":"_posts/IDEA热部署插件JRebel的安装与使用.md","raw":"---\ntitle: 'IDEA热部署插件JRebel的安装与使用'\ncopyright: true\ndate: '2022-08-30 22:38'\ntags: 'IDEA'\ncategories: '工具IDE'\n---\n\n1、背景\n\n一般更新了 Java 文件后要手动重启整个项目，才能生效，这很影响开发速度，于是热部署就出现了。\n\n热部署就是正在运行状态的应用，修改了他的源码之后，在不重新启动的情况下能够把修改内容编译并部署到服务器上，使得修改立即生效。\n\n使用JRebel后，可以不用重启便可将修改的代码有效，非常的高效。\n\n2、下载安装\n\nIdea下安装JRebel插件\n\nFile -> Settings -> Plugins 中搜索JRebel,安装插件,\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727095004887-1021333814.png)\n\n下载完成后重启Idea，来到引导页面\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727095323044-351600479.png)\n\n**3、激活（由于是付费软件，所以这里需要激活）**\n\n激活前需要准备：GUID + 邮箱\n\n这里给出一个在线生成GUID地址： https://www.guidgen.com/\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727101157568-1260673146.png)\n\n如图界面拿到生成的一个 GUID ，并且准备好自己的邮箱（虚假邮箱也可，不校验），然后即可进入激活页面激活。\n\n点击 Jrabel Activation 进入激活\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727100744970-1033816311.png)\n\n地址格式是https://jrebel.qekang.com/GUID，其中的GUID是上述给出地址生成的\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220727101209601-1551997987.png)\n\n点击激活完成后跳转到jrebel快速开始官网\n\n到此激活成功。\n\n4、其他配置\n\nFile -> Settings -> Jrebel&Xrebel 设置 Jrebel 离线工作，并且部署时间设置为1s\n\n![](IDEA热部署插件JRebel的安装与使用/2291368-20220729162029857-1803090724.png)\n\n[参考文章](https://www.cnblogs.com/shan333/p/16098637.html)\n\n[参考文章](https://blog.csdn.net/qq_16148137/article/details/99694566?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&utm_relevant_index=9)\n\n[参考文章](https://www.cnblogs.com/fantyovo/p/15682345.html)\n","slug":"IDEA热部署插件JRebel的安装与使用","published":1,"updated":"2022-12-08T05:56:20.461Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftn0013sw6xe30gequa","content":"<p>1、背景</p>\n<p>一般更新了 Java 文件后要手动重启整个项目，才能生效，这很影响开发速度，于是热部署就出现了。</p>\n<p>热部署就是正在运行状态的应用，修改了他的源码之后，在不重新启动的情况下能够把修改内容编译并部署到服务器上，使得修改立即生效。</p>\n<p>使用JRebel后，可以不用重启便可将修改的代码有效，非常的高效。</p>\n<p>2、下载安装</p>\n<p>Idea下安装JRebel插件</p>\n<p>File -&gt; Settings -&gt; Plugins 中搜索JRebel,安装插件,</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727095004887-1021333814.png\" class=\"\">\n\n<p>下载完成后重启Idea，来到引导页面</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727095323044-351600479.png\" class=\"\">\n\n<p><strong>3、激活（由于是付费软件，所以这里需要激活）</strong></p>\n<p>激活前需要准备：GUID + 邮箱</p>\n<p>这里给出一个在线生成GUID地址： <a href=\"https://www.guidgen.com/\">https://www.guidgen.com/</a></p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727101157568-1260673146.png\" class=\"\">\n\n<p>如图界面拿到生成的一个 GUID ，并且准备好自己的邮箱（虚假邮箱也可，不校验），然后即可进入激活页面激活。</p>\n<p>点击 Jrabel Activation 进入激活</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727100744970-1033816311.png\" class=\"\">\n\n<p>地址格式是<a href=\"https://jrebel.qekang.com/GUID%EF%BC%8C%E5%85%B6%E4%B8%AD%E7%9A%84GUID%E6%98%AF%E4%B8%8A%E8%BF%B0%E7%BB%99%E5%87%BA%E5%9C%B0%E5%9D%80%E7%94%9F%E6%88%90%E7%9A%84\">https://jrebel.qekang.com/GUID，其中的GUID是上述给出地址生成的</a></p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727101209601-1551997987.png\" class=\"\">\n\n<p>点击激活完成后跳转到jrebel快速开始官网</p>\n<p>到此激活成功。</p>\n<p>4、其他配置</p>\n<p>File -&gt; Settings -&gt; Jrebel&amp;Xrebel 设置 Jrebel 离线工作，并且部署时间设置为1s</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220729162029857-1803090724.png\" class=\"\">\n\n<p><a href=\"https://www.cnblogs.com/shan333/p/16098637.html\">参考文章</a></p>\n<p><a href=\"https://blog.csdn.net/qq_16148137/article/details/99694566?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&utm_relevant_index=9\">参考文章</a></p>\n<p><a href=\"https://www.cnblogs.com/fantyovo/p/15682345.html\">参考文章</a></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"<p>1、背景</p>\n<p>一般更新了 Java 文件后要手动重启整个项目，才能生效，这很影响开发速度，于是热部署就出现了。</p>\n<p>热部署就是正在运行状态的应用，修改了他的源码之后，在不重新启动的情况下能够把修改内容编译并部署到服务器上，使得修改立即生效。</p>\n<p>使用JRebel后，可以不用重启便可将修改的代码有效，非常的高效。</p>\n<p>2、下载安装</p>\n<p>Idea下安装JRebel插件</p>\n<p>File -&gt; Settings -&gt; Plugins 中搜索JRebel,安装插件,</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727095004887-1021333814.png\" class=\"\">\n\n<p>下载完成后重启Idea，来到引导页面</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727095323044-351600479.png\" class=\"\">\n\n<p><strong>3、激活（由于是付费软件，所以这里需要激活）</strong></p>\n<p>激活前需要准备：GUID + 邮箱</p>\n<p>这里给出一个在线生成GUID地址： <a href=\"https://www.guidgen.com/\">https://www.guidgen.com/</a></p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727101157568-1260673146.png\" class=\"\">\n\n<p>如图界面拿到生成的一个 GUID ，并且准备好自己的邮箱（虚假邮箱也可，不校验），然后即可进入激活页面激活。</p>\n<p>点击 Jrabel Activation 进入激活</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727100744970-1033816311.png\" class=\"\">\n\n<p>地址格式是<a href=\"https://jrebel.qekang.com/GUID%EF%BC%8C%E5%85%B6%E4%B8%AD%E7%9A%84GUID%E6%98%AF%E4%B8%8A%E8%BF%B0%E7%BB%99%E5%87%BA%E5%9C%B0%E5%9D%80%E7%94%9F%E6%88%90%E7%9A%84\">https://jrebel.qekang.com/GUID，其中的GUID是上述给出地址生成的</a></p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220727101209601-1551997987.png\" class=\"\">\n\n<p>点击激活完成后跳转到jrebel快速开始官网</p>\n<p>到此激活成功。</p>\n<p>4、其他配置</p>\n<p>File -&gt; Settings -&gt; Jrebel&amp;Xrebel 设置 Jrebel 离线工作，并且部署时间设置为1s</p>\n<img src=\"/2022/08/30/IDEA%E7%83%AD%E9%83%A8%E7%BD%B2%E6%8F%92%E4%BB%B6JRebel%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/2291368-20220729162029857-1803090724.png\" class=\"\">\n\n<p><a href=\"https://www.cnblogs.com/shan333/p/16098637.html\">参考文章</a></p>\n<p><a href=\"https://blog.csdn.net/qq_16148137/article/details/99694566?spm=1001.2101.3001.6650.5&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-5-99694566-blog-116466114.pc_relevant_multi_platform_whitelistv1_exp2&utm_relevant_index=9\">参考文章</a></p>\n<p><a href=\"https://www.cnblogs.com/fantyovo/p/15682345.html\">参考文章</a></p>\n"},{"title":"Java基础笔记","copyright":true,"date":"2022-01-11T07:35:00.000Z","_content":"\n# Java基础语法\n\n## 前言\n\n### JDK JRE JVM\n\n- JDK: java development kit java 环境\n- JRE: java Runtime Environment java 运行时环境\n- JVM: java virtual Machine java 虚拟机\n\n### Java 运行机制\n\n- 编译型\n  - 所有的Java代码都是要编译的，.java不经过编译就什么用都没有。\n- 解释型\n  - java代码编译后不能直接运行，它是解释运行在JVM上的，所以它是解释运行的，那也就算是解释的了。\n\n### HelloWorld\n\n```java\npublic class HelloWorld {\n    public static void main(String[] args) {\n        String $firstname = \"L\";\n        String _lastname = \"Q\";\n        String age = \"1\";\n\n        System.out.println(\"Hello World\"+ \" \"+ $firstname + _lastname + \" \"+ age );\n    }\n\n}\n```\n\n> 可能遇到的问题\n\n![2291368-20220111152826346-1412372719](Java基础笔记/2291368-20220111152826346-1412372719.png)\n\n## 01、注释\n\n1. 单行注释(idea快捷键ctrl+/)\n2. 多行注释(idea快捷键ctrl+shift+/)\n3. 文档注释\n\n```java\n/**\n * Created by Q on 2021/4/17.\n */\n\npublic class HelloWorld {\n    public static void main(String[] args) {\n//单行注释输出hello world\n        System.out.println(\"Hello World\");\n    }\n\n/*多行注释\n多行注释*/\n\n/**\n * @author Q\n * @decription JavaDoc文档注释\n */\n}\n```\n\n## 02、标识符与关键字\n\n### 2-1 标识符\n\nJava 中标识符是为方法、变量或其他用户定义项所定义的名称。标识符可以有一个或多个字符。在 Java 语言中，标识符的构成规则如下。\n\n>标识符由数字（0~9）和字母（A~Z 和 a~z）、美元符号（$）、下划线（_）以及 Unicode 字符集中符号大于 0xC0 的所有符号组合构成（各符号之间没有空格）。\n>\n>标识符的第一个符号为字母、下划线和美元符号，后面可以是任何字母、数字、美元符号或下划线。\n\n\n另外，Java 区分大小写，因此 name 和 Name 是两个不同的标识符。\n\n注意：标识符命名时，切记不能以数字开头，也不能使用任何 Java 关键字作为标识符，而且不能赋予标识符任何标准的方法名。\n\n标识符分为两类，分别为关键字和用户自定义标识符。\n\n>关键字是有特殊含义的标识符，如 true、false 表示逻辑的真假。\n>\n>用户自定义标识符是由用户按标识符构成规则生成的非保留字的标识符，如 abc 就是一个标识符。注意：使用标识符时一定要注意，或者使用关键字，或者使用自定义的非关键字标识符。此外，标识符可以包含关键字，但不能与关键字重名。\n\n合法与不合法标识符示例。\n\n\t合法标识符：date、$2021、_date、D_$date 等。\n\t\n\t不合法的标识符：1111.com、1com、for、if 等。\n\n\n标识符用来命名常量、变量、类和类的对象等。因此，在我们命名标识符时，应赋予它一个有意义或有用途的名字。\n\n### 2-2 关键字\n\n关键字（或者保留字）是对编译器有特殊意义的固定单词，不能在程序中做其他目的使用。关键字具有专门的意义和用途，和自定义的标识符不同，不能当作一般的标识符来使用。\n\nJava 的关键字对 Java 编译器有特殊的意义，它们用来表示一种数据类型，或者表示程序的结构等。\n\n保留字是为 Java 预留的关键字，它们虽然现在没有作为关键字，但在以后的升级版本中有可能作为关键字。\n\nJava 语言目前定义了 51 个关键字，这些关键字不能作为变量名、类名和方法名来使用。以下对这些关键字进行了分类。\n\n>数据类型：boolean、int、long、short、byte、float、double、char、class、interface。\n>\n>流程控制：if、else、do、while、for、switch、case、default、break、continue、return、try、catch、finally。\n>\n>修饰符：public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native。\n>\n>动作：package、import、throw、throws、extends、implements、this、supper、instanceof、new。\n>\n>保留字：true、false、null、goto、const。\n\n\n注意：由于 Java 区分大小写，因此 public 是关键字，而 Public 则不是关键字。但是为了程序的清晰及可读性，要尽量避免使用关键字的其他形式来命名。\n\n## 03、数据类型\n\n- 强类型语言：Java  c++ (先定义后使用)\n- 弱类型语言：javascript python\n\njava数据类型\n\n### 3-1 基本类型（primitive type）\n\n数值类型+布尔类型\n\n- 整数 ：int   byte   short   long\n- 小数：float   double\n- 字符：char\n- 布尔型：true  false\n\n`字符串String是类不是关键字`\n\n~~~java\n/**\n * Created by Q on 2021/4/18.\n */\npublic class Demo01 {\n    public static void main(String[] args) {\n\t\t//八大基本类型\n\n\t\t//整数\n        int num1 = 1000000; //最常用  4字节\n        byte num2 = 111; //-128--127 1字节\n        short num3 = 11111;  //2字节\n        long num4 = 1111111L; //long类型要在数字后加L 8字节\n\n\t\t//小数：浮点数\n        float num5 = 1.111F; //float类型要在数字后加F 4字节\n        double num6 = 3.14159265358979; //8字节\n\n\t\t//字符\n        char aaa = 'a'; //注意单引号不是双引号，2个字节\n        //String name = \"李四\";\n        //字符串String是类不是关键字\n\n\t\t//布尔型：是非\n        boolean flag = true; //1位\n\n        System.out.println(flag);\n    }\n}\n~~~\n\n> 扩展\n\n```java\n/**\n * Created by Q on 2022/1/5.\n */\npublic class Demo02 {\n    public static void main(String[] args) {\n        //整数拓展 进制  二进制（0b开头）  十进制   八进制（0开头）  十六进制（0x开头）\n        int i1 = 0b10;\n        int i2 = 010;\n        int i3 = 0x10;\n\n        System.out.println(i1);\n        System.out.println(i2);\n        System.out.println(i3);\n        System.out.println(\"===========================\");\n\n        //==================================================\n        //浮点数拓展    银行业务表示（钱的计算）\n        //BigDecimal   数学工具类（如果需要计算，而且不能让它有误差就使用这个类）\n        //最好完全避免使用浮点数进行比较\n        //==================================================\n        float f = 1.1f;\n        double d = 1.1d;\n        System.out.println(d == f);    //false\n        float f1 = 12544524154441f;\n        float f2 = f1 + 1;\n        System.out.println(f1 == f2);       //true(精度丢失)\n        System.out.println(\"===========================\");\n\n        // 字符扩展\n        char c1='a';\n        char c2='中';\n        //我们通过单引号来表示字符常量\n        System.out.println(c1);\n        System.out.println((int)c1);\n        System.out.println(c2);\n        System.out.println((int)c2);\n        //强制转换可以把字符转换成数字，所有的字符本质还是数字\n        // Unicode 编码表：97=a 65=A  （本质上还是数字）\n        // 2字节    65536字符  Excel最长有2的16次方=65536\n        //U0000   UFFFF\n        char c3='\\u0061';\n        System.out.println(c3);//a\n        //转义字符（转义字符它有特殊的意思）\n        // \\t    制表符\n        // \\n    换行\n        //  转义字符有非常的多，可以自己去查询一下\n        System.out.println(\"Hello\\tWorld\");\n        System.out.println(\"Hello\\nWorld\");\n        System.out.println(\"===============================\");\n        String sa = new String(\"Hello World\");\n        String sb=new String(\"Hello World\");\n        System.out.println(sa==sb);    //false    两个对象是不同的\n        String sc = \"Hello World\";\n        String sd=\"Hello World\";\n        System.out.println(sc==sd);    //true\n\n        //布尔值扩展\n        boolean flag=true;\n        if (flag==true){}\n        if (flag){}  //省略\n    }\n}\n```\n\n### 3-2 引用类型（reference type）\n\n类  接口  数组\n\n### 3-3 类型转换\n\n类型从low———->high次序：\n\n```\n低 ------------------------------------> 高\nbyte,short,char—> int —> long—> float —> double\n```\n\n#### 3-3-1 自动类型转换\n\n自动类型转换：容量小的数据类型可以**自动**转换为容量大的数据类型。\n\n#### 3-3-2 强制类型转换\n\n强制类型转换，又被称为造型，用于显式的转换一个数值的类型.\n\n> 隐含强制转换\n\n- 可能的默认类型是int。\n- 小数默认是双精度浮点型double，在定义浮点类型时必须在数字下面跟上 F 或者 f。\n\n#### 3-3-3 常见的错误和问题\n\n- 操作比较大的数时，要留意是否溢出，尤其是整数操作时；\n- long类型使用大写L不要用小写。\n\n#### 3-3-4 拓展：JDK7扩展\n\n- JDK7新特性: 二进制整数\n  JDK7为我们直接提供了二进制整数的类型。\n  以0b开头即可。\n\n```\n//例如：int a = 0b0101：\n```\n\n- JDK7新特性：下划线分隔符\n\n```\n//例如：int b = 1_2345_6789;\n```\n\n根据特性，我们能够很容易地知道这是1亿2345万6789。\n\n- 注意点：\n  1.不能把布尔值进行转换 \n  2.不能把对象类型转换为不相干的类型 \n  3.在把高容量转换到低容量的时候，强制转换 \n  4.转换的时候可能存在内存溢出，或者精度问题！\n\n```java\n/**\n * Created by Q on 2022/1/6.\n */\npublic class Demo03 {\n    public static void main(String[] args) {\n\t\t//类型转换\n        int i = 128;\n        byte b = (byte)i; //内存溢出\n\t\t//自动类型转换  低-->高\n        System.out.println(i); //128\n        System.out.println(b); //-128\n\t\t//===================================================\n\n        System.out.println((int)23.7); //23  //精度问题\n        System.out.println((int)-45.89f); //-45  //精度问题\n        System.out.println(\"============================\");\n\t\t//===================================================\n\n        char c = 'a';\n        int d = c+1;\n        System.out.println(d); //98\n        System.out.println((char)d); //b\n\t\t//===================================================\n\n\t\t//操作比较大的数，注意溢出\n\t\t//JDK7新特性，数字之间可以用下划线分割\n        int money = 10_0000_0000;\n        System.out.println(money); //1000000000(10 亿） 不会输出下划线\n        int years = 20;\n        int total = money*years;\n        System.out.println(total); //-1474836480 ,计算时内存溢出\n        System.out.println(\"============================\");\n        long total2 = money*years; //-1474836480 默认是int，转换之前已经存在问题\n        long total3 = money*((long)years);//先将一个数转换为long\n        System.out.println(total2);   //-1474836480\n        System.out.println(total3);   //20000000000\n    }\n}\n```\n\n## 04、变量与常量\n\n### 4-1 变量\n\n![2291368-20221208094727144-1088422726](Java基础笔记/2291368-20221208094727144-1088422726.png)\n\n#### 4-1-1 变量作用域\n\n- 类变量\n- 实例变量\n- 局部变量\n\n#### 4-1-2 变量的命名规范\n\n- 所有的变量、方法、类名：见名知意\n- 类成员变量：首字母小写和驼峰原则（lastName）\n- 局部变量：首字母小写和驼峰原则（lastName）\n- 常量：大写字母和下划线（MAX_VALUE）\n- 类名：首字母大写和驼峰原则(HelloWorld)\n- 方法名：首字母小写和驼峰原则\n\n#### 4-1-3 注意点\n\n- 实例变量：从属于对象；可以理解为从属于一个类，如果不自行初始化，就会变成这个类型的默认值。\n- 所有的数值类型初始化，一般是0  0.0    u00000\n- 布尔值：默认是false\n- 除了基本类型，其余的默认值都是null \n- 局部变量是在方法里面的；必须声明和初始化值\n\n### 4-2 常量\n\n- 常量名一般使用大写字符\n- final 常量名 = 值;\n\n```java\n/**\n * Created by Q on 2022/1/6.\n */\npublic class Demo04 {\n    String name;     // 实例变量\n    int age;\n    //类变量  static（关键字）从属于类\n    static double salary = 2500;   //类变量\n\n    static final double PI = 3.14 ;  //常量\n    public static void main(String[] args) {\n        int a = 2;   //局部变量\n        Demo04 demo04 = new Demo04();\n\n        System.out.println(demo04.name);  //null\n        System.out.println(demo04.age);  //0\n        System.out.println(demo04.salary);  //2500.0\n        System.out.println(a*PI);  //6.28\n    }\n}\n```\n\n## 05、运算符\n\njava 语言支持如下运算符\n\n- 算数运算符 :+ ，-， *， /，%, ++ ，—\n- 赋值运算符: =\n- 关系运算符：>，<, >=,<=,==,!= instanceof\n- 逻辑运算符： &&，|| ，！\n- 位运算符：&，| ，^, ~ ，>>,<<,>>>\n- 条件运算符？：\n- 扩展赋值元芳：+=，-=，*=，/=\n\n尊重原创：（口诀）转自http://lasombra.iteye.com/blog/991662\n单目乘除位关系，逻辑三目后赋值。 \n\n单目：单目运算符+ –(负数) ++ -- 等 \n乘除：算数单目运算符* / % + - \n位：位移单目运算符<< >> \n关系：关系单目运算符> < >= <= == != \n逻辑：逻辑单目运算符&& || & | ^ \n三目：三目单目运算符A > B ? X : Y \n后：无意义，仅仅为了凑字数 \n赋值：赋值=\n\n> 扩展\n\n```java\npackage operator;\n\n/**\n * Created by Q on 2022/1/8.\n */\npublic class Demo05 {\n    public static void main(String[] args) {\n        //Math 运算工具类\n    \tSystem.out.println(Math.pow(2,3));  //8.0\n    \n        int c = 3;\n\t\t//短路运算\n        System.out.println(c>5&&c++>10);  //c++>10不执行\n        System.out.println(c);  //3\n        \n\t\t//位运算        \n        System.out.println(2<<3);   //左移三位   00010   ===>  10000\n        \n        //字符串连接符 +\n        System.out.println(a+b);\n        System.out.println(\"\"+a+b);  //1020  加号两侧出现字符串则转为String进行拼接\n        System.out.println(a+b+\"\");  //30\n    }\n}\n```\n\n## 06、包机制与JavaDoc\n\n### 6-1 包机制（package）\n\n一般利用公司的域名倒置作为包名\n\n```\npackage com.baidu.www;   \npackage com.Q.base;       //package pkg1[. pkg2[. pkg3……]]；\n```\n\n\n导入包\n\n```\nimport package.pkg1.pk.class.*；    //*表示通配符，导入该包全部内容\n```\n\n### 6-2 JavaDoc\n\n-  JavaDoc命令行实现步骤\n\n1. 首先打开cmd命令行窗口 ，切到需要生成文档的Java代码所在文件夹下。\n2. 输入JavaDoc命令行，生成HTML文件。`javadoc -encoding UTF-8 -charset UTF-8 Doc.java`\n\n![2291368-20220111153409714-1355163455](Java基础笔记/2291368-20220111153409714-1355163455.png)\n\n- IDEL编辑器文档生成步骤\n\n![2291368-20220111153243576-122447391](Java基础笔记/2291368-20220111153243576-122447391.png)\n\n![2291368-20220111153253987-2115695199](Java基础笔记/2291368-20220111153253987-2115695199.png)\n\n## 07、Scanner类\n\n通过Scanner 类的next() 和nextLine()方法可获取输入的字符串，读取前，一般使用hasNext() 与hasNextLine()判断是否还有输入。\n\n- next():\n  - 一定要读取到有效字符后才可以结束输入。\n  - 对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。\n  - 只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。\n  - next() 不能得到带有空格的字符串。\n\n- nextLine():\n  - 以Enter为结束符,也就是说nextLine()方法返回的是输入回车之前的所有字符。\n  - 可以获得空白。\n\n```java\npackage com.Q.scanner;\n\nimport java.util.Scanner;\n\n/**\n * Created by Q on 2022/1/9.\n */\npublic class Demo01 {\n    public static void main(String[] args) {\n\t\t//创建一个扫描器对象用于接收键盘输入的数据\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入数据：\");   //Hello World!\n        if (scanner.hasNext()){\n            String str = scanner.next();\n            System.out.println(\"输入的数据为：\"+str);    //Hello\n        }\n\t\t//String str = scanner.nextLine();\n\t\t//System.out.println(\"输入的数据为：\"+str);   //Hello World!\n\n\t\t//凡是I/O类使用完毕记得关闭以节约资源\n        scanner.close();\n    }\n}\n```\n\n> 扩展：求平均数\n\n```java\npackage com.Q.scanner;\n\nimport java.util.Scanner;\n\n/**\n * Created by Q on 2022/1/9.\n */\npublic class Demo03 {\n    public static void main(String[] args) {\n\t\t//算平均数\n        double sum = 0;\n        int count = 0;\n        System.out.println(\"请输入数据\");\n        Scanner scanner = new Scanner(System.in);\n\n        while (scanner.hasNextDouble()){  //输入非double类型即可结束\n            double d = scanner.nextDouble();\n            count++;\n            sum = sum +d;\n            System.out.println(\"当前输入的为第\"+count+\"个数据为：\"+d);\n        }\n        System.out.println(\"输入的\"+count+\"个数据的平均数为\"+(sum/count));\n        scanner.close();\n    }\n}\n```\n\n## 08、流程控制\n\n### 8-1顺序结构\n\n### 8-2选择结构 \n\n`if结构   switch结构`\n\nJDK7之后，switch语句中的变量类型可以是字符串  `比较的value值是  “name.hashCode()”`\n\n反编译 java----class(字节码文件)----反编译(IDEA)\n\n- class反编译后的代码\n\n```java\n//\n// Source code recreated from a .class file by IntelliJ IDEA\n// (powered by Fernflower decompiler)\n//\n\npackage com.Q.struct;\n\npublic class SwitchDemo01 {\n    public SwitchDemo01() {\n    }\n\n    public static void main(String[] args) {\n        char grade = 65;\n        String name = \"李\";\n        switch(grade) {\n        case 65:\n            System.out.println(\"成绩优秀\");\n            break;\n        case 66:\n            System.out.println(\"成绩良好\");\n            break;\n        case 67:\n            System.out.println(\"成绩及格\");\n            break;\n        case 68:\n            System.out.println(\"成绩不及格\");\n            break;\n        default:\n            System.out.println(\"输入不合法\");\n        }\n\n        byte var4 = -1;\n        switch(name.hashCode()) {\n        case 23376:\n            if(name.equals(\"子\")) {\n                var4 = 2;\n            }\n            break;\n        case 26408:\n            if(name.equals(\"木\")) {\n                var4 = 1;\n            }\n            break;\n        case 26446:\n            if(name.equals(\"李\")) {\n                var4 = 0;\n            }\n        }\n\n        switch(var4) {\n        case 0:\n            System.out.println(\"李\");\n            break;\n        case 1:\n            System.out.println(\"木\");\n            break;\n        case 2:\n            System.out.println(\"子\");\n            break;\n        default:\n            System.out.println(\"未查询到名字\");\n        }\n\n    }\n}\n```\n\n- java原代码\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/10.\n */\npublic class SwitchDemo01 {\n    public static void main(String[] args) {\n        char grade = 'A';\n        String name = \"李\";\n        switch (grade) {\n            case 'A':\n                System.out.println(\"成绩优秀\");\n                break;   //不加上case会出现穿透现象\n            case 'B':\n                System.out.println(\"成绩良好\");\n                break;   //不加上case会出现穿透现象\n            case 'C':\n                System.out.println(\"成绩及格\");\n                break;   //不加上case会出现穿透现象\n            case 'D':\n                System.out.println(\"成绩不及格\");\n                break;   //不加上case会出现穿透现象\n            default:\n                System.out.println(\"输入不合法\");\n        }\n        switch (name){\n            case \"李\":\n                System.out.println(\"李\");\n                break;\n            case \"木\":\n                System.out.println(\"木\");\n                break;\n            case \"子\":\n                System.out.println(\"子\");\n                break;\n            default:\n                System.out.println(\"未查询到名字\");\n        }\n    }\n}\n```\n\n### 8-3循环结构     \n\n`while循环    do while循环    for循环`\n\n> 小练习1 求0-100奇数和偶数和\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/10.\n */\npublic class ForDemo02 {\n    public static void main(String[] args) {\n        //求0-100奇数和偶数和\n        int oddSum = 0;\n        int evenSum = 0;\n        for (int i = 0; i <= 100; i++) {\n            if (i%2!=0){\n                oddSum = oddSum +i;\n            }else {\n                evenSum = evenSum +i;\n            }\n        }\n        System.out.println(\"奇数和：\"+oddSum);\n        System.out.println(\"偶数和：\"+evenSum);\n    }\n}\n\n```\n\n> 小练习2 输出1-1000能被5整除的整数，且每行输出三个\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/10.\n */\npublic class ForDemo03 {\n    public static void main(String[] args) {\n\t\t//输出1-1000能被5整除的整数，且每行输出三个\n        for (int i = 1; i <= 1000; i++) {\n            if (i%5==0){\n                System.out.print(i +\"\\t\");   //水平制表转义字符\n            }\n            if (i%(5*3)==0){    //注意if (i%5*3==0)错误, % 优先级与 * 同级，从左向右依次运算\n//                System.out.println();    //与print区别输出后换行，print输出后不换行\n                System.out.print(\"\\n\");   //换行转义字符\n            }\n        }\n    }\n}\n```\n\n> 小练习3 输出9*9乘法表\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class ForDemo04 {\n    public static void main(String[] args) {\n        //9*9乘法表\n        for (int i = 1; i <= 9; i++) {\n            for (int j = 1; j <= i; j++) {\n                System.out.print(i+\"*\"+j+\"=\"+i*j+\"\\t\");\n            }\n            System.out.println();\n        }\n    }\n}\n```\n> 小练习4 打印5*5正三角形\n\n```\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class TextDemo {\n    public static void main(String[] args) {\n        //打印5*5正三角形\n        for (int i = 1; i <= 5; i++) {\n            for (int j = 5; j >= i; j--) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j <= i; j++) {\n                System.out.print(\"*\");\n            }\n            for (int j = 2; j <= i; j++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }\n}\n```\n\n\n> 增强for循环\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class ForDemo05 {\n    public static void main(String[] args) {\n        int[] numbers = {1,0,2,4};\n        for (int i = 0; i < 4; i++) {\n            System.out.println(numbers[i]);\n        }\n        System.out.println(\"===================\");\n\t\t//遍历数组或集合\n        for (int x:numbers){\n            System.out.println(x);\n        }\n    }\n}\n```\n\n### 8-4Break & Continue\n\n> break\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class BreakDemo {\n    public static void main(String[] args) {\n        int i=0;\n        while (i<100){\n            i++;\n            if (i==30)\n                break;  //终止循环\n            System.out.println(i);  //输出1-29\n        }\n\n    }\n}\n```\n\n> continue\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class ContinueDemo {\n    public static void main(String[] args) {\n        int i=0;\n        while (i<30){\n            i++;\n            if (i%10==0){\n                System.out.println();\n                continue;  //结束本次循环，继续执行下一次循环\n            }\n            System.out.print(i);\n        }\n    }\n}\n```\n\n> 对比         return结束方法\n\n## 09、方法\n\n1定义\n\n2调用\n\n3重载---在一个类中，相同的函数名，参数不同\n\n4命令行传参\n\n```java\npackage com.Q.method;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class Demo03 {\n    public static void main(String[] args) {\n        for (int i = 0; i < args.length; i++) {\n            System.out.println(args[i]);\n        }\n    }\n}\n```\n\n```\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method>javac Demo03.java\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method>java Demo03\n错误: 找不到或无法加载主类 Demo03\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method>cd ../        //切换到src目录下\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q>cd ../\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com>cd ../\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src>java com.Q.method.Demo03    //记得加包名\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src>java com.Q.method.Demo03 this is Q    //传参\nthis\nis\nQ\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src>\n```\n\n5可变参数\n\n6递归\n\n> 小练习 计算器  \n\n **待完善**\n\n **待完善**\n\n## 10、数组\n\n1. 声明，创建\n2. 三种初始化以及内存分析\n3. 越界\n4. 使用\n5. 二维数组\n6. Arrays类\n\n> 扩展1 稀疏数组\n\n```java\npackage com.Q.array;\n\nimport java.util.Arrays;\n\n/**\n * Created by Q on 2022/1/14.\n */\npublic class Demo08 {\n    public static void main(String[] args) {\n//        0\t0\t0\t0\t0\n//        0\t0\t0\t0\t0\n//        0\t1\t2\t0\t0\n//        0\t0\t0\t0\t0\n//        0\t0\t0\t0\t0\n        int[][] arrays = new int[5][5];\n        arrays[2][1] = 1;\n        arrays[2][2] = 2;\n        System.out.println(\"输出原数组\");\n        for (int[] arg : arrays) {\n            for (int a : arg) {\n                System.out.print(a+\"\\t\");\n            }\n            System.out.println();\n        }\n        System.out.println(\"====================\");\n//        获取有效值个数\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            for (int j = 0; j < 5; j++) {\n                if (arrays[i][j]!=0) sum++;\n            }\n        }\n        System.out.println(\"有效值个数：\"+sum);   // 有效值个数：2\n//        构建稀疏数组\n        int[][] arrays2 = new int[sum+1][3];\n        arrays2[0][0] = 5;\n        arrays2[0][1] = 5;\n        arrays2[0][2] = 2;\n        int count = 0;\n        for (int i = 0; i < arrays.length; i++) {\n            for (int j = 0; j < arrays[i].length; j++) {\n                if (arrays[i][j]!=0){\n                    count ++;\n                    arrays2[count][0] = i;\n                    arrays2[count][1] = j;\n                    arrays2[count][2] = arrays[i][j];\n                }\n            }\n        }\n//遍历输出稀疏数组\n//        5\t5\t2\n//        2\t1\t1\n//        2\t2\t2\n        System.out.println(\"输出稀疏数组：\");\n        for (int i = 0; i < arrays2.length; i++) {\n            for (int j = 0; j < arrays2[i].length; j++) {\n                System.out.print(arrays2[i][j]+\"\\t\");\n            }\n            System.out.println();\n        }\n        System.out.println(\"======================\");\n//        还原数组\n        int[][] array3 = new int[arrays2[0][0]][arrays2[0][1]];\n        for (int i = 1; i < arrays2.length; i++) {\n            array3[arrays2[i][0]][arrays2[i][1]] =arrays2[i][2];\n        }\n        System.out.println(\"输出还原数组\");\n        for (int[] arg : array3) {\n            for (int a : arg) {\n                System.out.print(a+\"\\t\");\n            }\n            System.out.println();\n        }\n\n    }\n}\n```\n\n> 扩展2  冒泡排序\n\n```java\npackage com.Q.array;\n\nimport java.util.Arrays;\n\n/**\n * Created by Q on 2022/1/14.\n */\npublic class Demo07 {\n    public static void main(String[] args) {\n        int[] arr = {2,1,9,4,5,6,3,5,5,5};\n        int[] result = sort(arr);\n        System.out.println(Arrays.toString(result));\n    }\n//    冒泡排序\n    public static int[] sort(int[] array){\n//        优化\n        boolean flag = false;\n        int temp;\n        //外层循环表示比较的趟数\n        for (int i = 0; i < array.length-1; i++) {\n            for (int j = 0; j < array.length-i-1; j++) {\n                //注意是j表示比较相邻两数的下标\n                if (array[j]>array[j+1]){\n                    temp = array[j];\n                    array[j] = array[j+1];\n                    array[j+1] = temp;\n                    flag = true;  //进行了交换，标志改变\n                }\n            }\n//            优化方法一\n            if (!flag){\n                break;  //终止循环\n            }\n        }\n//        优化方法二\n//        if (!flag){  //某趟没有进行一次交换，直接不用继续比较\n//            return array;\n//        }\n        return array;\n    }\n}\n```\n\n# Java面向对象\n\n> 面向对象（Object-Oriented Programming）编程本质：\n\n以类的方式组织代码，以对象的方式封装数据\n\n> 三大特性\n\n封装\n\n继承\n\n多态\n\n## 01、类与对象的创建\n\n```JAVA\npackage com.oop.Demo01;\n\n/**\n * Created by Q on 2022/1/15.\n */\npublic class Demo01 {\n    public static void main(String[] args) {\n//        Student.say();   静态方法可直接调用\n\n//        非静态方法要先实例化\n        Student student = new Student();\n        student.say();\n    }\n    //静态方法和类一起加载\n    public static void a(){\n//        b();\n    }\n    //非静态方法是在类实例化后才存在的，故不能有静态方法调用\n    public void b(){\n    }\n}\n```\n\n值传递\n\n```java\npackage com.oop.Demo01;\n\n/**\n * Created by Q on 2022/1/16.\n */\npublic class Demo02 {\n    public static void main(String[] args) {\n        //值传递\n        int a = 10;\n        System.out.println(a);  //10\n        Demo02 demo02 = new Demo02();\n        demo02.change(a);\n        System.out.println(a);  //10\n    }\n    public static void change(int a){\n        a = 1;\n    }\n}\n```\n\n## 02、构造器\n\n又叫构造方法\n\n```java\npackage com.oop.Demo02;\n\n/**\n * Created by Q on 2022/1/18.\n */\npublic class Person {\n    //一个类即使什么都不写，也存在一个方法 public Person() {} java--->class文件\n    //显示的定义构造器\n    String name;  //null\n    int age;\n    //作用：实例化初始值\n    //使用new关键字必须有构造器，因为本质是在调用构造器\n    public Person() {\n    }\n\n    //有参构造\n    //使用有参构造，必须显式定义无参构造否则报错\n    // Person(String)in Person cannot be applied to()\n    //快捷键 alt+insert\n    public Person(String name) {\n        this.name = name;\n    }\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n/**\n\t public static void main(String[] args) {\n \t\tPerson person = new Person(\"Q\",10);\n \t\tSystem.out.println(person.name);\n \t\tSystem.out.println(person.age);\n \t}\n */\n}\n```\n\n> 构造器：\n\n- 和类名相同      \n\n- 没有返回值\n\n- 作用：\n\n  1、实例化初始值\n\n  2、使用new关键字本质是在调用构造器\n\n- 注意点：\n\n​        1、使用有参构造，必须显式定义无参构造，否则报错\n\n​\t\t2、快捷键 alt+insert\n\n> 扩展  创建对象内存分析\n\n **待完善**\n\n **待完善**\n\n## 03、封装\n\n将类中属性（+少方法）私有化\n\n```java\npackage com.oop.Demo03;\n\n/**\n * Created by Q on 2022/1/20.\n */\npublic class Student {\n    //封装\n    //属性私有\n    private String name;\n    private int age;\n    \n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        if (age > 0 && age < 120){\n            this.age = age;\n        }else {\n            this.age = -1;\n        }\n    }\n}\n```\n\n## 04、继承\n\n对象抽象出类     对象抽象----->类   \n\n子类抽象出父类    子类抽象------>父类       子类继承父类\n\n### 4-1 Object类\n\n### 4-2 super  this\n\n```java\npackage com.oop.Demo04;\n\n/**\n * Created by Q on 2022/1/20.\n */\n//父类\n//java中，所有类直接或者间接继承Object类\npublic class Person {\n    //私有属性不可继承\n    private int money = 1_0000_0000;\n    protected String name = \"Person_Q\";\n\n    public Person() {\n        System.out.println(\"父类无参构造\");\n    }\n\n    public void print(){\n        System.out.println(\"Person\");\n    }\n\n    public void say(){\n        System.out.println(\"说话了\");\n    }\n    //get set\n    public int getMoney() {\n        return money;\n    }\n\n    public void setMoney(int money) {\n        this.money = money;\n    }\n}\n```\n\n```java\npackage com.oop.Demo04;\n\n/**\n * Created by Q on 2022/1/20.\n */\n//子类（继承类）  ctrl+H：查看类继承结构\n//继承父类所有方法\npublic class Student extends Person {\n    private String name = \"Student_Q\";\n\n    public Student() {\n        //隐藏代码：默认调用父类无参构造\n        super();  //只能放在子类构造器第一行\n        System.out.println(\"子类无参构造\");\n    }\n    public void print(){\n        System.out.println(\"Student\");\n    }\n    public void test1(){\n        print();  //Student\n        this.print();  //Student\n        super.print();  //Person\n    }\n\n    public void test(String name){\n        System.out.println(name);  //test_Q\n        System.out.println(this.name);  //Student_Q\n        System.out.println(super.name);  //Person_Q\n    }\n}\n\n/**\n public static void main(String[] args) {\n com.oop.Demo04.Student s1 = new com.oop.Demo04.Student();\n s1.say();\n s1.test(\"test_Q\");\n }\n */\n```\n\n> super注意点：\n\n​        1、super调用父类构造方法，必须是在构造器方法的第一个\n​        2、super只能出现在子类或者构造方法中\n​        3、super和this不能同时调用构造方法！\n\n> VS this\n\n​        代表的对象不同：\n​            this：本身调用者这个对象\n​            super：代表父类对象的引用\n​        前提不同：\n​            this：没有继承也可以使用\n​            super：只能在继承的条件下才可以使用\n​        构造方法：\n​            this：本类的构造\n​            super：父类的构造\n\n### 4-3 方法重写\n\n重写是方法的重写和属性无关\n\n```java\n//不是重写\npublic class A {\n    public static void test(){\n        System.out.println(\"A==>test\");\n    }\n}\n\npublic class B extends A{\n    public static void test() {\n        System.out.println(\"B==>test\");\n    }\n}\n\npublic class Application {\n    public static void main(String[] args) {\n    \t//父类的引用指向子类\n        A a = new B();\n        a.test();  //A==>test\n        \n        B b = new B();\n        b.test();  //B==>test\n    }\n}\n```\n\n```java\n//重写\npublic class A {\n    public void test(){\n        System.out.println(\"A==>test\");\n    }\n}\n\npublic class B extends A{\n    //注解\n    @Override  //重写\n    public void test() {\n        System.out.println(\"B==>test\");\n    }\n}\n\n\npublic class Application {\n    public static void main(String[] args) {\n        A a = new B();\n        B b = new B();\n        a.test();  //B==>test\n        b.test();  //B==>test\n    }\n}\n```\n\n> 重写小结：要是非静态方法\n\n1. 需要有继承关系，子类重写父类的方法！\n\n2. 方法名必须相同，参数列表必须相同\n\n3. 修饰符：\n\n   范围可以扩大：public > Protected > Default > private\n\n4. 抛出的异常：\n\n   范围可以被缩小，但不能扩大；\n\n   ClassNotFountException —> Exception(大)\n\n5. 重写，子类的方法和父类必须要一致，方法体不同！\n\n> 为什么需要重写？\n\n父类的功能，子类不一定需要，或者不一定满足！\n\n##05、多态\n\n多态存在的必要条件：\n\n- 继承\n- 重写 (子类重写父类方法,方法名必须相同)\n- 父类引用指向子类对象：Parent p = new Child();\n\n## 06、instanceof关键字\n\n> X instanceof Y               X是否是Y的实例\n\n```java \npackage com.oop;\nimport com.oop.demo06.Person;\nimport com.oop.demo06.Student;\nimport com.oop.demo06.Teacher;\npublic class Application {\n    public static void main(String[] args) {\n        //Object > String\n        //Object > Person > Teacher\n        //Object > Person > Student\n        Object object = new Student();\n        //System.out.println(X instanceof Y);//能不能编译通过，就取决于X和Y之间是否存在父子关系；\n        //结果是true或者false ，X所指向的实例类型是Y的子类型，或者 X和 Y是有关系的\n        System.out.println(object instanceof Student);//true\n        System.out.println(object instanceof Person);//true\n        System.out.println(object instanceof Object);//true\n        System.out.println(object instanceof Teacher);//false\n        System.out.println(object instanceof String);//false，String是 Object lang包下面的，更没关系了\n        System.out.println(\"===================================\");\n        Person person = new Student();\n        System.out.println(person instanceof Student);//true\n        System.out.println(person instanceof Person);//true\n        System.out.println(person instanceof Object);//true\n        System.out.println(person instanceof Teacher);//false\n        //System.out.println(person instanceof String);//编译报错！string和 person同级，它是两条线\n        System.out.println(\"===================================\");\n        Student student = new Student();\n        System.out.println(student instanceof Student);//true\n        System.out.println(student instanceof Person);//true\n        System.out.println(student instanceof Object);//true\n        //System.out.println(student instanceof Teacher);//false，编译报错！\n                // instanceof是一个比较转换的过程，比较肯定是两边有关系的才会返回true或者false\n        //System.out.println(student instanceof String);//false，编译报错！ 两者没关系会直接报错\n    } \n}\n```\n\n> 多态总结：\n\n        1. 父类引用指向子类的对象（子类引用指向父类的对象肯定是不行的）\n        2. 把子类转换为父类，也就是向上转型：不用强制转换；\n        3. 把子类转换为父类，也就是向下转型：需要强制转换；（可能会丢失一些方法）\n        4. 方便方法的调用，减少重复的代码！简洁\n\n## 07 、static关键字小结\n\n静态属性\n\n```java\n//static\npublic class Student {\n    private static int age;//静态的变量  多线程！\n    private double score;//非静态的变量\n    public static void main(String[] args) {\n        Student s1 = new Student();\n        System.out.println(Student.age);//类变量跟类中的所有实例共享\n        //System.out.println(Student.score);这是不行的\n        System.out.println(s1.age);\n        System.out.println(s1.score);\n    }\n}\n```\n\n静态方法\n\n```java\n//static\npublic class Student {\n    private static int age;//静态的变量  多线程！\n    private double score;//非静态的变量\n    public void run(){//非静态方法可以调用静态方法里的所有东西\n        go();\n    }\n    public static void go(){//静态方法可以调用静态方法里的所有东西\n    }\n    public static void main(String[] args) {\n        new Student().run();//对象.方法45\n        Student.go();\n        go();\n    }\n}\n```\n\n静态代码块\n\n```java\npublic class Person {\n    //2：赋初值~\n    {\n        //代码块（匿名代码块）\n        //没有名字，程序不会主动调用这些模块\n        //匿名代码块：创建对象时就自动创建了，而且在构造器之前\n        System.out.println(\"匿名代码块\");\n    }\n    //1 ： 只执行一次~\n    static {\n        //静态代码块\n        //可以在里面加载一些初始化的数据\n        //静态代码块：类一加载就直接执行，永久只执行一次\n        System.out.println(\"静态代码块\");\n    }\n    //3\n    public Person(){\n        System.out.println(\"构造方法\");\n    }\n    public static void main(String[] args) {\n        Person person1 = new Person();\n        System.out.println(\"=================\");\n        Person person2 = new Person();\n    }\n    /*\n        结果：\n            静态代码块\n            匿名代码块\n            构造方法\n            =================\n            匿名代码块\n            构造方法\n     */\n}\n```\n\npackage的一些新特性\n\n```java\n//静态导入包~\nimport static java.lang.Math.random;\nimport static java.lang.Math.PI;\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(random());\n        System.out.println(PI);\n    }\n    /*\n    final 通过final修饰的类不能被继承，就没有子类\n     */\n}\n```\n\n## 08、抽象类（abstract)\n\n- 抽象类特点\n  1. 抽象类和抽象方法都需要被abstract修饰。抽象方法一定要定义在抽象类中\n  2. 抽象类不可以直接创建对象，原因：调用抽象方法没有意义\n  3. 只有覆盖了抽象类中所有的抽象方法后，其子类才可以创建对象，否则该子类还是一个抽象类\n\n- abstract不能和哪些关键字共存?\n  1. private 被私有的成员只能在本类中调用，而abstract强制重写抽象方法，二者冲突\n  2. final final表示最终的，被修饰的类和方法不能被继承和重写，与abstract强制重写抽象方法冲突\n  3. static 无意义\n\n```java\n//abstract修饰的类为抽象类,java的类是单继承（接口可以多继承）\npublic abstract class Action {\n    //抽象方法，可以实现约束作用，让继承的子类来实现方法。\n    //abstract,抽象方法，只有方法名字，没有方法的实现！\n    public abstract void doSomething();\n    //抽象类不能new出对象，只能用子类去实现。\n    //抽象类里可以写普通方法\n    //抽象方法必须在抽象类中\n    //抽象的抽象：约束\n    //存在的意义，提高开发效率。\n}\n\npublic class A extends Action{\n    @Override\n    public void doSomething() {\n    }\n}\n```\n\n## 09、接口\n\n- **接口的成员特点**\n\n  - 成员变量：只能是常量，并且是静态的，默认有public static final修饰\n  - 成员方法：只能是抽象方法，默认有public abstract修饰\n  - 构造方法：接口没有构造方法\n\n  ```java\n  package com.oop.Demo06;\n  \n  /**\n   * Created by Q on 2022/1/23.\n   */\n  //接口\n  public interface UserService {\n      void add(String name);\n      void delete(String name);\n      void update(String name);\n      void query(String name);\n  }\n  //接口实现类\n  public class UserServiceImpl implements UserService {\n      @Override\n      public void add(String name) {\n  \n      }\n  \n      @Override\n      public void delete(String name) {\n  \n      }\n  \n      @Override\n      public void update(String name) {\n  \n      }\n  \n      @Override\n      public void query(String name) {\n  \n      }\n  }\n  ```\n\n## 10、内部类\n\n1. 成员内部类\n2. 静态内部类（static 修饰）\n3. 局部内部类\n4. 匿名内部类\n\n```java\npackage com.oop.Demo07;\n\n/**\n * Created by Q on 2022/1/23.\n */\npublic class Outer {\n    private String name;\n    public void out(){\n        System.out.println(\"外部类\");\n    }\n    public class Inner{\n        public void in(){\n            System.out.println(\"内部类\");\n        }\n        //作用：获得内部类的私有属性\n        public void getName(){\n            System.out.println(name);\n        }\n    }\n}\n\n/*\n    public static void main(String[] args) {\n        Outer outer = new Outer();\n        outer.out();  //外部类\n        Outer.Inner in = outer.new Inner();\n        in.in();  //内部类\n        in.getName();  //Q\n    }\n */\n```\n\n>小疑惑  UserService userservice = new UserService()\n\n```java\n//一个Java类中可以有多个class类，但是只能有一个public class\npublic class Outer {\n    public static void main(String[] args) {\n        new Apple().eat();\n        //匿名内部类\n        UserService userservice = new UserService(){\n            @Override\n            public void Hello() {\n            }\n        };\n    }\n}\n//局部内部类\nclass Apple{\n    public void eat(){\n        System.out.println(\"1\");\n    }\n}\ninterface UserService{\n    void Hello();\n}\n```\n\n\n\n## 11、类、接口、抽象类小结\n\n> 类与类,类与接口,接口与接口的关系\n\n- 类与类：继承关系,只能单继承,可以多层继承\n- 类与接口：实现关系,可以单实现,也可以多实现。并且可以在继承一个类的同时实现多个接口\n- 接口与接口：继承关系,可以单继承,也可以多继承\n\n> 抽象类和接口的区别\n\n- 成员区别\n\n  抽象类：\n\n  成员变量：可以是变量，也可以是常量\n\n  成员方法：可以是抽象类，也可以非抽象类\n\n  构造方法：有\n\n  接口：\n\n  成员变量：只能是常量\n\n  成员方法：只能是抽象类\n\n  构造方法：无\n\n- 关系区别\n\n  抽象方法：\n\n  类与类：继承，单继承\n  类与接口：实现，单实现，多实现\n  接口与接口：继承，单继承，多继承\n\n- 设计理念区别\n\n  抽象类：体现的是“is a ”的关系，抽象类中定义的是该继承体系的共性功能\n\n  接口：体现的是“like a ”的关系，接口中定义的是该继承体系的个性功能（扩展功能）\n\n## 12、异常\n\nError和Exception\n\n> Exception\n\n### 12-1 异常层次结构图示\n\n（引用菜鸟教程）\n\n![2291368-20220123223242579-694787793](Java基础笔记/2291368-20220123223242579-694787793.png)\n\n### 12-2 关键字\n\n1. try\n2. catch\n3. finally\n4. throw\n5. throws\n\n```java\npackage com.exception;\n\n/**\n * Created by Q on 2022/1/23.\n */\npublic class Test {\n    public static void main(String[] args) {\n        int a = 1;\n        int b = 0;\n        //Ctrl+Alt+t  快捷键：捕获结构代码\n        try{//监控区\n            System.out.println(a/b);   //Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n        }catch (ArithmeticException e){  //捕获\n            System.out.println(e);\n        }catch (Error error){\n            System.out.println(\"Error\");\n        }catch (Exception exception){\n            System.out.println(\"Exception\");\n        }catch (Throwable throwable){\n            System.out.println(\"Throwable\");\n        }finally {  //善后处理   finally可以不用，用于处理IO流等关闭资源\n            System.out.println(\"其他异常\");\n        }\n    }\n}\n/*\n输出结果：\njava.lang.ArithmeticException: / by zero\n其他异常\n */\n```\n\n### 12-3 自定义异常\n\n```java\npackage com.exception.Demo02;\n\n/**\n * Created by Q on 2022/1/23.\n */\npublic class MyException extends Exception{\n    private int detail;\n    //参数大于10抛异常\n    public MyException(int detail) {\n        this.detail = detail;\n    }\n\n    @Override\n    public String toString() {\n        return \"MyException{\" + \"detail='\" + detail + '\\'' + '}';\n    }\n}\n```\n\n```java\n//测试\npublic class Test {\n    //可能出现异常的方法\n    static void test(int a) throws MyException{\n        System.out.println(\"参数：\"+a);\n        if (a > 10){\n            throw new MyException(a);\n        }\n        System.out.println(\"OK\");\n    }\n    public static void main(String[] args) {\n        try {\n            test(14);\n        } catch (MyException e) {\n            System.out.println(e);\n\n        }\n    }\n}\n/*\n参数：14\nMyException{detail='14'}\n */\n```\n\n# 后记（有感）\n\n从2022年1月1号准备开始学习，至今23号，经过23天（实际最多只需要一周就可以搞定，打脸自己flag）断断续续的学习，课程是B站狂神说Java的JavaSE课程，记录了这么一份笔记，希望可以用来以后回顾。能感觉出来这是一份速学课程，相对而言少了很多知识点，适合急找工作速成。后续再找点资料补充完善java体系。\n\n> 补充待续","source":"_posts/Java基础笔记.md","raw":"---\ntitle: 'Java基础笔记'\ncopyright: true\ndate: '2022-01-11 15:35'\ntags: 'Java'\ncategories: '学习笔记'\n---\n\n# Java基础语法\n\n## 前言\n\n### JDK JRE JVM\n\n- JDK: java development kit java 环境\n- JRE: java Runtime Environment java 运行时环境\n- JVM: java virtual Machine java 虚拟机\n\n### Java 运行机制\n\n- 编译型\n  - 所有的Java代码都是要编译的，.java不经过编译就什么用都没有。\n- 解释型\n  - java代码编译后不能直接运行，它是解释运行在JVM上的，所以它是解释运行的，那也就算是解释的了。\n\n### HelloWorld\n\n```java\npublic class HelloWorld {\n    public static void main(String[] args) {\n        String $firstname = \"L\";\n        String _lastname = \"Q\";\n        String age = \"1\";\n\n        System.out.println(\"Hello World\"+ \" \"+ $firstname + _lastname + \" \"+ age );\n    }\n\n}\n```\n\n> 可能遇到的问题\n\n![2291368-20220111152826346-1412372719](Java基础笔记/2291368-20220111152826346-1412372719.png)\n\n## 01、注释\n\n1. 单行注释(idea快捷键ctrl+/)\n2. 多行注释(idea快捷键ctrl+shift+/)\n3. 文档注释\n\n```java\n/**\n * Created by Q on 2021/4/17.\n */\n\npublic class HelloWorld {\n    public static void main(String[] args) {\n//单行注释输出hello world\n        System.out.println(\"Hello World\");\n    }\n\n/*多行注释\n多行注释*/\n\n/**\n * @author Q\n * @decription JavaDoc文档注释\n */\n}\n```\n\n## 02、标识符与关键字\n\n### 2-1 标识符\n\nJava 中标识符是为方法、变量或其他用户定义项所定义的名称。标识符可以有一个或多个字符。在 Java 语言中，标识符的构成规则如下。\n\n>标识符由数字（0~9）和字母（A~Z 和 a~z）、美元符号（$）、下划线（_）以及 Unicode 字符集中符号大于 0xC0 的所有符号组合构成（各符号之间没有空格）。\n>\n>标识符的第一个符号为字母、下划线和美元符号，后面可以是任何字母、数字、美元符号或下划线。\n\n\n另外，Java 区分大小写，因此 name 和 Name 是两个不同的标识符。\n\n注意：标识符命名时，切记不能以数字开头，也不能使用任何 Java 关键字作为标识符，而且不能赋予标识符任何标准的方法名。\n\n标识符分为两类，分别为关键字和用户自定义标识符。\n\n>关键字是有特殊含义的标识符，如 true、false 表示逻辑的真假。\n>\n>用户自定义标识符是由用户按标识符构成规则生成的非保留字的标识符，如 abc 就是一个标识符。注意：使用标识符时一定要注意，或者使用关键字，或者使用自定义的非关键字标识符。此外，标识符可以包含关键字，但不能与关键字重名。\n\n合法与不合法标识符示例。\n\n\t合法标识符：date、$2021、_date、D_$date 等。\n\t\n\t不合法的标识符：1111.com、1com、for、if 等。\n\n\n标识符用来命名常量、变量、类和类的对象等。因此，在我们命名标识符时，应赋予它一个有意义或有用途的名字。\n\n### 2-2 关键字\n\n关键字（或者保留字）是对编译器有特殊意义的固定单词，不能在程序中做其他目的使用。关键字具有专门的意义和用途，和自定义的标识符不同，不能当作一般的标识符来使用。\n\nJava 的关键字对 Java 编译器有特殊的意义，它们用来表示一种数据类型，或者表示程序的结构等。\n\n保留字是为 Java 预留的关键字，它们虽然现在没有作为关键字，但在以后的升级版本中有可能作为关键字。\n\nJava 语言目前定义了 51 个关键字，这些关键字不能作为变量名、类名和方法名来使用。以下对这些关键字进行了分类。\n\n>数据类型：boolean、int、long、short、byte、float、double、char、class、interface。\n>\n>流程控制：if、else、do、while、for、switch、case、default、break、continue、return、try、catch、finally。\n>\n>修饰符：public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native。\n>\n>动作：package、import、throw、throws、extends、implements、this、supper、instanceof、new。\n>\n>保留字：true、false、null、goto、const。\n\n\n注意：由于 Java 区分大小写，因此 public 是关键字，而 Public 则不是关键字。但是为了程序的清晰及可读性，要尽量避免使用关键字的其他形式来命名。\n\n## 03、数据类型\n\n- 强类型语言：Java  c++ (先定义后使用)\n- 弱类型语言：javascript python\n\njava数据类型\n\n### 3-1 基本类型（primitive type）\n\n数值类型+布尔类型\n\n- 整数 ：int   byte   short   long\n- 小数：float   double\n- 字符：char\n- 布尔型：true  false\n\n`字符串String是类不是关键字`\n\n~~~java\n/**\n * Created by Q on 2021/4/18.\n */\npublic class Demo01 {\n    public static void main(String[] args) {\n\t\t//八大基本类型\n\n\t\t//整数\n        int num1 = 1000000; //最常用  4字节\n        byte num2 = 111; //-128--127 1字节\n        short num3 = 11111;  //2字节\n        long num4 = 1111111L; //long类型要在数字后加L 8字节\n\n\t\t//小数：浮点数\n        float num5 = 1.111F; //float类型要在数字后加F 4字节\n        double num6 = 3.14159265358979; //8字节\n\n\t\t//字符\n        char aaa = 'a'; //注意单引号不是双引号，2个字节\n        //String name = \"李四\";\n        //字符串String是类不是关键字\n\n\t\t//布尔型：是非\n        boolean flag = true; //1位\n\n        System.out.println(flag);\n    }\n}\n~~~\n\n> 扩展\n\n```java\n/**\n * Created by Q on 2022/1/5.\n */\npublic class Demo02 {\n    public static void main(String[] args) {\n        //整数拓展 进制  二进制（0b开头）  十进制   八进制（0开头）  十六进制（0x开头）\n        int i1 = 0b10;\n        int i2 = 010;\n        int i3 = 0x10;\n\n        System.out.println(i1);\n        System.out.println(i2);\n        System.out.println(i3);\n        System.out.println(\"===========================\");\n\n        //==================================================\n        //浮点数拓展    银行业务表示（钱的计算）\n        //BigDecimal   数学工具类（如果需要计算，而且不能让它有误差就使用这个类）\n        //最好完全避免使用浮点数进行比较\n        //==================================================\n        float f = 1.1f;\n        double d = 1.1d;\n        System.out.println(d == f);    //false\n        float f1 = 12544524154441f;\n        float f2 = f1 + 1;\n        System.out.println(f1 == f2);       //true(精度丢失)\n        System.out.println(\"===========================\");\n\n        // 字符扩展\n        char c1='a';\n        char c2='中';\n        //我们通过单引号来表示字符常量\n        System.out.println(c1);\n        System.out.println((int)c1);\n        System.out.println(c2);\n        System.out.println((int)c2);\n        //强制转换可以把字符转换成数字，所有的字符本质还是数字\n        // Unicode 编码表：97=a 65=A  （本质上还是数字）\n        // 2字节    65536字符  Excel最长有2的16次方=65536\n        //U0000   UFFFF\n        char c3='\\u0061';\n        System.out.println(c3);//a\n        //转义字符（转义字符它有特殊的意思）\n        // \\t    制表符\n        // \\n    换行\n        //  转义字符有非常的多，可以自己去查询一下\n        System.out.println(\"Hello\\tWorld\");\n        System.out.println(\"Hello\\nWorld\");\n        System.out.println(\"===============================\");\n        String sa = new String(\"Hello World\");\n        String sb=new String(\"Hello World\");\n        System.out.println(sa==sb);    //false    两个对象是不同的\n        String sc = \"Hello World\";\n        String sd=\"Hello World\";\n        System.out.println(sc==sd);    //true\n\n        //布尔值扩展\n        boolean flag=true;\n        if (flag==true){}\n        if (flag){}  //省略\n    }\n}\n```\n\n### 3-2 引用类型（reference type）\n\n类  接口  数组\n\n### 3-3 类型转换\n\n类型从low———->high次序：\n\n```\n低 ------------------------------------> 高\nbyte,short,char—> int —> long—> float —> double\n```\n\n#### 3-3-1 自动类型转换\n\n自动类型转换：容量小的数据类型可以**自动**转换为容量大的数据类型。\n\n#### 3-3-2 强制类型转换\n\n强制类型转换，又被称为造型，用于显式的转换一个数值的类型.\n\n> 隐含强制转换\n\n- 可能的默认类型是int。\n- 小数默认是双精度浮点型double，在定义浮点类型时必须在数字下面跟上 F 或者 f。\n\n#### 3-3-3 常见的错误和问题\n\n- 操作比较大的数时，要留意是否溢出，尤其是整数操作时；\n- long类型使用大写L不要用小写。\n\n#### 3-3-4 拓展：JDK7扩展\n\n- JDK7新特性: 二进制整数\n  JDK7为我们直接提供了二进制整数的类型。\n  以0b开头即可。\n\n```\n//例如：int a = 0b0101：\n```\n\n- JDK7新特性：下划线分隔符\n\n```\n//例如：int b = 1_2345_6789;\n```\n\n根据特性，我们能够很容易地知道这是1亿2345万6789。\n\n- 注意点：\n  1.不能把布尔值进行转换 \n  2.不能把对象类型转换为不相干的类型 \n  3.在把高容量转换到低容量的时候，强制转换 \n  4.转换的时候可能存在内存溢出，或者精度问题！\n\n```java\n/**\n * Created by Q on 2022/1/6.\n */\npublic class Demo03 {\n    public static void main(String[] args) {\n\t\t//类型转换\n        int i = 128;\n        byte b = (byte)i; //内存溢出\n\t\t//自动类型转换  低-->高\n        System.out.println(i); //128\n        System.out.println(b); //-128\n\t\t//===================================================\n\n        System.out.println((int)23.7); //23  //精度问题\n        System.out.println((int)-45.89f); //-45  //精度问题\n        System.out.println(\"============================\");\n\t\t//===================================================\n\n        char c = 'a';\n        int d = c+1;\n        System.out.println(d); //98\n        System.out.println((char)d); //b\n\t\t//===================================================\n\n\t\t//操作比较大的数，注意溢出\n\t\t//JDK7新特性，数字之间可以用下划线分割\n        int money = 10_0000_0000;\n        System.out.println(money); //1000000000(10 亿） 不会输出下划线\n        int years = 20;\n        int total = money*years;\n        System.out.println(total); //-1474836480 ,计算时内存溢出\n        System.out.println(\"============================\");\n        long total2 = money*years; //-1474836480 默认是int，转换之前已经存在问题\n        long total3 = money*((long)years);//先将一个数转换为long\n        System.out.println(total2);   //-1474836480\n        System.out.println(total3);   //20000000000\n    }\n}\n```\n\n## 04、变量与常量\n\n### 4-1 变量\n\n![2291368-20221208094727144-1088422726](Java基础笔记/2291368-20221208094727144-1088422726.png)\n\n#### 4-1-1 变量作用域\n\n- 类变量\n- 实例变量\n- 局部变量\n\n#### 4-1-2 变量的命名规范\n\n- 所有的变量、方法、类名：见名知意\n- 类成员变量：首字母小写和驼峰原则（lastName）\n- 局部变量：首字母小写和驼峰原则（lastName）\n- 常量：大写字母和下划线（MAX_VALUE）\n- 类名：首字母大写和驼峰原则(HelloWorld)\n- 方法名：首字母小写和驼峰原则\n\n#### 4-1-3 注意点\n\n- 实例变量：从属于对象；可以理解为从属于一个类，如果不自行初始化，就会变成这个类型的默认值。\n- 所有的数值类型初始化，一般是0  0.0    u00000\n- 布尔值：默认是false\n- 除了基本类型，其余的默认值都是null \n- 局部变量是在方法里面的；必须声明和初始化值\n\n### 4-2 常量\n\n- 常量名一般使用大写字符\n- final 常量名 = 值;\n\n```java\n/**\n * Created by Q on 2022/1/6.\n */\npublic class Demo04 {\n    String name;     // 实例变量\n    int age;\n    //类变量  static（关键字）从属于类\n    static double salary = 2500;   //类变量\n\n    static final double PI = 3.14 ;  //常量\n    public static void main(String[] args) {\n        int a = 2;   //局部变量\n        Demo04 demo04 = new Demo04();\n\n        System.out.println(demo04.name);  //null\n        System.out.println(demo04.age);  //0\n        System.out.println(demo04.salary);  //2500.0\n        System.out.println(a*PI);  //6.28\n    }\n}\n```\n\n## 05、运算符\n\njava 语言支持如下运算符\n\n- 算数运算符 :+ ，-， *， /，%, ++ ，—\n- 赋值运算符: =\n- 关系运算符：>，<, >=,<=,==,!= instanceof\n- 逻辑运算符： &&，|| ，！\n- 位运算符：&，| ，^, ~ ，>>,<<,>>>\n- 条件运算符？：\n- 扩展赋值元芳：+=，-=，*=，/=\n\n尊重原创：（口诀）转自http://lasombra.iteye.com/blog/991662\n单目乘除位关系，逻辑三目后赋值。 \n\n单目：单目运算符+ –(负数) ++ -- 等 \n乘除：算数单目运算符* / % + - \n位：位移单目运算符<< >> \n关系：关系单目运算符> < >= <= == != \n逻辑：逻辑单目运算符&& || & | ^ \n三目：三目单目运算符A > B ? X : Y \n后：无意义，仅仅为了凑字数 \n赋值：赋值=\n\n> 扩展\n\n```java\npackage operator;\n\n/**\n * Created by Q on 2022/1/8.\n */\npublic class Demo05 {\n    public static void main(String[] args) {\n        //Math 运算工具类\n    \tSystem.out.println(Math.pow(2,3));  //8.0\n    \n        int c = 3;\n\t\t//短路运算\n        System.out.println(c>5&&c++>10);  //c++>10不执行\n        System.out.println(c);  //3\n        \n\t\t//位运算        \n        System.out.println(2<<3);   //左移三位   00010   ===>  10000\n        \n        //字符串连接符 +\n        System.out.println(a+b);\n        System.out.println(\"\"+a+b);  //1020  加号两侧出现字符串则转为String进行拼接\n        System.out.println(a+b+\"\");  //30\n    }\n}\n```\n\n## 06、包机制与JavaDoc\n\n### 6-1 包机制（package）\n\n一般利用公司的域名倒置作为包名\n\n```\npackage com.baidu.www;   \npackage com.Q.base;       //package pkg1[. pkg2[. pkg3……]]；\n```\n\n\n导入包\n\n```\nimport package.pkg1.pk.class.*；    //*表示通配符，导入该包全部内容\n```\n\n### 6-2 JavaDoc\n\n-  JavaDoc命令行实现步骤\n\n1. 首先打开cmd命令行窗口 ，切到需要生成文档的Java代码所在文件夹下。\n2. 输入JavaDoc命令行，生成HTML文件。`javadoc -encoding UTF-8 -charset UTF-8 Doc.java`\n\n![2291368-20220111153409714-1355163455](Java基础笔记/2291368-20220111153409714-1355163455.png)\n\n- IDEL编辑器文档生成步骤\n\n![2291368-20220111153243576-122447391](Java基础笔记/2291368-20220111153243576-122447391.png)\n\n![2291368-20220111153253987-2115695199](Java基础笔记/2291368-20220111153253987-2115695199.png)\n\n## 07、Scanner类\n\n通过Scanner 类的next() 和nextLine()方法可获取输入的字符串，读取前，一般使用hasNext() 与hasNextLine()判断是否还有输入。\n\n- next():\n  - 一定要读取到有效字符后才可以结束输入。\n  - 对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。\n  - 只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。\n  - next() 不能得到带有空格的字符串。\n\n- nextLine():\n  - 以Enter为结束符,也就是说nextLine()方法返回的是输入回车之前的所有字符。\n  - 可以获得空白。\n\n```java\npackage com.Q.scanner;\n\nimport java.util.Scanner;\n\n/**\n * Created by Q on 2022/1/9.\n */\npublic class Demo01 {\n    public static void main(String[] args) {\n\t\t//创建一个扫描器对象用于接收键盘输入的数据\n        Scanner scanner = new Scanner(System.in);\n        System.out.println(\"请输入数据：\");   //Hello World!\n        if (scanner.hasNext()){\n            String str = scanner.next();\n            System.out.println(\"输入的数据为：\"+str);    //Hello\n        }\n\t\t//String str = scanner.nextLine();\n\t\t//System.out.println(\"输入的数据为：\"+str);   //Hello World!\n\n\t\t//凡是I/O类使用完毕记得关闭以节约资源\n        scanner.close();\n    }\n}\n```\n\n> 扩展：求平均数\n\n```java\npackage com.Q.scanner;\n\nimport java.util.Scanner;\n\n/**\n * Created by Q on 2022/1/9.\n */\npublic class Demo03 {\n    public static void main(String[] args) {\n\t\t//算平均数\n        double sum = 0;\n        int count = 0;\n        System.out.println(\"请输入数据\");\n        Scanner scanner = new Scanner(System.in);\n\n        while (scanner.hasNextDouble()){  //输入非double类型即可结束\n            double d = scanner.nextDouble();\n            count++;\n            sum = sum +d;\n            System.out.println(\"当前输入的为第\"+count+\"个数据为：\"+d);\n        }\n        System.out.println(\"输入的\"+count+\"个数据的平均数为\"+(sum/count));\n        scanner.close();\n    }\n}\n```\n\n## 08、流程控制\n\n### 8-1顺序结构\n\n### 8-2选择结构 \n\n`if结构   switch结构`\n\nJDK7之后，switch语句中的变量类型可以是字符串  `比较的value值是  “name.hashCode()”`\n\n反编译 java----class(字节码文件)----反编译(IDEA)\n\n- class反编译后的代码\n\n```java\n//\n// Source code recreated from a .class file by IntelliJ IDEA\n// (powered by Fernflower decompiler)\n//\n\npackage com.Q.struct;\n\npublic class SwitchDemo01 {\n    public SwitchDemo01() {\n    }\n\n    public static void main(String[] args) {\n        char grade = 65;\n        String name = \"李\";\n        switch(grade) {\n        case 65:\n            System.out.println(\"成绩优秀\");\n            break;\n        case 66:\n            System.out.println(\"成绩良好\");\n            break;\n        case 67:\n            System.out.println(\"成绩及格\");\n            break;\n        case 68:\n            System.out.println(\"成绩不及格\");\n            break;\n        default:\n            System.out.println(\"输入不合法\");\n        }\n\n        byte var4 = -1;\n        switch(name.hashCode()) {\n        case 23376:\n            if(name.equals(\"子\")) {\n                var4 = 2;\n            }\n            break;\n        case 26408:\n            if(name.equals(\"木\")) {\n                var4 = 1;\n            }\n            break;\n        case 26446:\n            if(name.equals(\"李\")) {\n                var4 = 0;\n            }\n        }\n\n        switch(var4) {\n        case 0:\n            System.out.println(\"李\");\n            break;\n        case 1:\n            System.out.println(\"木\");\n            break;\n        case 2:\n            System.out.println(\"子\");\n            break;\n        default:\n            System.out.println(\"未查询到名字\");\n        }\n\n    }\n}\n```\n\n- java原代码\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/10.\n */\npublic class SwitchDemo01 {\n    public static void main(String[] args) {\n        char grade = 'A';\n        String name = \"李\";\n        switch (grade) {\n            case 'A':\n                System.out.println(\"成绩优秀\");\n                break;   //不加上case会出现穿透现象\n            case 'B':\n                System.out.println(\"成绩良好\");\n                break;   //不加上case会出现穿透现象\n            case 'C':\n                System.out.println(\"成绩及格\");\n                break;   //不加上case会出现穿透现象\n            case 'D':\n                System.out.println(\"成绩不及格\");\n                break;   //不加上case会出现穿透现象\n            default:\n                System.out.println(\"输入不合法\");\n        }\n        switch (name){\n            case \"李\":\n                System.out.println(\"李\");\n                break;\n            case \"木\":\n                System.out.println(\"木\");\n                break;\n            case \"子\":\n                System.out.println(\"子\");\n                break;\n            default:\n                System.out.println(\"未查询到名字\");\n        }\n    }\n}\n```\n\n### 8-3循环结构     \n\n`while循环    do while循环    for循环`\n\n> 小练习1 求0-100奇数和偶数和\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/10.\n */\npublic class ForDemo02 {\n    public static void main(String[] args) {\n        //求0-100奇数和偶数和\n        int oddSum = 0;\n        int evenSum = 0;\n        for (int i = 0; i <= 100; i++) {\n            if (i%2!=0){\n                oddSum = oddSum +i;\n            }else {\n                evenSum = evenSum +i;\n            }\n        }\n        System.out.println(\"奇数和：\"+oddSum);\n        System.out.println(\"偶数和：\"+evenSum);\n    }\n}\n\n```\n\n> 小练习2 输出1-1000能被5整除的整数，且每行输出三个\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/10.\n */\npublic class ForDemo03 {\n    public static void main(String[] args) {\n\t\t//输出1-1000能被5整除的整数，且每行输出三个\n        for (int i = 1; i <= 1000; i++) {\n            if (i%5==0){\n                System.out.print(i +\"\\t\");   //水平制表转义字符\n            }\n            if (i%(5*3)==0){    //注意if (i%5*3==0)错误, % 优先级与 * 同级，从左向右依次运算\n//                System.out.println();    //与print区别输出后换行，print输出后不换行\n                System.out.print(\"\\n\");   //换行转义字符\n            }\n        }\n    }\n}\n```\n\n> 小练习3 输出9*9乘法表\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class ForDemo04 {\n    public static void main(String[] args) {\n        //9*9乘法表\n        for (int i = 1; i <= 9; i++) {\n            for (int j = 1; j <= i; j++) {\n                System.out.print(i+\"*\"+j+\"=\"+i*j+\"\\t\");\n            }\n            System.out.println();\n        }\n    }\n}\n```\n> 小练习4 打印5*5正三角形\n\n```\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class TextDemo {\n    public static void main(String[] args) {\n        //打印5*5正三角形\n        for (int i = 1; i <= 5; i++) {\n            for (int j = 5; j >= i; j--) {\n                System.out.print(\" \");\n            }\n            for (int j = 1; j <= i; j++) {\n                System.out.print(\"*\");\n            }\n            for (int j = 2; j <= i; j++) {\n                System.out.print(\"*\");\n            }\n            System.out.println();\n        }\n    }\n}\n```\n\n\n> 增强for循环\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class ForDemo05 {\n    public static void main(String[] args) {\n        int[] numbers = {1,0,2,4};\n        for (int i = 0; i < 4; i++) {\n            System.out.println(numbers[i]);\n        }\n        System.out.println(\"===================\");\n\t\t//遍历数组或集合\n        for (int x:numbers){\n            System.out.println(x);\n        }\n    }\n}\n```\n\n### 8-4Break & Continue\n\n> break\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class BreakDemo {\n    public static void main(String[] args) {\n        int i=0;\n        while (i<100){\n            i++;\n            if (i==30)\n                break;  //终止循环\n            System.out.println(i);  //输出1-29\n        }\n\n    }\n}\n```\n\n> continue\n\n```java\npackage com.Q.struct;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class ContinueDemo {\n    public static void main(String[] args) {\n        int i=0;\n        while (i<30){\n            i++;\n            if (i%10==0){\n                System.out.println();\n                continue;  //结束本次循环，继续执行下一次循环\n            }\n            System.out.print(i);\n        }\n    }\n}\n```\n\n> 对比         return结束方法\n\n## 09、方法\n\n1定义\n\n2调用\n\n3重载---在一个类中，相同的函数名，参数不同\n\n4命令行传参\n\n```java\npackage com.Q.method;\n\n/**\n * Created by Q on 2022/1/11.\n */\npublic class Demo03 {\n    public static void main(String[] args) {\n        for (int i = 0; i < args.length; i++) {\n            System.out.println(args[i]);\n        }\n    }\n}\n```\n\n```\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method>javac Demo03.java\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method>java Demo03\n错误: 找不到或无法加载主类 Demo03\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method>cd ../        //切换到src目录下\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q>cd ../\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com>cd ../\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src>java com.Q.method.Demo03    //记得加包名\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src>java com.Q.method.Demo03 this is Q    //传参\nthis\nis\nQ\n\nE:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src>\n```\n\n5可变参数\n\n6递归\n\n> 小练习 计算器  \n\n **待完善**\n\n **待完善**\n\n## 10、数组\n\n1. 声明，创建\n2. 三种初始化以及内存分析\n3. 越界\n4. 使用\n5. 二维数组\n6. Arrays类\n\n> 扩展1 稀疏数组\n\n```java\npackage com.Q.array;\n\nimport java.util.Arrays;\n\n/**\n * Created by Q on 2022/1/14.\n */\npublic class Demo08 {\n    public static void main(String[] args) {\n//        0\t0\t0\t0\t0\n//        0\t0\t0\t0\t0\n//        0\t1\t2\t0\t0\n//        0\t0\t0\t0\t0\n//        0\t0\t0\t0\t0\n        int[][] arrays = new int[5][5];\n        arrays[2][1] = 1;\n        arrays[2][2] = 2;\n        System.out.println(\"输出原数组\");\n        for (int[] arg : arrays) {\n            for (int a : arg) {\n                System.out.print(a+\"\\t\");\n            }\n            System.out.println();\n        }\n        System.out.println(\"====================\");\n//        获取有效值个数\n        int sum = 0;\n        for (int i = 0; i < 5; i++) {\n            for (int j = 0; j < 5; j++) {\n                if (arrays[i][j]!=0) sum++;\n            }\n        }\n        System.out.println(\"有效值个数：\"+sum);   // 有效值个数：2\n//        构建稀疏数组\n        int[][] arrays2 = new int[sum+1][3];\n        arrays2[0][0] = 5;\n        arrays2[0][1] = 5;\n        arrays2[0][2] = 2;\n        int count = 0;\n        for (int i = 0; i < arrays.length; i++) {\n            for (int j = 0; j < arrays[i].length; j++) {\n                if (arrays[i][j]!=0){\n                    count ++;\n                    arrays2[count][0] = i;\n                    arrays2[count][1] = j;\n                    arrays2[count][2] = arrays[i][j];\n                }\n            }\n        }\n//遍历输出稀疏数组\n//        5\t5\t2\n//        2\t1\t1\n//        2\t2\t2\n        System.out.println(\"输出稀疏数组：\");\n        for (int i = 0; i < arrays2.length; i++) {\n            for (int j = 0; j < arrays2[i].length; j++) {\n                System.out.print(arrays2[i][j]+\"\\t\");\n            }\n            System.out.println();\n        }\n        System.out.println(\"======================\");\n//        还原数组\n        int[][] array3 = new int[arrays2[0][0]][arrays2[0][1]];\n        for (int i = 1; i < arrays2.length; i++) {\n            array3[arrays2[i][0]][arrays2[i][1]] =arrays2[i][2];\n        }\n        System.out.println(\"输出还原数组\");\n        for (int[] arg : array3) {\n            for (int a : arg) {\n                System.out.print(a+\"\\t\");\n            }\n            System.out.println();\n        }\n\n    }\n}\n```\n\n> 扩展2  冒泡排序\n\n```java\npackage com.Q.array;\n\nimport java.util.Arrays;\n\n/**\n * Created by Q on 2022/1/14.\n */\npublic class Demo07 {\n    public static void main(String[] args) {\n        int[] arr = {2,1,9,4,5,6,3,5,5,5};\n        int[] result = sort(arr);\n        System.out.println(Arrays.toString(result));\n    }\n//    冒泡排序\n    public static int[] sort(int[] array){\n//        优化\n        boolean flag = false;\n        int temp;\n        //外层循环表示比较的趟数\n        for (int i = 0; i < array.length-1; i++) {\n            for (int j = 0; j < array.length-i-1; j++) {\n                //注意是j表示比较相邻两数的下标\n                if (array[j]>array[j+1]){\n                    temp = array[j];\n                    array[j] = array[j+1];\n                    array[j+1] = temp;\n                    flag = true;  //进行了交换，标志改变\n                }\n            }\n//            优化方法一\n            if (!flag){\n                break;  //终止循环\n            }\n        }\n//        优化方法二\n//        if (!flag){  //某趟没有进行一次交换，直接不用继续比较\n//            return array;\n//        }\n        return array;\n    }\n}\n```\n\n# Java面向对象\n\n> 面向对象（Object-Oriented Programming）编程本质：\n\n以类的方式组织代码，以对象的方式封装数据\n\n> 三大特性\n\n封装\n\n继承\n\n多态\n\n## 01、类与对象的创建\n\n```JAVA\npackage com.oop.Demo01;\n\n/**\n * Created by Q on 2022/1/15.\n */\npublic class Demo01 {\n    public static void main(String[] args) {\n//        Student.say();   静态方法可直接调用\n\n//        非静态方法要先实例化\n        Student student = new Student();\n        student.say();\n    }\n    //静态方法和类一起加载\n    public static void a(){\n//        b();\n    }\n    //非静态方法是在类实例化后才存在的，故不能有静态方法调用\n    public void b(){\n    }\n}\n```\n\n值传递\n\n```java\npackage com.oop.Demo01;\n\n/**\n * Created by Q on 2022/1/16.\n */\npublic class Demo02 {\n    public static void main(String[] args) {\n        //值传递\n        int a = 10;\n        System.out.println(a);  //10\n        Demo02 demo02 = new Demo02();\n        demo02.change(a);\n        System.out.println(a);  //10\n    }\n    public static void change(int a){\n        a = 1;\n    }\n}\n```\n\n## 02、构造器\n\n又叫构造方法\n\n```java\npackage com.oop.Demo02;\n\n/**\n * Created by Q on 2022/1/18.\n */\npublic class Person {\n    //一个类即使什么都不写，也存在一个方法 public Person() {} java--->class文件\n    //显示的定义构造器\n    String name;  //null\n    int age;\n    //作用：实例化初始值\n    //使用new关键字必须有构造器，因为本质是在调用构造器\n    public Person() {\n    }\n\n    //有参构造\n    //使用有参构造，必须显式定义无参构造否则报错\n    // Person(String)in Person cannot be applied to()\n    //快捷键 alt+insert\n    public Person(String name) {\n        this.name = name;\n    }\n\n    public Person(String name, int age) {\n        this.name = name;\n        this.age = age;\n    }\n/**\n\t public static void main(String[] args) {\n \t\tPerson person = new Person(\"Q\",10);\n \t\tSystem.out.println(person.name);\n \t\tSystem.out.println(person.age);\n \t}\n */\n}\n```\n\n> 构造器：\n\n- 和类名相同      \n\n- 没有返回值\n\n- 作用：\n\n  1、实例化初始值\n\n  2、使用new关键字本质是在调用构造器\n\n- 注意点：\n\n​        1、使用有参构造，必须显式定义无参构造，否则报错\n\n​\t\t2、快捷键 alt+insert\n\n> 扩展  创建对象内存分析\n\n **待完善**\n\n **待完善**\n\n## 03、封装\n\n将类中属性（+少方法）私有化\n\n```java\npackage com.oop.Demo03;\n\n/**\n * Created by Q on 2022/1/20.\n */\npublic class Student {\n    //封装\n    //属性私有\n    private String name;\n    private int age;\n    \n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public int getAge() {\n        return age;\n    }\n\n    public void setAge(int age) {\n        if (age > 0 && age < 120){\n            this.age = age;\n        }else {\n            this.age = -1;\n        }\n    }\n}\n```\n\n## 04、继承\n\n对象抽象出类     对象抽象----->类   \n\n子类抽象出父类    子类抽象------>父类       子类继承父类\n\n### 4-1 Object类\n\n### 4-2 super  this\n\n```java\npackage com.oop.Demo04;\n\n/**\n * Created by Q on 2022/1/20.\n */\n//父类\n//java中，所有类直接或者间接继承Object类\npublic class Person {\n    //私有属性不可继承\n    private int money = 1_0000_0000;\n    protected String name = \"Person_Q\";\n\n    public Person() {\n        System.out.println(\"父类无参构造\");\n    }\n\n    public void print(){\n        System.out.println(\"Person\");\n    }\n\n    public void say(){\n        System.out.println(\"说话了\");\n    }\n    //get set\n    public int getMoney() {\n        return money;\n    }\n\n    public void setMoney(int money) {\n        this.money = money;\n    }\n}\n```\n\n```java\npackage com.oop.Demo04;\n\n/**\n * Created by Q on 2022/1/20.\n */\n//子类（继承类）  ctrl+H：查看类继承结构\n//继承父类所有方法\npublic class Student extends Person {\n    private String name = \"Student_Q\";\n\n    public Student() {\n        //隐藏代码：默认调用父类无参构造\n        super();  //只能放在子类构造器第一行\n        System.out.println(\"子类无参构造\");\n    }\n    public void print(){\n        System.out.println(\"Student\");\n    }\n    public void test1(){\n        print();  //Student\n        this.print();  //Student\n        super.print();  //Person\n    }\n\n    public void test(String name){\n        System.out.println(name);  //test_Q\n        System.out.println(this.name);  //Student_Q\n        System.out.println(super.name);  //Person_Q\n    }\n}\n\n/**\n public static void main(String[] args) {\n com.oop.Demo04.Student s1 = new com.oop.Demo04.Student();\n s1.say();\n s1.test(\"test_Q\");\n }\n */\n```\n\n> super注意点：\n\n​        1、super调用父类构造方法，必须是在构造器方法的第一个\n​        2、super只能出现在子类或者构造方法中\n​        3、super和this不能同时调用构造方法！\n\n> VS this\n\n​        代表的对象不同：\n​            this：本身调用者这个对象\n​            super：代表父类对象的引用\n​        前提不同：\n​            this：没有继承也可以使用\n​            super：只能在继承的条件下才可以使用\n​        构造方法：\n​            this：本类的构造\n​            super：父类的构造\n\n### 4-3 方法重写\n\n重写是方法的重写和属性无关\n\n```java\n//不是重写\npublic class A {\n    public static void test(){\n        System.out.println(\"A==>test\");\n    }\n}\n\npublic class B extends A{\n    public static void test() {\n        System.out.println(\"B==>test\");\n    }\n}\n\npublic class Application {\n    public static void main(String[] args) {\n    \t//父类的引用指向子类\n        A a = new B();\n        a.test();  //A==>test\n        \n        B b = new B();\n        b.test();  //B==>test\n    }\n}\n```\n\n```java\n//重写\npublic class A {\n    public void test(){\n        System.out.println(\"A==>test\");\n    }\n}\n\npublic class B extends A{\n    //注解\n    @Override  //重写\n    public void test() {\n        System.out.println(\"B==>test\");\n    }\n}\n\n\npublic class Application {\n    public static void main(String[] args) {\n        A a = new B();\n        B b = new B();\n        a.test();  //B==>test\n        b.test();  //B==>test\n    }\n}\n```\n\n> 重写小结：要是非静态方法\n\n1. 需要有继承关系，子类重写父类的方法！\n\n2. 方法名必须相同，参数列表必须相同\n\n3. 修饰符：\n\n   范围可以扩大：public > Protected > Default > private\n\n4. 抛出的异常：\n\n   范围可以被缩小，但不能扩大；\n\n   ClassNotFountException —> Exception(大)\n\n5. 重写，子类的方法和父类必须要一致，方法体不同！\n\n> 为什么需要重写？\n\n父类的功能，子类不一定需要，或者不一定满足！\n\n##05、多态\n\n多态存在的必要条件：\n\n- 继承\n- 重写 (子类重写父类方法,方法名必须相同)\n- 父类引用指向子类对象：Parent p = new Child();\n\n## 06、instanceof关键字\n\n> X instanceof Y               X是否是Y的实例\n\n```java \npackage com.oop;\nimport com.oop.demo06.Person;\nimport com.oop.demo06.Student;\nimport com.oop.demo06.Teacher;\npublic class Application {\n    public static void main(String[] args) {\n        //Object > String\n        //Object > Person > Teacher\n        //Object > Person > Student\n        Object object = new Student();\n        //System.out.println(X instanceof Y);//能不能编译通过，就取决于X和Y之间是否存在父子关系；\n        //结果是true或者false ，X所指向的实例类型是Y的子类型，或者 X和 Y是有关系的\n        System.out.println(object instanceof Student);//true\n        System.out.println(object instanceof Person);//true\n        System.out.println(object instanceof Object);//true\n        System.out.println(object instanceof Teacher);//false\n        System.out.println(object instanceof String);//false，String是 Object lang包下面的，更没关系了\n        System.out.println(\"===================================\");\n        Person person = new Student();\n        System.out.println(person instanceof Student);//true\n        System.out.println(person instanceof Person);//true\n        System.out.println(person instanceof Object);//true\n        System.out.println(person instanceof Teacher);//false\n        //System.out.println(person instanceof String);//编译报错！string和 person同级，它是两条线\n        System.out.println(\"===================================\");\n        Student student = new Student();\n        System.out.println(student instanceof Student);//true\n        System.out.println(student instanceof Person);//true\n        System.out.println(student instanceof Object);//true\n        //System.out.println(student instanceof Teacher);//false，编译报错！\n                // instanceof是一个比较转换的过程，比较肯定是两边有关系的才会返回true或者false\n        //System.out.println(student instanceof String);//false，编译报错！ 两者没关系会直接报错\n    } \n}\n```\n\n> 多态总结：\n\n        1. 父类引用指向子类的对象（子类引用指向父类的对象肯定是不行的）\n        2. 把子类转换为父类，也就是向上转型：不用强制转换；\n        3. 把子类转换为父类，也就是向下转型：需要强制转换；（可能会丢失一些方法）\n        4. 方便方法的调用，减少重复的代码！简洁\n\n## 07 、static关键字小结\n\n静态属性\n\n```java\n//static\npublic class Student {\n    private static int age;//静态的变量  多线程！\n    private double score;//非静态的变量\n    public static void main(String[] args) {\n        Student s1 = new Student();\n        System.out.println(Student.age);//类变量跟类中的所有实例共享\n        //System.out.println(Student.score);这是不行的\n        System.out.println(s1.age);\n        System.out.println(s1.score);\n    }\n}\n```\n\n静态方法\n\n```java\n//static\npublic class Student {\n    private static int age;//静态的变量  多线程！\n    private double score;//非静态的变量\n    public void run(){//非静态方法可以调用静态方法里的所有东西\n        go();\n    }\n    public static void go(){//静态方法可以调用静态方法里的所有东西\n    }\n    public static void main(String[] args) {\n        new Student().run();//对象.方法45\n        Student.go();\n        go();\n    }\n}\n```\n\n静态代码块\n\n```java\npublic class Person {\n    //2：赋初值~\n    {\n        //代码块（匿名代码块）\n        //没有名字，程序不会主动调用这些模块\n        //匿名代码块：创建对象时就自动创建了，而且在构造器之前\n        System.out.println(\"匿名代码块\");\n    }\n    //1 ： 只执行一次~\n    static {\n        //静态代码块\n        //可以在里面加载一些初始化的数据\n        //静态代码块：类一加载就直接执行，永久只执行一次\n        System.out.println(\"静态代码块\");\n    }\n    //3\n    public Person(){\n        System.out.println(\"构造方法\");\n    }\n    public static void main(String[] args) {\n        Person person1 = new Person();\n        System.out.println(\"=================\");\n        Person person2 = new Person();\n    }\n    /*\n        结果：\n            静态代码块\n            匿名代码块\n            构造方法\n            =================\n            匿名代码块\n            构造方法\n     */\n}\n```\n\npackage的一些新特性\n\n```java\n//静态导入包~\nimport static java.lang.Math.random;\nimport static java.lang.Math.PI;\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(random());\n        System.out.println(PI);\n    }\n    /*\n    final 通过final修饰的类不能被继承，就没有子类\n     */\n}\n```\n\n## 08、抽象类（abstract)\n\n- 抽象类特点\n  1. 抽象类和抽象方法都需要被abstract修饰。抽象方法一定要定义在抽象类中\n  2. 抽象类不可以直接创建对象，原因：调用抽象方法没有意义\n  3. 只有覆盖了抽象类中所有的抽象方法后，其子类才可以创建对象，否则该子类还是一个抽象类\n\n- abstract不能和哪些关键字共存?\n  1. private 被私有的成员只能在本类中调用，而abstract强制重写抽象方法，二者冲突\n  2. final final表示最终的，被修饰的类和方法不能被继承和重写，与abstract强制重写抽象方法冲突\n  3. static 无意义\n\n```java\n//abstract修饰的类为抽象类,java的类是单继承（接口可以多继承）\npublic abstract class Action {\n    //抽象方法，可以实现约束作用，让继承的子类来实现方法。\n    //abstract,抽象方法，只有方法名字，没有方法的实现！\n    public abstract void doSomething();\n    //抽象类不能new出对象，只能用子类去实现。\n    //抽象类里可以写普通方法\n    //抽象方法必须在抽象类中\n    //抽象的抽象：约束\n    //存在的意义，提高开发效率。\n}\n\npublic class A extends Action{\n    @Override\n    public void doSomething() {\n    }\n}\n```\n\n## 09、接口\n\n- **接口的成员特点**\n\n  - 成员变量：只能是常量，并且是静态的，默认有public static final修饰\n  - 成员方法：只能是抽象方法，默认有public abstract修饰\n  - 构造方法：接口没有构造方法\n\n  ```java\n  package com.oop.Demo06;\n  \n  /**\n   * Created by Q on 2022/1/23.\n   */\n  //接口\n  public interface UserService {\n      void add(String name);\n      void delete(String name);\n      void update(String name);\n      void query(String name);\n  }\n  //接口实现类\n  public class UserServiceImpl implements UserService {\n      @Override\n      public void add(String name) {\n  \n      }\n  \n      @Override\n      public void delete(String name) {\n  \n      }\n  \n      @Override\n      public void update(String name) {\n  \n      }\n  \n      @Override\n      public void query(String name) {\n  \n      }\n  }\n  ```\n\n## 10、内部类\n\n1. 成员内部类\n2. 静态内部类（static 修饰）\n3. 局部内部类\n4. 匿名内部类\n\n```java\npackage com.oop.Demo07;\n\n/**\n * Created by Q on 2022/1/23.\n */\npublic class Outer {\n    private String name;\n    public void out(){\n        System.out.println(\"外部类\");\n    }\n    public class Inner{\n        public void in(){\n            System.out.println(\"内部类\");\n        }\n        //作用：获得内部类的私有属性\n        public void getName(){\n            System.out.println(name);\n        }\n    }\n}\n\n/*\n    public static void main(String[] args) {\n        Outer outer = new Outer();\n        outer.out();  //外部类\n        Outer.Inner in = outer.new Inner();\n        in.in();  //内部类\n        in.getName();  //Q\n    }\n */\n```\n\n>小疑惑  UserService userservice = new UserService()\n\n```java\n//一个Java类中可以有多个class类，但是只能有一个public class\npublic class Outer {\n    public static void main(String[] args) {\n        new Apple().eat();\n        //匿名内部类\n        UserService userservice = new UserService(){\n            @Override\n            public void Hello() {\n            }\n        };\n    }\n}\n//局部内部类\nclass Apple{\n    public void eat(){\n        System.out.println(\"1\");\n    }\n}\ninterface UserService{\n    void Hello();\n}\n```\n\n\n\n## 11、类、接口、抽象类小结\n\n> 类与类,类与接口,接口与接口的关系\n\n- 类与类：继承关系,只能单继承,可以多层继承\n- 类与接口：实现关系,可以单实现,也可以多实现。并且可以在继承一个类的同时实现多个接口\n- 接口与接口：继承关系,可以单继承,也可以多继承\n\n> 抽象类和接口的区别\n\n- 成员区别\n\n  抽象类：\n\n  成员变量：可以是变量，也可以是常量\n\n  成员方法：可以是抽象类，也可以非抽象类\n\n  构造方法：有\n\n  接口：\n\n  成员变量：只能是常量\n\n  成员方法：只能是抽象类\n\n  构造方法：无\n\n- 关系区别\n\n  抽象方法：\n\n  类与类：继承，单继承\n  类与接口：实现，单实现，多实现\n  接口与接口：继承，单继承，多继承\n\n- 设计理念区别\n\n  抽象类：体现的是“is a ”的关系，抽象类中定义的是该继承体系的共性功能\n\n  接口：体现的是“like a ”的关系，接口中定义的是该继承体系的个性功能（扩展功能）\n\n## 12、异常\n\nError和Exception\n\n> Exception\n\n### 12-1 异常层次结构图示\n\n（引用菜鸟教程）\n\n![2291368-20220123223242579-694787793](Java基础笔记/2291368-20220123223242579-694787793.png)\n\n### 12-2 关键字\n\n1. try\n2. catch\n3. finally\n4. throw\n5. throws\n\n```java\npackage com.exception;\n\n/**\n * Created by Q on 2022/1/23.\n */\npublic class Test {\n    public static void main(String[] args) {\n        int a = 1;\n        int b = 0;\n        //Ctrl+Alt+t  快捷键：捕获结构代码\n        try{//监控区\n            System.out.println(a/b);   //Exception in thread \"main\" java.lang.ArithmeticException: / by zero\n        }catch (ArithmeticException e){  //捕获\n            System.out.println(e);\n        }catch (Error error){\n            System.out.println(\"Error\");\n        }catch (Exception exception){\n            System.out.println(\"Exception\");\n        }catch (Throwable throwable){\n            System.out.println(\"Throwable\");\n        }finally {  //善后处理   finally可以不用，用于处理IO流等关闭资源\n            System.out.println(\"其他异常\");\n        }\n    }\n}\n/*\n输出结果：\njava.lang.ArithmeticException: / by zero\n其他异常\n */\n```\n\n### 12-3 自定义异常\n\n```java\npackage com.exception.Demo02;\n\n/**\n * Created by Q on 2022/1/23.\n */\npublic class MyException extends Exception{\n    private int detail;\n    //参数大于10抛异常\n    public MyException(int detail) {\n        this.detail = detail;\n    }\n\n    @Override\n    public String toString() {\n        return \"MyException{\" + \"detail='\" + detail + '\\'' + '}';\n    }\n}\n```\n\n```java\n//测试\npublic class Test {\n    //可能出现异常的方法\n    static void test(int a) throws MyException{\n        System.out.println(\"参数：\"+a);\n        if (a > 10){\n            throw new MyException(a);\n        }\n        System.out.println(\"OK\");\n    }\n    public static void main(String[] args) {\n        try {\n            test(14);\n        } catch (MyException e) {\n            System.out.println(e);\n\n        }\n    }\n}\n/*\n参数：14\nMyException{detail='14'}\n */\n```\n\n# 后记（有感）\n\n从2022年1月1号准备开始学习，至今23号，经过23天（实际最多只需要一周就可以搞定，打脸自己flag）断断续续的学习，课程是B站狂神说Java的JavaSE课程，记录了这么一份笔记，希望可以用来以后回顾。能感觉出来这是一份速学课程，相对而言少了很多知识点，适合急找工作速成。后续再找点资料补充完善java体系。\n\n> 补充待续","slug":"Java基础笔记","published":1,"updated":"2022-12-08T02:14:36.940Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftn0015sw6x4hqg8u7f","content":"<h1 id=\"Java基础语法\"><a href=\"#Java基础语法\" class=\"headerlink\" title=\"Java基础语法\"></a>Java基础语法</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><h3 id=\"JDK-JRE-JVM\"><a href=\"#JDK-JRE-JVM\" class=\"headerlink\" title=\"JDK JRE JVM\"></a>JDK JRE JVM</h3><ul>\n<li>JDK: java development kit java 环境</li>\n<li>JRE: java Runtime Environment java 运行时环境</li>\n<li>JVM: java virtual Machine java 虚拟机</li>\n</ul>\n<h3 id=\"Java-运行机制\"><a href=\"#Java-运行机制\" class=\"headerlink\" title=\"Java 运行机制\"></a>Java 运行机制</h3><ul>\n<li>编译型<ul>\n<li>所有的Java代码都是要编译的，.java不经过编译就什么用都没有。</li>\n</ul>\n</li>\n<li>解释型<ul>\n<li>java代码编译后不能直接运行，它是解释运行在JVM上的，所以它是解释运行的，那也就算是解释的了。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"HelloWorld\"><a href=\"#HelloWorld\" class=\"headerlink\" title=\"HelloWorld\"></a>HelloWorld</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">$firstname</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;L&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">_lastname</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Q&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>+ <span class=\"string\">&quot; &quot;</span>+ $firstname + _lastname + <span class=\"string\">&quot; &quot;</span>+ age );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>可能遇到的问题</p>\n</blockquote>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111152826346-1412372719.png\" class=\"\" title=\"2291368-20220111152826346-1412372719\">\n\n<h2 id=\"01、注释\"><a href=\"#01、注释\" class=\"headerlink\" title=\"01、注释\"></a>01、注释</h2><ol>\n<li>单行注释(idea快捷键ctrl+/)</li>\n<li>多行注释(idea快捷键ctrl+shift+/)</li>\n<li>文档注释</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2021/4/17.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//单行注释输出hello world</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*多行注释</span></span><br><span class=\"line\"><span class=\"comment\">多行注释*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Q</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@decription</span> JavaDoc文档注释</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"02、标识符与关键字\"><a href=\"#02、标识符与关键字\" class=\"headerlink\" title=\"02、标识符与关键字\"></a>02、标识符与关键字</h2><h3 id=\"2-1-标识符\"><a href=\"#2-1-标识符\" class=\"headerlink\" title=\"2-1 标识符\"></a>2-1 标识符</h3><p>Java 中标识符是为方法、变量或其他用户定义项所定义的名称。标识符可以有一个或多个字符。在 Java 语言中，标识符的构成规则如下。</p>\n<blockquote>\n<p>标识符由数字（0<del>9）和字母（A</del>Z 和 a~z）、美元符号（$）、下划线（_）以及 Unicode 字符集中符号大于 0xC0 的所有符号组合构成（各符号之间没有空格）。</p>\n<p>标识符的第一个符号为字母、下划线和美元符号，后面可以是任何字母、数字、美元符号或下划线。</p>\n</blockquote>\n<p>另外，Java 区分大小写，因此 name 和 Name 是两个不同的标识符。</p>\n<p>注意：标识符命名时，切记不能以数字开头，也不能使用任何 Java 关键字作为标识符，而且不能赋予标识符任何标准的方法名。</p>\n<p>标识符分为两类，分别为关键字和用户自定义标识符。</p>\n<blockquote>\n<p>关键字是有特殊含义的标识符，如 true、false 表示逻辑的真假。</p>\n<p>用户自定义标识符是由用户按标识符构成规则生成的非保留字的标识符，如 abc 就是一个标识符。注意：使用标识符时一定要注意，或者使用关键字，或者使用自定义的非关键字标识符。此外，标识符可以包含关键字，但不能与关键字重名。</p>\n</blockquote>\n<p>合法与不合法标识符示例。</p>\n<pre><code>合法标识符：date、$2021、_date、D_$date 等。\n\n不合法的标识符：1111.com、1com、for、if 等。\n</code></pre>\n<p>标识符用来命名常量、变量、类和类的对象等。因此，在我们命名标识符时，应赋予它一个有意义或有用途的名字。</p>\n<h3 id=\"2-2-关键字\"><a href=\"#2-2-关键字\" class=\"headerlink\" title=\"2-2 关键字\"></a>2-2 关键字</h3><p>关键字（或者保留字）是对编译器有特殊意义的固定单词，不能在程序中做其他目的使用。关键字具有专门的意义和用途，和自定义的标识符不同，不能当作一般的标识符来使用。</p>\n<p>Java 的关键字对 Java 编译器有特殊的意义，它们用来表示一种数据类型，或者表示程序的结构等。</p>\n<p>保留字是为 Java 预留的关键字，它们虽然现在没有作为关键字，但在以后的升级版本中有可能作为关键字。</p>\n<p>Java 语言目前定义了 51 个关键字，这些关键字不能作为变量名、类名和方法名来使用。以下对这些关键字进行了分类。</p>\n<blockquote>\n<p>数据类型：boolean、int、long、short、byte、float、double、char、class、interface。</p>\n<p>流程控制：if、else、do、while、for、switch、case、default、break、continue、return、try、catch、finally。</p>\n<p>修饰符：public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native。</p>\n<p>动作：package、import、throw、throws、extends、implements、this、supper、instanceof、new。</p>\n<p>保留字：true、false、null、goto、const。</p>\n</blockquote>\n<p>注意：由于 Java 区分大小写，因此 public 是关键字，而 Public 则不是关键字。但是为了程序的清晰及可读性，要尽量避免使用关键字的其他形式来命名。</p>\n<h2 id=\"03、数据类型\"><a href=\"#03、数据类型\" class=\"headerlink\" title=\"03、数据类型\"></a>03、数据类型</h2><ul>\n<li>强类型语言：Java  c++ (先定义后使用)</li>\n<li>弱类型语言：javascript python</li>\n</ul>\n<p>java数据类型</p>\n<h3 id=\"3-1-基本类型（primitive-type）\"><a href=\"#3-1-基本类型（primitive-type）\" class=\"headerlink\" title=\"3-1 基本类型（primitive type）\"></a>3-1 基本类型（primitive type）</h3><p>数值类型+布尔类型</p>\n<ul>\n<li>整数 ：int   byte   short   long</li>\n<li>小数：float   double</li>\n<li>字符：char</li>\n<li>布尔型：true  false</li>\n</ul>\n<p><code>字符串String是类不是关键字</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2021/4/18.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//八大基本类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//整数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> <span class=\"number\">1000000</span>; <span class=\"comment\">//最常用  4字节</span></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> <span class=\"number\">111</span>; <span class=\"comment\">//-128--127 1字节</span></span><br><span class=\"line\">        <span class=\"type\">short</span> <span class=\"variable\">num3</span> <span class=\"operator\">=</span> <span class=\"number\">11111</span>;  <span class=\"comment\">//2字节</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">num4</span> <span class=\"operator\">=</span> <span class=\"number\">1111111L</span>; <span class=\"comment\">//long类型要在数字后加L 8字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//小数：浮点数</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">num5</span> <span class=\"operator\">=</span> <span class=\"number\">1.111F</span>; <span class=\"comment\">//float类型要在数字后加F 4字节</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">num6</span> <span class=\"operator\">=</span> <span class=\"number\">3.14159265358979</span>; <span class=\"comment\">//8字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//字符</span></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">aaa</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>; <span class=\"comment\">//注意单引号不是双引号，2个字节</span></span><br><span class=\"line\">        <span class=\"comment\">//String name = &quot;李四&quot;;</span></span><br><span class=\"line\">        <span class=\"comment\">//字符串String是类不是关键字</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//布尔型：是非</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>; <span class=\"comment\">//1位</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(flag);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>扩展</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/5.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//整数拓展 进制  二进制（0b开头）  十进制   八进制（0开头）  十六进制（0x开头）</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> <span class=\"number\">0b10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i2</span> <span class=\"operator\">=</span> <span class=\"number\">010</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i3</span> <span class=\"operator\">=</span> <span class=\"number\">0x10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(i1);</span><br><span class=\"line\">        System.out.println(i2);</span><br><span class=\"line\">        System.out.println(i3);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===========================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//==================================================</span></span><br><span class=\"line\">        <span class=\"comment\">//浮点数拓展    银行业务表示（钱的计算）</span></span><br><span class=\"line\">        <span class=\"comment\">//BigDecimal   数学工具类（如果需要计算，而且不能让它有误差就使用这个类）</span></span><br><span class=\"line\">        <span class=\"comment\">//最好完全避免使用浮点数进行比较</span></span><br><span class=\"line\">        <span class=\"comment\">//==================================================</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">1.1f</span>;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">1.1d</span>;</span><br><span class=\"line\">        System.out.println(d == f);    <span class=\"comment\">//false</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">f1</span> <span class=\"operator\">=</span> <span class=\"number\">12544524154441f</span>;</span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">f2</span> <span class=\"operator\">=</span> f1 + <span class=\"number\">1</span>;</span><br><span class=\"line\">        System.out.println(f1 == f2);       <span class=\"comment\">//true(精度丢失)</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===========================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 字符扩展</span></span><br><span class=\"line\">        <span class=\"type\">char</span> c1=<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"type\">char</span> c2=<span class=\"string\">&#x27;中&#x27;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//我们通过单引号来表示字符常量</span></span><br><span class=\"line\">        System.out.println(c1);</span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)c1);</span><br><span class=\"line\">        System.out.println(c2);</span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)c2);</span><br><span class=\"line\">        <span class=\"comment\">//强制转换可以把字符转换成数字，所有的字符本质还是数字</span></span><br><span class=\"line\">        <span class=\"comment\">// Unicode 编码表：97=a 65=A  （本质上还是数字）</span></span><br><span class=\"line\">        <span class=\"comment\">// 2字节    65536字符  Excel最长有2的16次方=65536</span></span><br><span class=\"line\">        <span class=\"comment\">//U0000   UFFFF</span></span><br><span class=\"line\">        <span class=\"type\">char</span> c3=<span class=\"string\">&#x27;\\u0061&#x27;</span>;</span><br><span class=\"line\">        System.out.println(c3);<span class=\"comment\">//a</span></span><br><span class=\"line\">        <span class=\"comment\">//转义字符（转义字符它有特殊的意思）</span></span><br><span class=\"line\">        <span class=\"comment\">// \\t    制表符</span></span><br><span class=\"line\">        <span class=\"comment\">// \\n    换行</span></span><br><span class=\"line\">        <span class=\"comment\">//  转义字符有非常的多，可以自己去查询一下</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello\\tWorld&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello\\nWorld&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===============================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sa</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">        String sb=<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">        System.out.println(sa==sb);    <span class=\"comment\">//false    两个对象是不同的</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Hello World&quot;</span>;</span><br><span class=\"line\">        String sd=<span class=\"string\">&quot;Hello World&quot;</span>;</span><br><span class=\"line\">        System.out.println(sc==sd);    <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//布尔值扩展</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> flag=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag==<span class=\"literal\">true</span>)&#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag)&#123;&#125;  <span class=\"comment\">//省略</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-引用类型（reference-type）\"><a href=\"#3-2-引用类型（reference-type）\" class=\"headerlink\" title=\"3-2 引用类型（reference type）\"></a>3-2 引用类型（reference type）</h3><p>类  接口  数组</p>\n<h3 id=\"3-3-类型转换\"><a href=\"#3-3-类型转换\" class=\"headerlink\" title=\"3-3 类型转换\"></a>3-3 类型转换</h3><p>类型从low———-&gt;high次序：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">低 ------------------------------------&gt; 高</span><br><span class=\"line\">byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-1-自动类型转换\"><a href=\"#3-3-1-自动类型转换\" class=\"headerlink\" title=\"3-3-1 自动类型转换\"></a>3-3-1 自动类型转换</h4><p>自动类型转换：容量小的数据类型可以<strong>自动</strong>转换为容量大的数据类型。</p>\n<h4 id=\"3-3-2-强制类型转换\"><a href=\"#3-3-2-强制类型转换\" class=\"headerlink\" title=\"3-3-2 强制类型转换\"></a>3-3-2 强制类型转换</h4><p>强制类型转换，又被称为造型，用于显式的转换一个数值的类型.</p>\n<blockquote>\n<p>隐含强制转换</p>\n</blockquote>\n<ul>\n<li>可能的默认类型是int。</li>\n<li>小数默认是双精度浮点型double，在定义浮点类型时必须在数字下面跟上 F 或者 f。</li>\n</ul>\n<h4 id=\"3-3-3-常见的错误和问题\"><a href=\"#3-3-3-常见的错误和问题\" class=\"headerlink\" title=\"3-3-3 常见的错误和问题\"></a>3-3-3 常见的错误和问题</h4><ul>\n<li>操作比较大的数时，要留意是否溢出，尤其是整数操作时；</li>\n<li>long类型使用大写L不要用小写。</li>\n</ul>\n<h4 id=\"3-3-4-拓展：JDK7扩展\"><a href=\"#3-3-4-拓展：JDK7扩展\" class=\"headerlink\" title=\"3-3-4 拓展：JDK7扩展\"></a>3-3-4 拓展：JDK7扩展</h4><ul>\n<li>JDK7新特性: 二进制整数<br>JDK7为我们直接提供了二进制整数的类型。<br>以0b开头即可。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//例如：int a = 0b0101：</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>JDK7新特性：下划线分隔符</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//例如：int b = 1_2345_6789;</span><br></pre></td></tr></table></figure>\n\n<p>根据特性，我们能够很容易地知道这是1亿2345万6789。</p>\n<ul>\n<li>注意点：<br>1.不能把布尔值进行转换<br>2.不能把对象类型转换为不相干的类型<br>3.在把高容量转换到低容量的时候，强制转换<br>4.转换的时候可能存在内存溢出，或者精度问题！</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/6.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//类型转换</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">128</span>;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>)i; <span class=\"comment\">//内存溢出</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//自动类型转换  低--&gt;高</span></span><br><span class=\"line\">        System.out.println(i); <span class=\"comment\">//128</span></span><br><span class=\"line\">        System.out.println(b); <span class=\"comment\">//-128</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)<span class=\"number\">23.7</span>); <span class=\"comment\">//23  //精度问题</span></span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)-<span class=\"number\">45.89f</span>); <span class=\"comment\">//-45  //精度问题</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> c+<span class=\"number\">1</span>;</span><br><span class=\"line\">        System.out.println(d); <span class=\"comment\">//98</span></span><br><span class=\"line\">        System.out.println((<span class=\"type\">char</span>)d); <span class=\"comment\">//b</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//操作比较大的数，注意溢出</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//JDK7新特性，数字之间可以用下划线分割</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> <span class=\"number\">10_0000_0000</span>;</span><br><span class=\"line\">        System.out.println(money); <span class=\"comment\">//1000000000(10 亿） 不会输出下划线</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">years</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> money*years;</span><br><span class=\"line\">        System.out.println(total); <span class=\"comment\">//-1474836480 ,计算时内存溢出</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">total2</span> <span class=\"operator\">=</span> money*years; <span class=\"comment\">//-1474836480 默认是int，转换之前已经存在问题</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">total3</span> <span class=\"operator\">=</span> money*((<span class=\"type\">long</span>)years);<span class=\"comment\">//先将一个数转换为long</span></span><br><span class=\"line\">        System.out.println(total2);   <span class=\"comment\">//-1474836480</span></span><br><span class=\"line\">        System.out.println(total3);   <span class=\"comment\">//20000000000</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"04、变量与常量\"><a href=\"#04、变量与常量\" class=\"headerlink\" title=\"04、变量与常量\"></a>04、变量与常量</h2><h3 id=\"4-1-变量\"><a href=\"#4-1-变量\" class=\"headerlink\" title=\"4-1 变量\"></a>4-1 变量</h3><img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20221208094727144-1088422726.png\" class=\"\" title=\"2291368-20221208094727144-1088422726\">\n\n<h4 id=\"4-1-1-变量作用域\"><a href=\"#4-1-1-变量作用域\" class=\"headerlink\" title=\"4-1-1 变量作用域\"></a>4-1-1 变量作用域</h4><ul>\n<li>类变量</li>\n<li>实例变量</li>\n<li>局部变量</li>\n</ul>\n<h4 id=\"4-1-2-变量的命名规范\"><a href=\"#4-1-2-变量的命名规范\" class=\"headerlink\" title=\"4-1-2 变量的命名规范\"></a>4-1-2 变量的命名规范</h4><ul>\n<li>所有的变量、方法、类名：见名知意</li>\n<li>类成员变量：首字母小写和驼峰原则（lastName）</li>\n<li>局部变量：首字母小写和驼峰原则（lastName）</li>\n<li>常量：大写字母和下划线（MAX_VALUE）</li>\n<li>类名：首字母大写和驼峰原则(HelloWorld)</li>\n<li>方法名：首字母小写和驼峰原则</li>\n</ul>\n<h4 id=\"4-1-3-注意点\"><a href=\"#4-1-3-注意点\" class=\"headerlink\" title=\"4-1-3 注意点\"></a>4-1-3 注意点</h4><ul>\n<li>实例变量：从属于对象；可以理解为从属于一个类，如果不自行初始化，就会变成这个类型的默认值。</li>\n<li>所有的数值类型初始化，一般是0  0.0    u00000</li>\n<li>布尔值：默认是false</li>\n<li>除了基本类型，其余的默认值都是null </li>\n<li>局部变量是在方法里面的；必须声明和初始化值</li>\n</ul>\n<h3 id=\"4-2-常量\"><a href=\"#4-2-常量\" class=\"headerlink\" title=\"4-2 常量\"></a>4-2 常量</h3><ul>\n<li>常量名一般使用大写字符</li>\n<li>final 常量名 = 值;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/6.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo04</span> &#123;</span><br><span class=\"line\">    String name;     <span class=\"comment\">// 实例变量</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"comment\">//类变量  static（关键字）从属于类</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"variable\">salary</span> <span class=\"operator\">=</span> <span class=\"number\">2500</span>;   <span class=\"comment\">//类变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">double</span> <span class=\"variable\">PI</span> <span class=\"operator\">=</span> <span class=\"number\">3.14</span> ;  <span class=\"comment\">//常量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;   <span class=\"comment\">//局部变量</span></span><br><span class=\"line\">        <span class=\"type\">Demo04</span> <span class=\"variable\">demo04</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Demo04</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(demo04.name);  <span class=\"comment\">//null</span></span><br><span class=\"line\">        System.out.println(demo04.age);  <span class=\"comment\">//0</span></span><br><span class=\"line\">        System.out.println(demo04.salary);  <span class=\"comment\">//2500.0</span></span><br><span class=\"line\">        System.out.println(a*PI);  <span class=\"comment\">//6.28</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"05、运算符\"><a href=\"#05、运算符\" class=\"headerlink\" title=\"05、运算符\"></a>05、运算符</h2><p>java 语言支持如下运算符</p>\n<ul>\n<li>算数运算符 :+ ，-， *， /，%, ++ ，—</li>\n<li>赋值运算符: =</li>\n<li>关系运算符：&gt;，&lt;, &gt;=,&lt;=,==,!= instanceof</li>\n<li>逻辑运算符： &amp;&amp;，|| ，！</li>\n<li>位运算符：&amp;，| ，^, ~ ，&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;</li>\n<li>条件运算符？：</li>\n<li>扩展赋值元芳：+=，-=，*=，/=</li>\n</ul>\n<p>尊重原创：（口诀）转自<a href=\"http://lasombra.iteye.com/blog/991662\">http://lasombra.iteye.com/blog/991662</a><br>单目乘除位关系，逻辑三目后赋值。 </p>\n<p>单目：单目运算符+ –(负数) ++ – 等<br>乘除：算数单目运算符* / % + -<br>位：位移单目运算符&lt;&lt; &gt;&gt;<br>关系：关系单目运算符&gt; &lt; &gt;= &lt;= == !=<br>逻辑：逻辑单目运算符&amp;&amp; || &amp; | ^<br>三目：三目单目运算符A &gt; B ? X : Y<br>后：无意义，仅仅为了凑字数<br>赋值：赋值=</p>\n<blockquote>\n<p>扩展</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> operator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/8.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo05</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Math 运算工具类</span></span><br><span class=\"line\">    \tSystem.out.println(Math.pow(<span class=\"number\">2</span>,<span class=\"number\">3</span>));  <span class=\"comment\">//8.0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//短路运算</span></span><br><span class=\"line\">        System.out.println(c&gt;<span class=\"number\">5</span>&amp;&amp;c++&gt;<span class=\"number\">10</span>);  <span class=\"comment\">//c++&gt;10不执行</span></span><br><span class=\"line\">        System.out.println(c);  <span class=\"comment\">//3</span></span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//位运算        </span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">2</span>&lt;&lt;<span class=\"number\">3</span>);   <span class=\"comment\">//左移三位   00010   ===&gt;  10000</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//字符串连接符 +</span></span><br><span class=\"line\">        System.out.println(a+b);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;&quot;</span>+a+b);  <span class=\"comment\">//1020  加号两侧出现字符串则转为String进行拼接</span></span><br><span class=\"line\">        System.out.println(a+b+<span class=\"string\">&quot;&quot;</span>);  <span class=\"comment\">//30</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"06、包机制与JavaDoc\"><a href=\"#06、包机制与JavaDoc\" class=\"headerlink\" title=\"06、包机制与JavaDoc\"></a>06、包机制与JavaDoc</h2><h3 id=\"6-1-包机制（package）\"><a href=\"#6-1-包机制（package）\" class=\"headerlink\" title=\"6-1 包机制（package）\"></a>6-1 包机制（package）</h3><p>一般利用公司的域名倒置作为包名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.baidu.www;   </span><br><span class=\"line\">package com.Q.base;       //package pkg1[. pkg2[. pkg3……]]；</span><br></pre></td></tr></table></figure>\n\n\n<p>导入包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import package.pkg1.pk.class.*；    //*表示通配符，导入该包全部内容</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-2-JavaDoc\"><a href=\"#6-2-JavaDoc\" class=\"headerlink\" title=\"6-2 JavaDoc\"></a>6-2 JavaDoc</h3><ul>\n<li> JavaDoc命令行实现步骤</li>\n</ul>\n<ol>\n<li>首先打开cmd命令行窗口 ，切到需要生成文档的Java代码所在文件夹下。</li>\n<li>输入JavaDoc命令行，生成HTML文件。<code>javadoc -encoding UTF-8 -charset UTF-8 Doc.java</code></li>\n</ol>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153409714-1355163455.png\" class=\"\" title=\"2291368-20220111153409714-1355163455\">\n\n<ul>\n<li>IDEL编辑器文档生成步骤</li>\n</ul>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153243576-122447391.png\" class=\"\" title=\"2291368-20220111153243576-122447391\">\n\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153253987-2115695199.png\" class=\"\" title=\"2291368-20220111153253987-2115695199\">\n\n<h2 id=\"07、Scanner类\"><a href=\"#07、Scanner类\" class=\"headerlink\" title=\"07、Scanner类\"></a>07、Scanner类</h2><p>通过Scanner 类的next() 和nextLine()方法可获取输入的字符串，读取前，一般使用hasNext() 与hasNextLine()判断是否还有输入。</p>\n<ul>\n<li><p>next():</p>\n<ul>\n<li>一定要读取到有效字符后才可以结束输入。</li>\n<li>对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li>\n<li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li>\n<li>next() 不能得到带有空格的字符串。</li>\n</ul>\n</li>\n<li><p>nextLine():</p>\n<ul>\n<li>以Enter为结束符,也就是说nextLine()方法返回的是输入回车之前的所有字符。</li>\n<li>可以获得空白。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//创建一个扫描器对象用于接收键盘输入的数据</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入数据：&quot;</span>);   <span class=\"comment\">//Hello World!</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (scanner.hasNext())&#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> scanner.next();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;输入的数据为：&quot;</span>+str);    <span class=\"comment\">//Hello</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//String str = scanner.nextLine();</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(&quot;输入的数据为：&quot;+str);   //Hello World!</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//凡是I/O类使用完毕记得关闭以节约资源</span></span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>扩展：求平均数</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//算平均数</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入数据&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (scanner.hasNextDouble())&#123;  <span class=\"comment\">//输入非double类型即可结束</span></span><br><span class=\"line\">            <span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> scanner.nextDouble();</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            sum = sum +d;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;当前输入的为第&quot;</span>+count+<span class=\"string\">&quot;个数据为：&quot;</span>+d);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输入的&quot;</span>+count+<span class=\"string\">&quot;个数据的平均数为&quot;</span>+(sum/count));</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"08、流程控制\"><a href=\"#08、流程控制\" class=\"headerlink\" title=\"08、流程控制\"></a>08、流程控制</h2><h3 id=\"8-1顺序结构\"><a href=\"#8-1顺序结构\" class=\"headerlink\" title=\"8-1顺序结构\"></a>8-1顺序结构</h3><h3 id=\"8-2选择结构\"><a href=\"#8-2选择结构\" class=\"headerlink\" title=\"8-2选择结构\"></a>8-2选择结构</h3><p><code>if结构   switch结构</code></p>\n<p>JDK7之后，switch语句中的变量类型可以是字符串  <code>比较的value值是  “name.hashCode()”</code></p>\n<p>反编译 java—-class(字节码文件)—-反编译(IDEA)</p>\n<ul>\n<li>class反编译后的代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class=\"line\"><span class=\"comment\">// (powered by Fernflower decompiler)</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwitchDemo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SwitchDemo01</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> <span class=\"number\">65</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;李&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(grade) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">65</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩优秀&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">66</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩良好&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">67</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩及格&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">68</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩不及格&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;输入不合法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">var4</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(name.hashCode()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">23376</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(name.equals(<span class=\"string\">&quot;子&quot;</span>)) &#123;</span><br><span class=\"line\">                var4 = <span class=\"number\">2</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">26408</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(name.equals(<span class=\"string\">&quot;木&quot;</span>)) &#123;</span><br><span class=\"line\">                var4 = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">26446</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(name.equals(<span class=\"string\">&quot;李&quot;</span>)) &#123;</span><br><span class=\"line\">                var4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(var4) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;李&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;木&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;子&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;未查询到名字&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>java原代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/10.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwitchDemo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;李&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (grade) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩优秀&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩良好&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;C&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩及格&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;D&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩不及格&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入不合法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (name)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;李&quot;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;李&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;木&quot;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;木&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;子&quot;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;子&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;未查询到名字&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-3循环结构\"><a href=\"#8-3循环结构\" class=\"headerlink\" title=\"8-3循环结构\"></a>8-3循环结构</h3><p><code>while循环    do while循环    for循环</code></p>\n<blockquote>\n<p>小练习1 求0-100奇数和偶数和</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/10.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//求0-100奇数和偶数和</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">oddSum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">evenSum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%<span class=\"number\">2</span>!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                oddSum = oddSum +i;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                evenSum = evenSum +i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;奇数和：&quot;</span>+oddSum);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;偶数和：&quot;</span>+evenSum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小练习2 输出1-1000能被5整除的整数，且每行输出三个</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/10.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出1-1000能被5整除的整数，且每行输出三个</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">1000</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%<span class=\"number\">5</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                System.out.print(i +<span class=\"string\">&quot;\\t&quot;</span>);   <span class=\"comment\">//水平制表转义字符</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%(<span class=\"number\">5</span>*<span class=\"number\">3</span>)==<span class=\"number\">0</span>)&#123;    <span class=\"comment\">//注意if (i%5*3==0)错误, % 优先级与 * 同级，从左向右依次运算</span></span><br><span class=\"line\"><span class=\"comment\">//                System.out.println();    //与print区别输出后换行，print输出后不换行</span></span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;\\n&quot;</span>);   <span class=\"comment\">//换行转义字符</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小练习3 输出9*9乘法表</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo04</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//9*9乘法表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">                System.out.print(i+<span class=\"string\">&quot;*&quot;</span>+j+<span class=\"string\">&quot;=&quot;</span>+i*j+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>小练习4 打印5*5正三角形</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Created by Q on 2022/1/11.</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class TextDemo &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        //打印5*5正三角形</span><br><span class=\"line\">        for (int i = 1; i &lt;= 5; i++) &#123;</span><br><span class=\"line\">            for (int j = 5; j &gt;= i; j--) &#123;</span><br><span class=\"line\">                System.out.print(&quot; &quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for (int j = 1; j &lt;= i; j++) &#123;</span><br><span class=\"line\">                System.out.print(&quot;*&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for (int j = 2; j &lt;= i; j++) &#123;</span><br><span class=\"line\">                System.out.print(&quot;*&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>增强for循环</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo05</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] numbers = &#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(numbers[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===================&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历数组或集合</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x:numbers)&#123;</span><br><span class=\"line\">            System.out.println(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-4Break-amp-Continue\"><a href=\"#8-4Break-amp-Continue\" class=\"headerlink\" title=\"8-4Break &amp; Continue\"></a>8-4Break &amp; Continue</h3><blockquote>\n<p>break</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BreakDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i&lt;<span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i==<span class=\"number\">30</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;  <span class=\"comment\">//终止循环</span></span><br><span class=\"line\">            System.out.println(i);  <span class=\"comment\">//输出1-29</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>continue</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ContinueDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i&lt;<span class=\"number\">30</span>)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%<span class=\"number\">10</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                System.out.println();</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;  <span class=\"comment\">//结束本次循环，继续执行下一次循环</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.print(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对比         return结束方法</p>\n</blockquote>\n<h2 id=\"09、方法\"><a href=\"#09、方法\" class=\"headerlink\" title=\"09、方法\"></a>09、方法</h2><p>1定义</p>\n<p>2调用</p>\n<p>3重载—在一个类中，相同的函数名，参数不同</p>\n<p>4命令行传参</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; args.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(args[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method&gt;javac Demo03.java</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method&gt;java Demo03</span><br><span class=\"line\">错误: 找不到或无法加载主类 Demo03</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method&gt;cd ../        //切换到src目录下</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q&gt;cd ../</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com&gt;cd ../</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src&gt;java com.Q.method.Demo03    //记得加包名</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src&gt;java com.Q.method.Demo03 this is Q    //传参</span><br><span class=\"line\">this</span><br><span class=\"line\">is</span><br><span class=\"line\">Q</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src&gt;</span><br></pre></td></tr></table></figure>\n\n<p>5可变参数</p>\n<p>6递归</p>\n<blockquote>\n<p>小练习 计算器  </p>\n</blockquote>\n<p> <strong>待完善</strong></p>\n<p> <strong>待完善</strong></p>\n<h2 id=\"10、数组\"><a href=\"#10、数组\" class=\"headerlink\" title=\"10、数组\"></a>10、数组</h2><ol>\n<li>声明，创建</li>\n<li>三种初始化以及内存分析</li>\n<li>越界</li>\n<li>使用</li>\n<li>二维数组</li>\n<li>Arrays类</li>\n</ol>\n<blockquote>\n<p>扩展1 稀疏数组</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.array;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/14.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo08</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t1\t2\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] arrays = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">5</span>][<span class=\"number\">5</span>];</span><br><span class=\"line\">        arrays[<span class=\"number\">2</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        arrays[<span class=\"number\">2</span>][<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出原数组&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span>[] arg : arrays) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> a : arg) &#123;</span><br><span class=\"line\">                System.out.print(a+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;====================&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//        获取有效值个数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrays[i][j]!=<span class=\"number\">0</span>) sum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;有效值个数：&quot;</span>+sum);   <span class=\"comment\">// 有效值个数：2</span></span><br><span class=\"line\"><span class=\"comment\">//        构建稀疏数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] arrays2 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[sum+<span class=\"number\">1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">        arrays2[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">        arrays2[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">        arrays2[<span class=\"number\">0</span>][<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arrays[i].length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrays[i][j]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    count ++;</span><br><span class=\"line\">                    arrays2[count][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">                    arrays2[count][<span class=\"number\">1</span>] = j;</span><br><span class=\"line\">                    arrays2[count][<span class=\"number\">2</span>] = arrays[i][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//遍历输出稀疏数组</span></span><br><span class=\"line\"><span class=\"comment\">//        5\t5\t2</span></span><br><span class=\"line\"><span class=\"comment\">//        2\t1\t1</span></span><br><span class=\"line\"><span class=\"comment\">//        2\t2\t2</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出稀疏数组：&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arrays2.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arrays2[i].length; j++) &#123;</span><br><span class=\"line\">                System.out.print(arrays2[i][j]+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;======================&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//        还原数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] array3 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[arrays2[<span class=\"number\">0</span>][<span class=\"number\">0</span>]][arrays2[<span class=\"number\">0</span>][<span class=\"number\">1</span>]];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; arrays2.length; i++) &#123;</span><br><span class=\"line\">            array3[arrays2[i][<span class=\"number\">0</span>]][arrays2[i][<span class=\"number\">1</span>]] =arrays2[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出还原数组&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span>[] arg : array3) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> a : arg) &#123;</span><br><span class=\"line\">                System.out.print(a+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>扩展2  冒泡排序</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.array;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/14.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo07</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] result = sort(arr);</span><br><span class=\"line\">        System.out.println(Arrays.toString(result));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//    冒泡排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] sort(<span class=\"type\">int</span>[] array)&#123;</span><br><span class=\"line\"><span class=\"comment\">//        优化</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> temp;</span><br><span class=\"line\">        <span class=\"comment\">//外层循环表示比较的趟数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; array.length-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; array.length-i-<span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//注意是j表示比较相邻两数的下标</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (array[j]&gt;array[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                    temp = array[j];</span><br><span class=\"line\">                    array[j] = array[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                    array[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">                    flag = <span class=\"literal\">true</span>;  <span class=\"comment\">//进行了交换，标志改变</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"comment\">//            优化方法一</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!flag)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;  <span class=\"comment\">//终止循环</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        优化方法二</span></span><br><span class=\"line\"><span class=\"comment\">//        if (!flag)&#123;  //某趟没有进行一次交换，直接不用继续比较</span></span><br><span class=\"line\"><span class=\"comment\">//            return array;</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Java面向对象\"><a href=\"#Java面向对象\" class=\"headerlink\" title=\"Java面向对象\"></a>Java面向对象</h1><blockquote>\n<p>面向对象（Object-Oriented Programming）编程本质：</p>\n</blockquote>\n<p>以类的方式组织代码，以对象的方式封装数据</p>\n<blockquote>\n<p>三大特性</p>\n</blockquote>\n<p>封装</p>\n<p>继承</p>\n<p>多态</p>\n<h2 id=\"01、类与对象的创建\"><a href=\"#01、类与对象的创建\" class=\"headerlink\" title=\"01、类与对象的创建\"></a>01、类与对象的创建</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/15.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//        Student.say();   静态方法可直接调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        非静态方法要先实例化</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        student.say();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//静态方法和类一起加载</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">a</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//        b();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//非静态方法是在类实例化后才存在的，故不能有静态方法调用</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">b</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>值传递</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/16.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//值传递</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        System.out.println(a);  <span class=\"comment\">//10</span></span><br><span class=\"line\">        <span class=\"type\">Demo02</span> <span class=\"variable\">demo02</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Demo02</span>();</span><br><span class=\"line\">        demo02.change(a);</span><br><span class=\"line\">        System.out.println(a);  <span class=\"comment\">//10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">change</span><span class=\"params\">(<span class=\"type\">int</span> a)</span>&#123;</span><br><span class=\"line\">        a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"02、构造器\"><a href=\"#02、构造器\" class=\"headerlink\" title=\"02、构造器\"></a>02、构造器</h2><p>又叫构造方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/18.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//一个类即使什么都不写，也存在一个方法 public Person() &#123;&#125; java---&gt;class文件</span></span><br><span class=\"line\">    <span class=\"comment\">//显示的定义构造器</span></span><br><span class=\"line\">    String name;  <span class=\"comment\">//null</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"comment\">//作用：实例化初始值</span></span><br><span class=\"line\">    <span class=\"comment\">//使用new关键字必须有构造器，因为本质是在调用构造器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//有参构造</span></span><br><span class=\"line\">    <span class=\"comment\">//使用有参构造，必须显式定义无参构造否则报错</span></span><br><span class=\"line\">    <span class=\"comment\">// Person(String)in Person cannot be applied to()</span></span><br><span class=\"line\">    <span class=\"comment\">//快捷键 alt+insert</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> \t\tPerson person = new Person(&quot;Q&quot;,10);</span></span><br><span class=\"line\"><span class=\"comment\"> \t\tSystem.out.println(person.name);</span></span><br><span class=\"line\"><span class=\"comment\"> \t\tSystem.out.println(person.age);</span></span><br><span class=\"line\"><span class=\"comment\"> \t&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>构造器：</p>\n</blockquote>\n<ul>\n<li><p>和类名相同      </p>\n</li>\n<li><p>没有返回值</p>\n</li>\n<li><p>作用：</p>\n<p>1、实例化初始值</p>\n<p>2、使用new关键字本质是在调用构造器</p>\n</li>\n<li><p>注意点：</p>\n</li>\n</ul>\n<p>​        1、使用有参构造，必须显式定义无参构造，否则报错</p>\n<p>​        2、快捷键 alt+insert</p>\n<blockquote>\n<p>扩展  创建对象内存分析</p>\n</blockquote>\n<p> <strong>待完善</strong></p>\n<p> <strong>待完善</strong></p>\n<h2 id=\"03、封装\"><a href=\"#03、封装\" class=\"headerlink\" title=\"03、封装\"></a>03、封装</h2><p>将类中属性（+少方法）私有化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/20.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//封装</span></span><br><span class=\"line\">    <span class=\"comment\">//属性私有</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (age &gt; <span class=\"number\">0</span> &amp;&amp; age &lt; <span class=\"number\">120</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.age = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"04、继承\"><a href=\"#04、继承\" class=\"headerlink\" title=\"04、继承\"></a>04、继承</h2><p>对象抽象出类     对象抽象—–&gt;类   </p>\n<p>子类抽象出父类    子类抽象——&gt;父类       子类继承父类</p>\n<h3 id=\"4-1-Object类\"><a href=\"#4-1-Object类\" class=\"headerlink\" title=\"4-1 Object类\"></a>4-1 Object类</h3><h3 id=\"4-2-super-this\"><a href=\"#4-2-super-this\" class=\"headerlink\" title=\"4-2 super  this\"></a>4-2 super  this</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo04;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/20.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//父类</span></span><br><span class=\"line\"><span class=\"comment\">//java中，所有类直接或者间接继承Object类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//私有属性不可继承</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> <span class=\"number\">1_0000_0000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Person_Q&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;父类无参构造&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Person&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">say</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;说话了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//get set</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getMoney</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMoney</span><span class=\"params\">(<span class=\"type\">int</span> money)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo04;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/20.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//子类（继承类）  ctrl+H：查看类继承结构</span></span><br><span class=\"line\"><span class=\"comment\">//继承父类所有方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Student_Q&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//隐藏代码：默认调用父类无参构造</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>();  <span class=\"comment\">//只能放在子类构造器第一行</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;子类无参构造&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Student&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        print();  <span class=\"comment\">//Student</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.print();  <span class=\"comment\">//Student</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>.print();  <span class=\"comment\">//Person</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">        System.out.println(name);  <span class=\"comment\">//test_Q</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span>.name);  <span class=\"comment\">//Student_Q</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">super</span>.name);  <span class=\"comment\">//Person_Q</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> com.oop.Demo04.Student s1 = new com.oop.Demo04.Student();</span></span><br><span class=\"line\"><span class=\"comment\"> s1.say();</span></span><br><span class=\"line\"><span class=\"comment\"> s1.test(&quot;test_Q&quot;);</span></span><br><span class=\"line\"><span class=\"comment\"> &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>super注意点：</p>\n</blockquote>\n<p>​        1、super调用父类构造方法，必须是在构造器方法的第一个<br>​        2、super只能出现在子类或者构造方法中<br>​        3、super和this不能同时调用构造方法！</p>\n<blockquote>\n<p>VS this</p>\n</blockquote>\n<p>​        代表的对象不同：<br>​            this：本身调用者这个对象<br>​            super：代表父类对象的引用<br>​        前提不同：<br>​            this：没有继承也可以使用<br>​            super：只能在继承的条件下才可以使用<br>​        构造方法：<br>​            this：本类的构造<br>​            super：父类的构造</p>\n<h3 id=\"4-3-方法重写\"><a href=\"#4-3-方法重写\" class=\"headerlink\" title=\"4-3 方法重写\"></a>4-3 方法重写</h3><p>重写是方法的重写和属性无关</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不是重写</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//父类的引用指向子类</span></span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        a.test();  <span class=\"comment\">//A==&gt;test</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        b.test();  <span class=\"comment\">//B==&gt;test</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//重写</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//注解</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  <span class=\"comment\">//重写</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        a.test();  <span class=\"comment\">//B==&gt;test</span></span><br><span class=\"line\">        b.test();  <span class=\"comment\">//B==&gt;test</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重写小结：要是非静态方法</p>\n</blockquote>\n<ol>\n<li><p>需要有继承关系，子类重写父类的方法！</p>\n</li>\n<li><p>方法名必须相同，参数列表必须相同</p>\n</li>\n<li><p>修饰符：</p>\n<p>范围可以扩大：public &gt; Protected &gt; Default &gt; private</p>\n</li>\n<li><p>抛出的异常：</p>\n<p>范围可以被缩小，但不能扩大；</p>\n<p>ClassNotFountException —&gt; Exception(大)</p>\n</li>\n<li><p>重写，子类的方法和父类必须要一致，方法体不同！</p>\n</li>\n</ol>\n<blockquote>\n<p>为什么需要重写？</p>\n</blockquote>\n<p>父类的功能，子类不一定需要，或者不一定满足！</p>\n<p>##05、多态</p>\n<p>多态存在的必要条件：</p>\n<ul>\n<li>继承</li>\n<li>重写 (子类重写父类方法,方法名必须相同)</li>\n<li>父类引用指向子类对象：Parent p = new Child();</li>\n</ul>\n<h2 id=\"06、instanceof关键字\"><a href=\"#06、instanceof关键字\" class=\"headerlink\" title=\"06、instanceof关键字\"></a>06、instanceof关键字</h2><blockquote>\n<p>X instanceof Y               X是否是Y的实例</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.oop.demo06.Person;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.oop.demo06.Student;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.oop.demo06.Teacher;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Object &gt; String</span></span><br><span class=\"line\">        <span class=\"comment\">//Object &gt; Person &gt; Teacher</span></span><br><span class=\"line\">        <span class=\"comment\">//Object &gt; Person &gt; Student</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">object</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(X instanceof Y);//能不能编译通过，就取决于X和Y之间是否存在父子关系；</span></span><br><span class=\"line\">        <span class=\"comment\">//结果是true或者false ，X所指向的实例类型是Y的子类型，或者 X和 Y是有关系的</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Student);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Person);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Object);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Teacher);<span class=\"comment\">//false</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> String);<span class=\"comment\">//false，String是 Object lang包下面的，更没关系了</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===================================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Student);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Person);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Object);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Teacher);<span class=\"comment\">//false</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(person instanceof String);//编译报错！string和 person同级，它是两条线</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===================================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        System.out.println(student <span class=\"keyword\">instanceof</span> Student);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(student <span class=\"keyword\">instanceof</span> Person);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(student <span class=\"keyword\">instanceof</span> Object);<span class=\"comment\">//true</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(student instanceof Teacher);//false，编译报错！</span></span><br><span class=\"line\">                <span class=\"comment\">// instanceof是一个比较转换的过程，比较肯定是两边有关系的才会返回true或者false</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(student instanceof String);//false，编译报错！ 两者没关系会直接报错</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>多态总结：</p>\n</blockquote>\n<pre><code>    1. 父类引用指向子类的对象（子类引用指向父类的对象肯定是不行的）\n    2. 把子类转换为父类，也就是向上转型：不用强制转换；\n    3. 把子类转换为父类，也就是向下转型：需要强制转换；（可能会丢失一些方法）\n    4. 方便方法的调用，减少重复的代码！简洁\n</code></pre>\n<h2 id=\"07-、static关键字小结\"><a href=\"#07-、static关键字小结\" class=\"headerlink\" title=\"07 、static关键字小结\"></a>07 、static关键字小结</h2><p>静态属性</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//static</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> age;<span class=\"comment\">//静态的变量  多线程！</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> score;<span class=\"comment\">//非静态的变量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        System.out.println(Student.age);<span class=\"comment\">//类变量跟类中的所有实例共享</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(Student.score);这是不行的</span></span><br><span class=\"line\">        System.out.println(s1.age);</span><br><span class=\"line\">        System.out.println(s1.score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>静态方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//static</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> age;<span class=\"comment\">//静态的变量  多线程！</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> score;<span class=\"comment\">//非静态的变量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;<span class=\"comment\">//非静态方法可以调用静态方法里的所有东西</span></span><br><span class=\"line\">        go();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">()</span>&#123;<span class=\"comment\">//静态方法可以调用静态方法里的所有东西</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>().run();<span class=\"comment\">//对象.方法45</span></span><br><span class=\"line\">        Student.go();</span><br><span class=\"line\">        go();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>静态代码块</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2：赋初值~</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//代码块（匿名代码块）</span></span><br><span class=\"line\">        <span class=\"comment\">//没有名字，程序不会主动调用这些模块</span></span><br><span class=\"line\">        <span class=\"comment\">//匿名代码块：创建对象时就自动创建了，而且在构造器之前</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;匿名代码块&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//1 ： 只执行一次~</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">        <span class=\"comment\">//可以在里面加载一些初始化的数据</span></span><br><span class=\"line\">        <span class=\"comment\">//静态代码块：类一加载就直接执行，永久只执行一次</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;静态代码块&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//3</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;构造方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        结果：</span></span><br><span class=\"line\"><span class=\"comment\">            静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">            匿名代码块</span></span><br><span class=\"line\"><span class=\"comment\">            构造方法</span></span><br><span class=\"line\"><span class=\"comment\">            =================</span></span><br><span class=\"line\"><span class=\"comment\">            匿名代码块</span></span><br><span class=\"line\"><span class=\"comment\">            构造方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>package的一些新特性</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//静态导入包~</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.Math.random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.Math.PI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(random());</span><br><span class=\"line\">        System.out.println(PI);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    final 通过final修饰的类不能被继承，就没有子类</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"08、抽象类（abstract\"><a href=\"#08、抽象类（abstract\" class=\"headerlink\" title=\"08、抽象类（abstract)\"></a>08、抽象类（abstract)</h2><ul>\n<li><p>抽象类特点</p>\n<ol>\n<li>抽象类和抽象方法都需要被abstract修饰。抽象方法一定要定义在抽象类中</li>\n<li>抽象类不可以直接创建对象，原因：调用抽象方法没有意义</li>\n<li>只有覆盖了抽象类中所有的抽象方法后，其子类才可以创建对象，否则该子类还是一个抽象类</li>\n</ol>\n</li>\n<li><p>abstract不能和哪些关键字共存?</p>\n<ol>\n<li>private 被私有的成员只能在本类中调用，而abstract强制重写抽象方法，二者冲突</li>\n<li>final final表示最终的，被修饰的类和方法不能被继承和重写，与abstract强制重写抽象方法冲突</li>\n<li>static 无意义</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//abstract修饰的类为抽象类,java的类是单继承（接口可以多继承）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Action</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//抽象方法，可以实现约束作用，让继承的子类来实现方法。</span></span><br><span class=\"line\">    <span class=\"comment\">//abstract,抽象方法，只有方法名字，没有方法的实现！</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doSomething</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"comment\">//抽象类不能new出对象，只能用子类去实现。</span></span><br><span class=\"line\">    <span class=\"comment\">//抽象类里可以写普通方法</span></span><br><span class=\"line\">    <span class=\"comment\">//抽象方法必须在抽象类中</span></span><br><span class=\"line\">    <span class=\"comment\">//抽象的抽象：约束</span></span><br><span class=\"line\">    <span class=\"comment\">//存在的意义，提高开发效率。</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Action</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doSomething</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"09、接口\"><a href=\"#09、接口\" class=\"headerlink\" title=\"09、接口\"></a>09、接口</h2><ul>\n<li><p><strong>接口的成员特点</strong></p>\n<ul>\n<li>成员变量：只能是常量，并且是静态的，默认有public static final修饰</li>\n<li>成员方法：只能是抽象方法，默认有public abstract修饰</li>\n<li>构造方法：接口没有构造方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo06;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">query</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//接口实现类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">query</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"10、内部类\"><a href=\"#10、内部类\" class=\"headerlink\" title=\"10、内部类\"></a>10、内部类</h2><ol>\n<li>成员内部类</li>\n<li>静态内部类（static 修饰）</li>\n<li>局部内部类</li>\n<li>匿名内部类</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo07;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">out</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">in</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;内部类&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//作用：获得内部类的私有属性</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getName</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        Outer outer = new Outer();</span></span><br><span class=\"line\"><span class=\"comment\">        outer.out();  //外部类</span></span><br><span class=\"line\"><span class=\"comment\">        Outer.Inner in = outer.new Inner();</span></span><br><span class=\"line\"><span class=\"comment\">        in.in();  //内部类</span></span><br><span class=\"line\"><span class=\"comment\">        in.getName();  //Q</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小疑惑  UserService userservice = new UserService()</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一个Java类中可以有多个class类，但是只能有一个public class</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Apple</span>().eat();</span><br><span class=\"line\">        <span class=\"comment\">//匿名内部类</span></span><br><span class=\"line\">        <span class=\"type\">UserService</span> <span class=\"variable\">userservice</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserService</span>()&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">Hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//局部内部类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Apple</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">eat</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">UserService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">Hello</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"11、类、接口、抽象类小结\"><a href=\"#11、类、接口、抽象类小结\" class=\"headerlink\" title=\"11、类、接口、抽象类小结\"></a>11、类、接口、抽象类小结</h2><blockquote>\n<p>类与类,类与接口,接口与接口的关系</p>\n</blockquote>\n<ul>\n<li>类与类：继承关系,只能单继承,可以多层继承</li>\n<li>类与接口：实现关系,可以单实现,也可以多实现。并且可以在继承一个类的同时实现多个接口</li>\n<li>接口与接口：继承关系,可以单继承,也可以多继承</li>\n</ul>\n<blockquote>\n<p>抽象类和接口的区别</p>\n</blockquote>\n<ul>\n<li><p>成员区别</p>\n<p>抽象类：</p>\n<p>成员变量：可以是变量，也可以是常量</p>\n<p>成员方法：可以是抽象类，也可以非抽象类</p>\n<p>构造方法：有</p>\n<p>接口：</p>\n<p>成员变量：只能是常量</p>\n<p>成员方法：只能是抽象类</p>\n<p>构造方法：无</p>\n</li>\n<li><p>关系区别</p>\n<p>抽象方法：</p>\n<p>类与类：继承，单继承<br>类与接口：实现，单实现，多实现<br>接口与接口：继承，单继承，多继承</p>\n</li>\n<li><p>设计理念区别</p>\n<p>抽象类：体现的是“is a ”的关系，抽象类中定义的是该继承体系的共性功能</p>\n<p>接口：体现的是“like a ”的关系，接口中定义的是该继承体系的个性功能（扩展功能）</p>\n</li>\n</ul>\n<h2 id=\"12、异常\"><a href=\"#12、异常\" class=\"headerlink\" title=\"12、异常\"></a>12、异常</h2><p>Error和Exception</p>\n<blockquote>\n<p>Exception</p>\n</blockquote>\n<h3 id=\"12-1-异常层次结构图示\"><a href=\"#12-1-异常层次结构图示\" class=\"headerlink\" title=\"12-1 异常层次结构图示\"></a>12-1 异常层次结构图示</h3><p>（引用菜鸟教程）</p>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220123223242579-694787793.png\" class=\"\" title=\"2291368-20220123223242579-694787793\">\n\n<h3 id=\"12-2-关键字\"><a href=\"#12-2-关键字\" class=\"headerlink\" title=\"12-2 关键字\"></a>12-2 关键字</h3><ol>\n<li>try</li>\n<li>catch</li>\n<li>finally</li>\n<li>throw</li>\n<li>throws</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//Ctrl+Alt+t  快捷键：捕获结构代码</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;<span class=\"comment\">//监控区</span></span><br><span class=\"line\">            System.out.println(a/b);   <span class=\"comment\">//Exception in thread &quot;main&quot; java.lang.ArithmeticException: / by zero</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (ArithmeticException e)&#123;  <span class=\"comment\">//捕获</span></span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Error error)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Error&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception exception)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Exception&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Throwable throwable)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Throwable&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;  <span class=\"comment\">//善后处理   finally可以不用，用于处理IO流等关闭资源</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;其他异常&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br><span class=\"line\"><span class=\"comment\">java.lang.ArithmeticException: / by zero</span></span><br><span class=\"line\"><span class=\"comment\">其他异常</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"12-3-自定义异常\"><a href=\"#12-3-自定义异常\" class=\"headerlink\" title=\"12-3 自定义异常\"></a>12-3 自定义异常</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.exception.Demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Exception</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> detail;</span><br><span class=\"line\">    <span class=\"comment\">//参数大于10抛异常</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyException</span><span class=\"params\">(<span class=\"type\">int</span> detail)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.detail = detail;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;MyException&#123;&quot;</span> + <span class=\"string\">&quot;detail=&#x27;&quot;</span> + detail + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//可能出现异常的方法</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> <span class=\"keyword\">throws</span> MyException&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;参数：&quot;</span>+a);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a &gt; <span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyException</span>(a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;OK&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            test(<span class=\"number\">14</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (MyException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">参数：14</span></span><br><span class=\"line\"><span class=\"comment\">MyException&#123;detail=&#x27;14&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"后记（有感）\"><a href=\"#后记（有感）\" class=\"headerlink\" title=\"后记（有感）\"></a>后记（有感）</h1><p>从2022年1月1号准备开始学习，至今23号，经过23天（实际最多只需要一周就可以搞定，打脸自己flag）断断续续的学习，课程是B站狂神说Java的JavaSE课程，记录了这么一份笔记，希望可以用来以后回顾。能感觉出来这是一份速学课程，相对而言少了很多知识点，适合急找工作速成。后续再找点资料补充完善java体系。</p>\n<blockquote>\n<p>补充待续</p>\n</blockquote>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<h1 id=\"Java基础语法\"><a href=\"#Java基础语法\" class=\"headerlink\" title=\"Java基础语法\"></a>Java基础语法</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><h3 id=\"JDK-JRE-JVM\"><a href=\"#JDK-JRE-JVM\" class=\"headerlink\" title=\"JDK JRE JVM\"></a>JDK JRE JVM</h3><ul>\n<li>JDK: java development kit java 环境</li>\n<li>JRE: java Runtime Environment java 运行时环境</li>\n<li>JVM: java virtual Machine java 虚拟机</li>\n</ul>\n<h3 id=\"Java-运行机制\"><a href=\"#Java-运行机制\" class=\"headerlink\" title=\"Java 运行机制\"></a>Java 运行机制</h3><ul>\n<li>编译型<ul>\n<li>所有的Java代码都是要编译的，.java不经过编译就什么用都没有。</li>\n</ul>\n</li>\n<li>解释型<ul>\n<li>java代码编译后不能直接运行，它是解释运行在JVM上的，所以它是解释运行的，那也就算是解释的了。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"HelloWorld\"><a href=\"#HelloWorld\" class=\"headerlink\" title=\"HelloWorld\"></a>HelloWorld</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">$firstname</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;L&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">_lastname</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Q&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;1&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>+ <span class=\"string\">&quot; &quot;</span>+ $firstname + _lastname + <span class=\"string\">&quot; &quot;</span>+ age );</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>可能遇到的问题</p>\n</blockquote>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111152826346-1412372719.png\" class=\"\" title=\"2291368-20220111152826346-1412372719\">\n\n<h2 id=\"01、注释\"><a href=\"#01、注释\" class=\"headerlink\" title=\"01、注释\"></a>01、注释</h2><ol>\n<li>单行注释(idea快捷键ctrl+/)</li>\n<li>多行注释(idea快捷键ctrl+shift+/)</li>\n<li>文档注释</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2021/4/17.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HelloWorld</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//单行注释输出hello world</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*多行注释</span></span><br><span class=\"line\"><span class=\"comment\">多行注释*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Q</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@decription</span> JavaDoc文档注释</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"02、标识符与关键字\"><a href=\"#02、标识符与关键字\" class=\"headerlink\" title=\"02、标识符与关键字\"></a>02、标识符与关键字</h2><h3 id=\"2-1-标识符\"><a href=\"#2-1-标识符\" class=\"headerlink\" title=\"2-1 标识符\"></a>2-1 标识符</h3><p>Java 中标识符是为方法、变量或其他用户定义项所定义的名称。标识符可以有一个或多个字符。在 Java 语言中，标识符的构成规则如下。</p>\n<blockquote>\n<p>标识符由数字（0<del>9）和字母（A</del>Z 和 a~z）、美元符号（$）、下划线（_）以及 Unicode 字符集中符号大于 0xC0 的所有符号组合构成（各符号之间没有空格）。</p>\n<p>标识符的第一个符号为字母、下划线和美元符号，后面可以是任何字母、数字、美元符号或下划线。</p>\n</blockquote>\n<p>另外，Java 区分大小写，因此 name 和 Name 是两个不同的标识符。</p>\n<p>注意：标识符命名时，切记不能以数字开头，也不能使用任何 Java 关键字作为标识符，而且不能赋予标识符任何标准的方法名。</p>\n<p>标识符分为两类，分别为关键字和用户自定义标识符。</p>\n<blockquote>\n<p>关键字是有特殊含义的标识符，如 true、false 表示逻辑的真假。</p>\n<p>用户自定义标识符是由用户按标识符构成规则生成的非保留字的标识符，如 abc 就是一个标识符。注意：使用标识符时一定要注意，或者使用关键字，或者使用自定义的非关键字标识符。此外，标识符可以包含关键字，但不能与关键字重名。</p>\n</blockquote>\n<p>合法与不合法标识符示例。</p>\n<pre><code>合法标识符：date、$2021、_date、D_$date 等。\n\n不合法的标识符：1111.com、1com、for、if 等。\n</code></pre>\n<p>标识符用来命名常量、变量、类和类的对象等。因此，在我们命名标识符时，应赋予它一个有意义或有用途的名字。</p>\n<h3 id=\"2-2-关键字\"><a href=\"#2-2-关键字\" class=\"headerlink\" title=\"2-2 关键字\"></a>2-2 关键字</h3><p>关键字（或者保留字）是对编译器有特殊意义的固定单词，不能在程序中做其他目的使用。关键字具有专门的意义和用途，和自定义的标识符不同，不能当作一般的标识符来使用。</p>\n<p>Java 的关键字对 Java 编译器有特殊的意义，它们用来表示一种数据类型，或者表示程序的结构等。</p>\n<p>保留字是为 Java 预留的关键字，它们虽然现在没有作为关键字，但在以后的升级版本中有可能作为关键字。</p>\n<p>Java 语言目前定义了 51 个关键字，这些关键字不能作为变量名、类名和方法名来使用。以下对这些关键字进行了分类。</p>\n<blockquote>\n<p>数据类型：boolean、int、long、short、byte、float、double、char、class、interface。</p>\n<p>流程控制：if、else、do、while、for、switch、case、default、break、continue、return、try、catch、finally。</p>\n<p>修饰符：public、protected、private、final、void、static、strict、abstract、transient、synchronized、volatile、native。</p>\n<p>动作：package、import、throw、throws、extends、implements、this、supper、instanceof、new。</p>\n<p>保留字：true、false、null、goto、const。</p>\n</blockquote>\n<p>注意：由于 Java 区分大小写，因此 public 是关键字，而 Public 则不是关键字。但是为了程序的清晰及可读性，要尽量避免使用关键字的其他形式来命名。</p>\n<h2 id=\"03、数据类型\"><a href=\"#03、数据类型\" class=\"headerlink\" title=\"03、数据类型\"></a>03、数据类型</h2><ul>\n<li>强类型语言：Java  c++ (先定义后使用)</li>\n<li>弱类型语言：javascript python</li>\n</ul>\n<p>java数据类型</p>\n<h3 id=\"3-1-基本类型（primitive-type）\"><a href=\"#3-1-基本类型（primitive-type）\" class=\"headerlink\" title=\"3-1 基本类型（primitive type）\"></a>3-1 基本类型（primitive type）</h3><p>数值类型+布尔类型</p>\n<ul>\n<li>整数 ：int   byte   short   long</li>\n<li>小数：float   double</li>\n<li>字符：char</li>\n<li>布尔型：true  false</li>\n</ul>\n<p><code>字符串String是类不是关键字</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2021/4/18.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//八大基本类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//整数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">num1</span> <span class=\"operator\">=</span> <span class=\"number\">1000000</span>; <span class=\"comment\">//最常用  4字节</span></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">num2</span> <span class=\"operator\">=</span> <span class=\"number\">111</span>; <span class=\"comment\">//-128--127 1字节</span></span><br><span class=\"line\">        <span class=\"type\">short</span> <span class=\"variable\">num3</span> <span class=\"operator\">=</span> <span class=\"number\">11111</span>;  <span class=\"comment\">//2字节</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">num4</span> <span class=\"operator\">=</span> <span class=\"number\">1111111L</span>; <span class=\"comment\">//long类型要在数字后加L 8字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//小数：浮点数</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">num5</span> <span class=\"operator\">=</span> <span class=\"number\">1.111F</span>; <span class=\"comment\">//float类型要在数字后加F 4字节</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">num6</span> <span class=\"operator\">=</span> <span class=\"number\">3.14159265358979</span>; <span class=\"comment\">//8字节</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//字符</span></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">aaa</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>; <span class=\"comment\">//注意单引号不是双引号，2个字节</span></span><br><span class=\"line\">        <span class=\"comment\">//String name = &quot;李四&quot;;</span></span><br><span class=\"line\">        <span class=\"comment\">//字符串String是类不是关键字</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//布尔型：是非</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>; <span class=\"comment\">//1位</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(flag);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>扩展</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/5.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//整数拓展 进制  二进制（0b开头）  十进制   八进制（0开头）  十六进制（0x开头）</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i1</span> <span class=\"operator\">=</span> <span class=\"number\">0b10</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i2</span> <span class=\"operator\">=</span> <span class=\"number\">010</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i3</span> <span class=\"operator\">=</span> <span class=\"number\">0x10</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(i1);</span><br><span class=\"line\">        System.out.println(i2);</span><br><span class=\"line\">        System.out.println(i3);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===========================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//==================================================</span></span><br><span class=\"line\">        <span class=\"comment\">//浮点数拓展    银行业务表示（钱的计算）</span></span><br><span class=\"line\">        <span class=\"comment\">//BigDecimal   数学工具类（如果需要计算，而且不能让它有误差就使用这个类）</span></span><br><span class=\"line\">        <span class=\"comment\">//最好完全避免使用浮点数进行比较</span></span><br><span class=\"line\">        <span class=\"comment\">//==================================================</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">1.1f</span>;</span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> <span class=\"number\">1.1d</span>;</span><br><span class=\"line\">        System.out.println(d == f);    <span class=\"comment\">//false</span></span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">f1</span> <span class=\"operator\">=</span> <span class=\"number\">12544524154441f</span>;</span><br><span class=\"line\">        <span class=\"type\">float</span> <span class=\"variable\">f2</span> <span class=\"operator\">=</span> f1 + <span class=\"number\">1</span>;</span><br><span class=\"line\">        System.out.println(f1 == f2);       <span class=\"comment\">//true(精度丢失)</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===========================&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 字符扩展</span></span><br><span class=\"line\">        <span class=\"type\">char</span> c1=<span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"type\">char</span> c2=<span class=\"string\">&#x27;中&#x27;</span>;</span><br><span class=\"line\">        <span class=\"comment\">//我们通过单引号来表示字符常量</span></span><br><span class=\"line\">        System.out.println(c1);</span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)c1);</span><br><span class=\"line\">        System.out.println(c2);</span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)c2);</span><br><span class=\"line\">        <span class=\"comment\">//强制转换可以把字符转换成数字，所有的字符本质还是数字</span></span><br><span class=\"line\">        <span class=\"comment\">// Unicode 编码表：97=a 65=A  （本质上还是数字）</span></span><br><span class=\"line\">        <span class=\"comment\">// 2字节    65536字符  Excel最长有2的16次方=65536</span></span><br><span class=\"line\">        <span class=\"comment\">//U0000   UFFFF</span></span><br><span class=\"line\">        <span class=\"type\">char</span> c3=<span class=\"string\">&#x27;\\u0061&#x27;</span>;</span><br><span class=\"line\">        System.out.println(c3);<span class=\"comment\">//a</span></span><br><span class=\"line\">        <span class=\"comment\">//转义字符（转义字符它有特殊的意思）</span></span><br><span class=\"line\">        <span class=\"comment\">// \\t    制表符</span></span><br><span class=\"line\">        <span class=\"comment\">// \\n    换行</span></span><br><span class=\"line\">        <span class=\"comment\">//  转义字符有非常的多，可以自己去查询一下</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello\\tWorld&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Hello\\nWorld&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===============================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sa</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">        String sb=<span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(<span class=\"string\">&quot;Hello World&quot;</span>);</span><br><span class=\"line\">        System.out.println(sa==sb);    <span class=\"comment\">//false    两个对象是不同的</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">sc</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Hello World&quot;</span>;</span><br><span class=\"line\">        String sd=<span class=\"string\">&quot;Hello World&quot;</span>;</span><br><span class=\"line\">        System.out.println(sc==sd);    <span class=\"comment\">//true</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//布尔值扩展</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> flag=<span class=\"literal\">true</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag==<span class=\"literal\">true</span>)&#123;&#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (flag)&#123;&#125;  <span class=\"comment\">//省略</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3-2-引用类型（reference-type）\"><a href=\"#3-2-引用类型（reference-type）\" class=\"headerlink\" title=\"3-2 引用类型（reference type）\"></a>3-2 引用类型（reference type）</h3><p>类  接口  数组</p>\n<h3 id=\"3-3-类型转换\"><a href=\"#3-3-类型转换\" class=\"headerlink\" title=\"3-3 类型转换\"></a>3-3 类型转换</h3><p>类型从low———-&gt;high次序：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">低 ------------------------------------&gt; 高</span><br><span class=\"line\">byte,short,char—&gt; int —&gt; long—&gt; float —&gt; double</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"3-3-1-自动类型转换\"><a href=\"#3-3-1-自动类型转换\" class=\"headerlink\" title=\"3-3-1 自动类型转换\"></a>3-3-1 自动类型转换</h4><p>自动类型转换：容量小的数据类型可以<strong>自动</strong>转换为容量大的数据类型。</p>\n<h4 id=\"3-3-2-强制类型转换\"><a href=\"#3-3-2-强制类型转换\" class=\"headerlink\" title=\"3-3-2 强制类型转换\"></a>3-3-2 强制类型转换</h4><p>强制类型转换，又被称为造型，用于显式的转换一个数值的类型.</p>\n<blockquote>\n<p>隐含强制转换</p>\n</blockquote>\n<ul>\n<li>可能的默认类型是int。</li>\n<li>小数默认是双精度浮点型double，在定义浮点类型时必须在数字下面跟上 F 或者 f。</li>\n</ul>\n<h4 id=\"3-3-3-常见的错误和问题\"><a href=\"#3-3-3-常见的错误和问题\" class=\"headerlink\" title=\"3-3-3 常见的错误和问题\"></a>3-3-3 常见的错误和问题</h4><ul>\n<li>操作比较大的数时，要留意是否溢出，尤其是整数操作时；</li>\n<li>long类型使用大写L不要用小写。</li>\n</ul>\n<h4 id=\"3-3-4-拓展：JDK7扩展\"><a href=\"#3-3-4-拓展：JDK7扩展\" class=\"headerlink\" title=\"3-3-4 拓展：JDK7扩展\"></a>3-3-4 拓展：JDK7扩展</h4><ul>\n<li>JDK7新特性: 二进制整数<br>JDK7为我们直接提供了二进制整数的类型。<br>以0b开头即可。</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//例如：int a = 0b0101：</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>JDK7新特性：下划线分隔符</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//例如：int b = 1_2345_6789;</span><br></pre></td></tr></table></figure>\n\n<p>根据特性，我们能够很容易地知道这是1亿2345万6789。</p>\n<ul>\n<li>注意点：<br>1.不能把布尔值进行转换<br>2.不能把对象类型转换为不相干的类型<br>3.在把高容量转换到低容量的时候，强制转换<br>4.转换的时候可能存在内存溢出，或者精度问题！</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/6.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//类型转换</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">128</span>;</span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> (<span class=\"type\">byte</span>)i; <span class=\"comment\">//内存溢出</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//自动类型转换  低--&gt;高</span></span><br><span class=\"line\">        System.out.println(i); <span class=\"comment\">//128</span></span><br><span class=\"line\">        System.out.println(b); <span class=\"comment\">//-128</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)<span class=\"number\">23.7</span>); <span class=\"comment\">//23  //精度问题</span></span><br><span class=\"line\">        System.out.println((<span class=\"type\">int</span>)-<span class=\"number\">45.89f</span>); <span class=\"comment\">//-45  //精度问题</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;a&#x27;</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> c+<span class=\"number\">1</span>;</span><br><span class=\"line\">        System.out.println(d); <span class=\"comment\">//98</span></span><br><span class=\"line\">        System.out.println((<span class=\"type\">char</span>)d); <span class=\"comment\">//b</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//===================================================</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//操作比较大的数，注意溢出</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//JDK7新特性，数字之间可以用下划线分割</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> <span class=\"number\">10_0000_0000</span>;</span><br><span class=\"line\">        System.out.println(money); <span class=\"comment\">//1000000000(10 亿） 不会输出下划线</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">years</span> <span class=\"operator\">=</span> <span class=\"number\">20</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">total</span> <span class=\"operator\">=</span> money*years;</span><br><span class=\"line\">        System.out.println(total); <span class=\"comment\">//-1474836480 ,计算时内存溢出</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;============================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">total2</span> <span class=\"operator\">=</span> money*years; <span class=\"comment\">//-1474836480 默认是int，转换之前已经存在问题</span></span><br><span class=\"line\">        <span class=\"type\">long</span> <span class=\"variable\">total3</span> <span class=\"operator\">=</span> money*((<span class=\"type\">long</span>)years);<span class=\"comment\">//先将一个数转换为long</span></span><br><span class=\"line\">        System.out.println(total2);   <span class=\"comment\">//-1474836480</span></span><br><span class=\"line\">        System.out.println(total3);   <span class=\"comment\">//20000000000</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"04、变量与常量\"><a href=\"#04、变量与常量\" class=\"headerlink\" title=\"04、变量与常量\"></a>04、变量与常量</h2><h3 id=\"4-1-变量\"><a href=\"#4-1-变量\" class=\"headerlink\" title=\"4-1 变量\"></a>4-1 变量</h3><img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20221208094727144-1088422726.png\" class=\"\" title=\"2291368-20221208094727144-1088422726\">\n\n<h4 id=\"4-1-1-变量作用域\"><a href=\"#4-1-1-变量作用域\" class=\"headerlink\" title=\"4-1-1 变量作用域\"></a>4-1-1 变量作用域</h4><ul>\n<li>类变量</li>\n<li>实例变量</li>\n<li>局部变量</li>\n</ul>\n<h4 id=\"4-1-2-变量的命名规范\"><a href=\"#4-1-2-变量的命名规范\" class=\"headerlink\" title=\"4-1-2 变量的命名规范\"></a>4-1-2 变量的命名规范</h4><ul>\n<li>所有的变量、方法、类名：见名知意</li>\n<li>类成员变量：首字母小写和驼峰原则（lastName）</li>\n<li>局部变量：首字母小写和驼峰原则（lastName）</li>\n<li>常量：大写字母和下划线（MAX_VALUE）</li>\n<li>类名：首字母大写和驼峰原则(HelloWorld)</li>\n<li>方法名：首字母小写和驼峰原则</li>\n</ul>\n<h4 id=\"4-1-3-注意点\"><a href=\"#4-1-3-注意点\" class=\"headerlink\" title=\"4-1-3 注意点\"></a>4-1-3 注意点</h4><ul>\n<li>实例变量：从属于对象；可以理解为从属于一个类，如果不自行初始化，就会变成这个类型的默认值。</li>\n<li>所有的数值类型初始化，一般是0  0.0    u00000</li>\n<li>布尔值：默认是false</li>\n<li>除了基本类型，其余的默认值都是null </li>\n<li>局部变量是在方法里面的；必须声明和初始化值</li>\n</ul>\n<h3 id=\"4-2-常量\"><a href=\"#4-2-常量\" class=\"headerlink\" title=\"4-2 常量\"></a>4-2 常量</h3><ul>\n<li>常量名一般使用大写字符</li>\n<li>final 常量名 = 值;</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/6.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo04</span> &#123;</span><br><span class=\"line\">    String name;     <span class=\"comment\">// 实例变量</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"comment\">//类变量  static（关键字）从属于类</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"type\">double</span> <span class=\"variable\">salary</span> <span class=\"operator\">=</span> <span class=\"number\">2500</span>;   <span class=\"comment\">//类变量</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">double</span> <span class=\"variable\">PI</span> <span class=\"operator\">=</span> <span class=\"number\">3.14</span> ;  <span class=\"comment\">//常量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">2</span>;   <span class=\"comment\">//局部变量</span></span><br><span class=\"line\">        <span class=\"type\">Demo04</span> <span class=\"variable\">demo04</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Demo04</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(demo04.name);  <span class=\"comment\">//null</span></span><br><span class=\"line\">        System.out.println(demo04.age);  <span class=\"comment\">//0</span></span><br><span class=\"line\">        System.out.println(demo04.salary);  <span class=\"comment\">//2500.0</span></span><br><span class=\"line\">        System.out.println(a*PI);  <span class=\"comment\">//6.28</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"05、运算符\"><a href=\"#05、运算符\" class=\"headerlink\" title=\"05、运算符\"></a>05、运算符</h2><p>java 语言支持如下运算符</p>\n<ul>\n<li>算数运算符 :+ ，-， *， /，%, ++ ，—</li>\n<li>赋值运算符: =</li>\n<li>关系运算符：&gt;，&lt;, &gt;=,&lt;=,==,!= instanceof</li>\n<li>逻辑运算符： &amp;&amp;，|| ，！</li>\n<li>位运算符：&amp;，| ，^, ~ ，&gt;&gt;,&lt;&lt;,&gt;&gt;&gt;</li>\n<li>条件运算符？：</li>\n<li>扩展赋值元芳：+=，-=，*=，/=</li>\n</ul>\n<p>尊重原创：（口诀）转自<a href=\"http://lasombra.iteye.com/blog/991662\">http://lasombra.iteye.com/blog/991662</a><br>单目乘除位关系，逻辑三目后赋值。 </p>\n<p>单目：单目运算符+ –(负数) ++ – 等<br>乘除：算数单目运算符* / % + -<br>位：位移单目运算符&lt;&lt; &gt;&gt;<br>关系：关系单目运算符&gt; &lt; &gt;= &lt;= == !=<br>逻辑：逻辑单目运算符&amp;&amp; || &amp; | ^<br>三目：三目单目运算符A &gt; B ? X : Y<br>后：无意义，仅仅为了凑字数<br>赋值：赋值=</p>\n<blockquote>\n<p>扩展</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> operator;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/8.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo05</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Math 运算工具类</span></span><br><span class=\"line\">    \tSystem.out.println(Math.pow(<span class=\"number\">2</span>,<span class=\"number\">3</span>));  <span class=\"comment\">//8.0</span></span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"number\">3</span>;</span><br><span class=\"line\">\t\t<span class=\"comment\">//短路运算</span></span><br><span class=\"line\">        System.out.println(c&gt;<span class=\"number\">5</span>&amp;&amp;c++&gt;<span class=\"number\">10</span>);  <span class=\"comment\">//c++&gt;10不执行</span></span><br><span class=\"line\">        System.out.println(c);  <span class=\"comment\">//3</span></span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//位运算        </span></span><br><span class=\"line\">        System.out.println(<span class=\"number\">2</span>&lt;&lt;<span class=\"number\">3</span>);   <span class=\"comment\">//左移三位   00010   ===&gt;  10000</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">//字符串连接符 +</span></span><br><span class=\"line\">        System.out.println(a+b);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;&quot;</span>+a+b);  <span class=\"comment\">//1020  加号两侧出现字符串则转为String进行拼接</span></span><br><span class=\"line\">        System.out.println(a+b+<span class=\"string\">&quot;&quot;</span>);  <span class=\"comment\">//30</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"06、包机制与JavaDoc\"><a href=\"#06、包机制与JavaDoc\" class=\"headerlink\" title=\"06、包机制与JavaDoc\"></a>06、包机制与JavaDoc</h2><h3 id=\"6-1-包机制（package）\"><a href=\"#6-1-包机制（package）\" class=\"headerlink\" title=\"6-1 包机制（package）\"></a>6-1 包机制（package）</h3><p>一般利用公司的域名倒置作为包名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.baidu.www;   </span><br><span class=\"line\">package com.Q.base;       //package pkg1[. pkg2[. pkg3……]]；</span><br></pre></td></tr></table></figure>\n\n\n<p>导入包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import package.pkg1.pk.class.*；    //*表示通配符，导入该包全部内容</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"6-2-JavaDoc\"><a href=\"#6-2-JavaDoc\" class=\"headerlink\" title=\"6-2 JavaDoc\"></a>6-2 JavaDoc</h3><ul>\n<li> JavaDoc命令行实现步骤</li>\n</ul>\n<ol>\n<li>首先打开cmd命令行窗口 ，切到需要生成文档的Java代码所在文件夹下。</li>\n<li>输入JavaDoc命令行，生成HTML文件。<code>javadoc -encoding UTF-8 -charset UTF-8 Doc.java</code></li>\n</ol>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153409714-1355163455.png\" class=\"\" title=\"2291368-20220111153409714-1355163455\">\n\n<ul>\n<li>IDEL编辑器文档生成步骤</li>\n</ul>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153243576-122447391.png\" class=\"\" title=\"2291368-20220111153243576-122447391\">\n\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220111153253987-2115695199.png\" class=\"\" title=\"2291368-20220111153253987-2115695199\">\n\n<h2 id=\"07、Scanner类\"><a href=\"#07、Scanner类\" class=\"headerlink\" title=\"07、Scanner类\"></a>07、Scanner类</h2><p>通过Scanner 类的next() 和nextLine()方法可获取输入的字符串，读取前，一般使用hasNext() 与hasNextLine()判断是否还有输入。</p>\n<ul>\n<li><p>next():</p>\n<ul>\n<li>一定要读取到有效字符后才可以结束输入。</li>\n<li>对输入有效字符之前遇到的空白，next() 方法会自动将其去掉。</li>\n<li>只有输入有效字符后才将其后面输入的空白作为分隔符或者结束符。</li>\n<li>next() 不能得到带有空格的字符串。</li>\n</ul>\n</li>\n<li><p>nextLine():</p>\n<ul>\n<li>以Enter为结束符,也就是说nextLine()方法返回的是输入回车之前的所有字符。</li>\n<li>可以获得空白。</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//创建一个扫描器对象用于接收键盘输入的数据</span></span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入数据：&quot;</span>);   <span class=\"comment\">//Hello World!</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (scanner.hasNext())&#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> scanner.next();</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;输入的数据为：&quot;</span>+str);    <span class=\"comment\">//Hello</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">\t\t<span class=\"comment\">//String str = scanner.nextLine();</span></span><br><span class=\"line\">\t\t<span class=\"comment\">//System.out.println(&quot;输入的数据为：&quot;+str);   //Hello World!</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//凡是I/O类使用完毕记得关闭以节约资源</span></span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>扩展：求平均数</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/9.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//算平均数</span></span><br><span class=\"line\">        <span class=\"type\">double</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入数据&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (scanner.hasNextDouble())&#123;  <span class=\"comment\">//输入非double类型即可结束</span></span><br><span class=\"line\">            <span class=\"type\">double</span> <span class=\"variable\">d</span> <span class=\"operator\">=</span> scanner.nextDouble();</span><br><span class=\"line\">            count++;</span><br><span class=\"line\">            sum = sum +d;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;当前输入的为第&quot;</span>+count+<span class=\"string\">&quot;个数据为：&quot;</span>+d);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输入的&quot;</span>+count+<span class=\"string\">&quot;个数据的平均数为&quot;</span>+(sum/count));</span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"08、流程控制\"><a href=\"#08、流程控制\" class=\"headerlink\" title=\"08、流程控制\"></a>08、流程控制</h2><h3 id=\"8-1顺序结构\"><a href=\"#8-1顺序结构\" class=\"headerlink\" title=\"8-1顺序结构\"></a>8-1顺序结构</h3><h3 id=\"8-2选择结构\"><a href=\"#8-2选择结构\" class=\"headerlink\" title=\"8-2选择结构\"></a>8-2选择结构</h3><p><code>if结构   switch结构</code></p>\n<p>JDK7之后，switch语句中的变量类型可以是字符串  <code>比较的value值是  “name.hashCode()”</code></p>\n<p>反编译 java—-class(字节码文件)—-反编译(IDEA)</p>\n<ul>\n<li>class反编译后的代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"><span class=\"comment\">// Source code recreated from a .class file by IntelliJ IDEA</span></span><br><span class=\"line\"><span class=\"comment\">// (powered by Fernflower decompiler)</span></span><br><span class=\"line\"><span class=\"comment\">//</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwitchDemo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">SwitchDemo01</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> <span class=\"number\">65</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;李&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(grade) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">65</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩优秀&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">66</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩良好&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">67</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩及格&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">68</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;成绩不及格&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;输入不合法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">byte</span> <span class=\"variable\">var4</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(name.hashCode()) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">23376</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(name.equals(<span class=\"string\">&quot;子&quot;</span>)) &#123;</span><br><span class=\"line\">                var4 = <span class=\"number\">2</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">26408</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(name.equals(<span class=\"string\">&quot;木&quot;</span>)) &#123;</span><br><span class=\"line\">                var4 = <span class=\"number\">1</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">26446</span>:</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(name.equals(<span class=\"string\">&quot;李&quot;</span>)) &#123;</span><br><span class=\"line\">                var4 = <span class=\"number\">0</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span>(var4) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;李&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;木&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;子&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">default</span>:</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;未查询到名字&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>java原代码</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/10.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SwitchDemo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">grade</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27;A&#x27;</span>;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;李&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (grade) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;A&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩优秀&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;B&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩良好&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;C&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩及格&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&#x27;D&#x27;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;成绩不及格&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;   <span class=\"comment\">//不加上case会出现穿透现象</span></span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;输入不合法&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (name)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;李&quot;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;李&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;木&quot;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;木&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"string\">&quot;子&quot;</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;子&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;未查询到名字&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-3循环结构\"><a href=\"#8-3循环结构\" class=\"headerlink\" title=\"8-3循环结构\"></a>8-3循环结构</h3><p><code>while循环    do while循环    for循环</code></p>\n<blockquote>\n<p>小练习1 求0-100奇数和偶数和</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/10.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//求0-100奇数和偶数和</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">oddSum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">evenSum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt;= <span class=\"number\">100</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%<span class=\"number\">2</span>!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                oddSum = oddSum +i;</span><br><span class=\"line\">            &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                evenSum = evenSum +i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;奇数和：&quot;</span>+oddSum);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;偶数和：&quot;</span>+evenSum);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小练习2 输出1-1000能被5整除的整数，且每行输出三个</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/10.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">//输出1-1000能被5整除的整数，且每行输出三个</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">1000</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%<span class=\"number\">5</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                System.out.print(i +<span class=\"string\">&quot;\\t&quot;</span>);   <span class=\"comment\">//水平制表转义字符</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%(<span class=\"number\">5</span>*<span class=\"number\">3</span>)==<span class=\"number\">0</span>)&#123;    <span class=\"comment\">//注意if (i%5*3==0)错误, % 优先级与 * 同级，从左向右依次运算</span></span><br><span class=\"line\"><span class=\"comment\">//                System.out.println();    //与print区别输出后换行，print输出后不换行</span></span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;\\n&quot;</span>);   <span class=\"comment\">//换行转义字符</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小练习3 输出9*9乘法表</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo04</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//9*9乘法表</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">9</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; j &lt;= i; j++) &#123;</span><br><span class=\"line\">                System.out.print(i+<span class=\"string\">&quot;*&quot;</span>+j+<span class=\"string\">&quot;=&quot;</span>+i*j+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>小练习4 打印5*5正三角形</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * Created by Q on 2022/1/11.</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class TextDemo &#123;</span><br><span class=\"line\">    public static void main(String[] args) &#123;</span><br><span class=\"line\">        //打印5*5正三角形</span><br><span class=\"line\">        for (int i = 1; i &lt;= 5; i++) &#123;</span><br><span class=\"line\">            for (int j = 5; j &gt;= i; j--) &#123;</span><br><span class=\"line\">                System.out.print(&quot; &quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for (int j = 1; j &lt;= i; j++) &#123;</span><br><span class=\"line\">                System.out.print(&quot;*&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            for (int j = 2; j &lt;= i; j++) &#123;</span><br><span class=\"line\">                System.out.print(&quot;*&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<blockquote>\n<p>增强for循环</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ForDemo05</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] numbers = &#123;<span class=\"number\">1</span>,<span class=\"number\">0</span>,<span class=\"number\">2</span>,<span class=\"number\">4</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">4</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(numbers[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===================&quot;</span>);</span><br><span class=\"line\">\t\t<span class=\"comment\">//遍历数组或集合</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> x:numbers)&#123;</span><br><span class=\"line\">            System.out.println(x);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"8-4Break-amp-Continue\"><a href=\"#8-4Break-amp-Continue\" class=\"headerlink\" title=\"8-4Break &amp; Continue\"></a>8-4Break &amp; Continue</h3><blockquote>\n<p>break</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BreakDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i&lt;<span class=\"number\">100</span>)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i==<span class=\"number\">30</span>)</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;  <span class=\"comment\">//终止循环</span></span><br><span class=\"line\">            System.out.println(i);  <span class=\"comment\">//输出1-29</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>continue</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.struct;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ContinueDemo</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> i=<span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (i&lt;<span class=\"number\">30</span>)&#123;</span><br><span class=\"line\">            i++;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (i%<span class=\"number\">10</span>==<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                System.out.println();</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;  <span class=\"comment\">//结束本次循环，继续执行下一次循环</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.print(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>对比         return结束方法</p>\n</blockquote>\n<h2 id=\"09、方法\"><a href=\"#09、方法\" class=\"headerlink\" title=\"09、方法\"></a>09、方法</h2><p>1定义</p>\n<p>2调用</p>\n<p>3重载—在一个类中，相同的函数名，参数不同</p>\n<p>4命令行传参</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/11.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo03</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; args.length; i++) &#123;</span><br><span class=\"line\">            System.out.println(args[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method&gt;javac Demo03.java</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method&gt;java Demo03</span><br><span class=\"line\">错误: 找不到或无法加载主类 Demo03</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q\\method&gt;cd ../        //切换到src目录下</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com\\Q&gt;cd ../</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src\\com&gt;cd ../</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src&gt;java com.Q.method.Demo03    //记得加包名</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src&gt;java com.Q.method.Demo03 this is Q    //传参</span><br><span class=\"line\">this</span><br><span class=\"line\">is</span><br><span class=\"line\">Q</span><br><span class=\"line\"></span><br><span class=\"line\">E:\\ProFiles\\IdeaProjects\\JavaSE\\基础语法\\src&gt;</span><br></pre></td></tr></table></figure>\n\n<p>5可变参数</p>\n<p>6递归</p>\n<blockquote>\n<p>小练习 计算器  </p>\n</blockquote>\n<p> <strong>待完善</strong></p>\n<p> <strong>待完善</strong></p>\n<h2 id=\"10、数组\"><a href=\"#10、数组\" class=\"headerlink\" title=\"10、数组\"></a>10、数组</h2><ol>\n<li>声明，创建</li>\n<li>三种初始化以及内存分析</li>\n<li>越界</li>\n<li>使用</li>\n<li>二维数组</li>\n<li>Arrays类</li>\n</ol>\n<blockquote>\n<p>扩展1 稀疏数组</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.array;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/14.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo08</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t1\t2\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\"><span class=\"comment\">//        0\t0\t0\t0\t0</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] arrays = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[<span class=\"number\">5</span>][<span class=\"number\">5</span>];</span><br><span class=\"line\">        arrays[<span class=\"number\">2</span>][<span class=\"number\">1</span>] = <span class=\"number\">1</span>;</span><br><span class=\"line\">        arrays[<span class=\"number\">2</span>][<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出原数组&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span>[] arg : arrays) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> a : arg) &#123;</span><br><span class=\"line\">                System.out.print(a+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;====================&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//        获取有效值个数</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">sum</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; <span class=\"number\">5</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrays[i][j]!=<span class=\"number\">0</span>) sum++;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;有效值个数：&quot;</span>+sum);   <span class=\"comment\">// 有效值个数：2</span></span><br><span class=\"line\"><span class=\"comment\">//        构建稀疏数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] arrays2 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[sum+<span class=\"number\">1</span>][<span class=\"number\">3</span>];</span><br><span class=\"line\">        arrays2[<span class=\"number\">0</span>][<span class=\"number\">0</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">        arrays2[<span class=\"number\">0</span>][<span class=\"number\">1</span>] = <span class=\"number\">5</span>;</span><br><span class=\"line\">        arrays2[<span class=\"number\">0</span>][<span class=\"number\">2</span>] = <span class=\"number\">2</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">count</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arrays.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arrays[i].length; j++) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (arrays[i][j]!=<span class=\"number\">0</span>)&#123;</span><br><span class=\"line\">                    count ++;</span><br><span class=\"line\">                    arrays2[count][<span class=\"number\">0</span>] = i;</span><br><span class=\"line\">                    arrays2[count][<span class=\"number\">1</span>] = j;</span><br><span class=\"line\">                    arrays2[count][<span class=\"number\">2</span>] = arrays[i][j];</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//遍历输出稀疏数组</span></span><br><span class=\"line\"><span class=\"comment\">//        5\t5\t2</span></span><br><span class=\"line\"><span class=\"comment\">//        2\t1\t1</span></span><br><span class=\"line\"><span class=\"comment\">//        2\t2\t2</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出稀疏数组：&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; arrays2.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; arrays2[i].length; j++) &#123;</span><br><span class=\"line\">                System.out.print(arrays2[i][j]+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;======================&quot;</span>);</span><br><span class=\"line\"><span class=\"comment\">//        还原数组</span></span><br><span class=\"line\">        <span class=\"type\">int</span>[][] array3 = <span class=\"keyword\">new</span> <span class=\"title class_\">int</span>[arrays2[<span class=\"number\">0</span>][<span class=\"number\">0</span>]][arrays2[<span class=\"number\">0</span>][<span class=\"number\">1</span>]];</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt; arrays2.length; i++) &#123;</span><br><span class=\"line\">            array3[arrays2[i][<span class=\"number\">0</span>]][arrays2[i][<span class=\"number\">1</span>]] =arrays2[i][<span class=\"number\">2</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;输出还原数组&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span>[] arg : array3) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> a : arg) &#123;</span><br><span class=\"line\">                System.out.print(a+<span class=\"string\">&quot;\\t&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>扩展2  冒泡排序</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.Q.array;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Arrays;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/14.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo07</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] arr = &#123;<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"number\">9</span>,<span class=\"number\">4</span>,<span class=\"number\">5</span>,<span class=\"number\">6</span>,<span class=\"number\">3</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>,<span class=\"number\">5</span>&#125;;</span><br><span class=\"line\">        <span class=\"type\">int</span>[] result = sort(arr);</span><br><span class=\"line\">        System.out.println(Arrays.toString(result));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">//    冒泡排序</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span>[] sort(<span class=\"type\">int</span>[] array)&#123;</span><br><span class=\"line\"><span class=\"comment\">//        优化</span></span><br><span class=\"line\">        <span class=\"type\">boolean</span> <span class=\"variable\">flag</span> <span class=\"operator\">=</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> temp;</span><br><span class=\"line\">        <span class=\"comment\">//外层循环表示比较的趟数</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; array.length-<span class=\"number\">1</span>; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; j &lt; array.length-i-<span class=\"number\">1</span>; j++) &#123;</span><br><span class=\"line\">                <span class=\"comment\">//注意是j表示比较相邻两数的下标</span></span><br><span class=\"line\">                <span class=\"keyword\">if</span> (array[j]&gt;array[j+<span class=\"number\">1</span>])&#123;</span><br><span class=\"line\">                    temp = array[j];</span><br><span class=\"line\">                    array[j] = array[j+<span class=\"number\">1</span>];</span><br><span class=\"line\">                    array[j+<span class=\"number\">1</span>] = temp;</span><br><span class=\"line\">                    flag = <span class=\"literal\">true</span>;  <span class=\"comment\">//进行了交换，标志改变</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"><span class=\"comment\">//            优化方法一</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (!flag)&#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;  <span class=\"comment\">//终止循环</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"comment\">//        优化方法二</span></span><br><span class=\"line\"><span class=\"comment\">//        if (!flag)&#123;  //某趟没有进行一次交换，直接不用继续比较</span></span><br><span class=\"line\"><span class=\"comment\">//            return array;</span></span><br><span class=\"line\"><span class=\"comment\">//        &#125;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> array;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Java面向对象\"><a href=\"#Java面向对象\" class=\"headerlink\" title=\"Java面向对象\"></a>Java面向对象</h1><blockquote>\n<p>面向对象（Object-Oriented Programming）编程本质：</p>\n</blockquote>\n<p>以类的方式组织代码，以对象的方式封装数据</p>\n<blockquote>\n<p>三大特性</p>\n</blockquote>\n<p>封装</p>\n<p>继承</p>\n<p>多态</p>\n<h2 id=\"01、类与对象的创建\"><a href=\"#01、类与对象的创建\" class=\"headerlink\" title=\"01、类与对象的创建\"></a>01、类与对象的创建</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/15.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo01</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\"><span class=\"comment\">//        Student.say();   静态方法可直接调用</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//        非静态方法要先实例化</span></span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        student.say();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//静态方法和类一起加载</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">a</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\"><span class=\"comment\">//        b();</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//非静态方法是在类实例化后才存在的，故不能有静态方法调用</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">b</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>值传递</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo01;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/16.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Demo02</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//值传递</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">10</span>;</span><br><span class=\"line\">        System.out.println(a);  <span class=\"comment\">//10</span></span><br><span class=\"line\">        <span class=\"type\">Demo02</span> <span class=\"variable\">demo02</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Demo02</span>();</span><br><span class=\"line\">        demo02.change(a);</span><br><span class=\"line\">        System.out.println(a);  <span class=\"comment\">//10</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">change</span><span class=\"params\">(<span class=\"type\">int</span> a)</span>&#123;</span><br><span class=\"line\">        a = <span class=\"number\">1</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"02、构造器\"><a href=\"#02、构造器\" class=\"headerlink\" title=\"02、构造器\"></a>02、构造器</h2><p>又叫构造方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/18.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//一个类即使什么都不写，也存在一个方法 public Person() &#123;&#125; java---&gt;class文件</span></span><br><span class=\"line\">    <span class=\"comment\">//显示的定义构造器</span></span><br><span class=\"line\">    String name;  <span class=\"comment\">//null</span></span><br><span class=\"line\">    <span class=\"type\">int</span> age;</span><br><span class=\"line\">    <span class=\"comment\">//作用：实例化初始值</span></span><br><span class=\"line\">    <span class=\"comment\">//使用new关键字必须有构造器，因为本质是在调用构造器</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//有参构造</span></span><br><span class=\"line\">    <span class=\"comment\">//使用有参构造，必须显式定义无参构造否则报错</span></span><br><span class=\"line\">    <span class=\"comment\">// Person(String)in Person cannot be applied to()</span></span><br><span class=\"line\">    <span class=\"comment\">//快捷键 alt+insert</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">(String name, <span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> \t\tPerson person = new Person(&quot;Q&quot;,10);</span></span><br><span class=\"line\"><span class=\"comment\"> \t\tSystem.out.println(person.name);</span></span><br><span class=\"line\"><span class=\"comment\"> \t\tSystem.out.println(person.age);</span></span><br><span class=\"line\"><span class=\"comment\"> \t&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>构造器：</p>\n</blockquote>\n<ul>\n<li><p>和类名相同      </p>\n</li>\n<li><p>没有返回值</p>\n</li>\n<li><p>作用：</p>\n<p>1、实例化初始值</p>\n<p>2、使用new关键字本质是在调用构造器</p>\n</li>\n<li><p>注意点：</p>\n</li>\n</ul>\n<p>​        1、使用有参构造，必须显式定义无参构造，否则报错</p>\n<p>​        2、快捷键 alt+insert</p>\n<blockquote>\n<p>扩展  创建对象内存分析</p>\n</blockquote>\n<p> <strong>待完善</strong></p>\n<p> <strong>待完善</strong></p>\n<h2 id=\"03、封装\"><a href=\"#03、封装\" class=\"headerlink\" title=\"03、封装\"></a>03、封装</h2><p>将类中属性（+少方法）私有化</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo03;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/20.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//封装</span></span><br><span class=\"line\">    <span class=\"comment\">//属性私有</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getAge</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> age;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAge</span><span class=\"params\">(<span class=\"type\">int</span> age)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (age &gt; <span class=\"number\">0</span> &amp;&amp; age &lt; <span class=\"number\">120</span>)&#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.age = age;</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.age = -<span class=\"number\">1</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"04、继承\"><a href=\"#04、继承\" class=\"headerlink\" title=\"04、继承\"></a>04、继承</h2><p>对象抽象出类     对象抽象—–&gt;类   </p>\n<p>子类抽象出父类    子类抽象——&gt;父类       子类继承父类</p>\n<h3 id=\"4-1-Object类\"><a href=\"#4-1-Object类\" class=\"headerlink\" title=\"4-1 Object类\"></a>4-1 Object类</h3><h3 id=\"4-2-super-this\"><a href=\"#4-2-super-this\" class=\"headerlink\" title=\"4-2 super  this\"></a>4-2 super  this</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo04;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/20.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//父类</span></span><br><span class=\"line\"><span class=\"comment\">//java中，所有类直接或者间接继承Object类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//私有属性不可继承</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">money</span> <span class=\"operator\">=</span> <span class=\"number\">1_0000_0000</span>;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Person_Q&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;父类无参构造&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Person&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">say</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;说话了&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//get set</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getMoney</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setMoney</span><span class=\"params\">(<span class=\"type\">int</span> money)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.money = money;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo04;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/20.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//子类（继承类）  ctrl+H：查看类继承结构</span></span><br><span class=\"line\"><span class=\"comment\">//继承父类所有方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;Student_Q&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//隐藏代码：默认调用父类无参构造</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>();  <span class=\"comment\">//只能放在子类构造器第一行</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;子类无参构造&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">print</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;Student&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test1</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        print();  <span class=\"comment\">//Student</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.print();  <span class=\"comment\">//Student</span></span><br><span class=\"line\">        <span class=\"built_in\">super</span>.print();  <span class=\"comment\">//Person</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(String name)</span>&#123;</span><br><span class=\"line\">        System.out.println(name);  <span class=\"comment\">//test_Q</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">this</span>.name);  <span class=\"comment\">//Student_Q</span></span><br><span class=\"line\">        System.out.println(<span class=\"built_in\">super</span>.name);  <span class=\"comment\">//Person_Q</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"comment\"> com.oop.Demo04.Student s1 = new com.oop.Demo04.Student();</span></span><br><span class=\"line\"><span class=\"comment\"> s1.say();</span></span><br><span class=\"line\"><span class=\"comment\"> s1.test(&quot;test_Q&quot;);</span></span><br><span class=\"line\"><span class=\"comment\"> &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>super注意点：</p>\n</blockquote>\n<p>​        1、super调用父类构造方法，必须是在构造器方法的第一个<br>​        2、super只能出现在子类或者构造方法中<br>​        3、super和this不能同时调用构造方法！</p>\n<blockquote>\n<p>VS this</p>\n</blockquote>\n<p>​        代表的对象不同：<br>​            this：本身调用者这个对象<br>​            super：代表父类对象的引用<br>​        前提不同：<br>​            this：没有继承也可以使用<br>​            super：只能在继承的条件下才可以使用<br>​        构造方法：<br>​            this：本类的构造<br>​            super：父类的构造</p>\n<h3 id=\"4-3-方法重写\"><a href=\"#4-3-方法重写\" class=\"headerlink\" title=\"4-3 方法重写\"></a>4-3 方法重写</h3><p>重写是方法的重写和属性无关</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//不是重写</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">    \t<span class=\"comment\">//父类的引用指向子类</span></span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        a.test();  <span class=\"comment\">//A==&gt;test</span></span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        b.test();  <span class=\"comment\">//B==&gt;test</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//重写</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;A==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">B</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">A</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//注解</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  <span class=\"comment\">//重写</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;B==&gt;test&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">A</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        <span class=\"type\">B</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">B</span>();</span><br><span class=\"line\">        a.test();  <span class=\"comment\">//B==&gt;test</span></span><br><span class=\"line\">        b.test();  <span class=\"comment\">//B==&gt;test</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>重写小结：要是非静态方法</p>\n</blockquote>\n<ol>\n<li><p>需要有继承关系，子类重写父类的方法！</p>\n</li>\n<li><p>方法名必须相同，参数列表必须相同</p>\n</li>\n<li><p>修饰符：</p>\n<p>范围可以扩大：public &gt; Protected &gt; Default &gt; private</p>\n</li>\n<li><p>抛出的异常：</p>\n<p>范围可以被缩小，但不能扩大；</p>\n<p>ClassNotFountException —&gt; Exception(大)</p>\n</li>\n<li><p>重写，子类的方法和父类必须要一致，方法体不同！</p>\n</li>\n</ol>\n<blockquote>\n<p>为什么需要重写？</p>\n</blockquote>\n<p>父类的功能，子类不一定需要，或者不一定满足！</p>\n<p>##05、多态</p>\n<p>多态存在的必要条件：</p>\n<ul>\n<li>继承</li>\n<li>重写 (子类重写父类方法,方法名必须相同)</li>\n<li>父类引用指向子类对象：Parent p = new Child();</li>\n</ul>\n<h2 id=\"06、instanceof关键字\"><a href=\"#06、instanceof关键字\" class=\"headerlink\" title=\"06、instanceof关键字\"></a>06、instanceof关键字</h2><blockquote>\n<p>X instanceof Y               X是否是Y的实例</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.oop.demo06.Person;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.oop.demo06.Student;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.oop.demo06.Teacher;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Application</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//Object &gt; String</span></span><br><span class=\"line\">        <span class=\"comment\">//Object &gt; Person &gt; Teacher</span></span><br><span class=\"line\">        <span class=\"comment\">//Object &gt; Person &gt; Student</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">object</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(X instanceof Y);//能不能编译通过，就取决于X和Y之间是否存在父子关系；</span></span><br><span class=\"line\">        <span class=\"comment\">//结果是true或者false ，X所指向的实例类型是Y的子类型，或者 X和 Y是有关系的</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Student);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Person);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Object);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> Teacher);<span class=\"comment\">//false</span></span><br><span class=\"line\">        System.out.println(object <span class=\"keyword\">instanceof</span> String);<span class=\"comment\">//false，String是 Object lang包下面的，更没关系了</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===================================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Student);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Person);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Object);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(person <span class=\"keyword\">instanceof</span> Teacher);<span class=\"comment\">//false</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(person instanceof String);//编译报错！string和 person同级，它是两条线</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;===================================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">student</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        System.out.println(student <span class=\"keyword\">instanceof</span> Student);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(student <span class=\"keyword\">instanceof</span> Person);<span class=\"comment\">//true</span></span><br><span class=\"line\">        System.out.println(student <span class=\"keyword\">instanceof</span> Object);<span class=\"comment\">//true</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(student instanceof Teacher);//false，编译报错！</span></span><br><span class=\"line\">                <span class=\"comment\">// instanceof是一个比较转换的过程，比较肯定是两边有关系的才会返回true或者false</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(student instanceof String);//false，编译报错！ 两者没关系会直接报错</span></span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>多态总结：</p>\n</blockquote>\n<pre><code>    1. 父类引用指向子类的对象（子类引用指向父类的对象肯定是不行的）\n    2. 把子类转换为父类，也就是向上转型：不用强制转换；\n    3. 把子类转换为父类，也就是向下转型：需要强制转换；（可能会丢失一些方法）\n    4. 方便方法的调用，减少重复的代码！简洁\n</code></pre>\n<h2 id=\"07-、static关键字小结\"><a href=\"#07-、static关键字小结\" class=\"headerlink\" title=\"07 、static关键字小结\"></a>07 、static关键字小结</h2><p>静态属性</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//static</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> age;<span class=\"comment\">//静态的变量  多线程！</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> score;<span class=\"comment\">//非静态的变量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Student</span> <span class=\"variable\">s1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>();</span><br><span class=\"line\">        System.out.println(Student.age);<span class=\"comment\">//类变量跟类中的所有实例共享</span></span><br><span class=\"line\">        <span class=\"comment\">//System.out.println(Student.score);这是不行的</span></span><br><span class=\"line\">        System.out.println(s1.age);</span><br><span class=\"line\">        System.out.println(s1.score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>静态方法</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//static</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> age;<span class=\"comment\">//静态的变量  多线程！</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">double</span> score;<span class=\"comment\">//非静态的变量</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span>&#123;<span class=\"comment\">//非静态方法可以调用静态方法里的所有东西</span></span><br><span class=\"line\">        go();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">go</span><span class=\"params\">()</span>&#123;<span class=\"comment\">//静态方法可以调用静态方法里的所有东西</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>().run();<span class=\"comment\">//对象.方法45</span></span><br><span class=\"line\">        Student.go();</span><br><span class=\"line\">        go();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>静态代码块</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Person</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//2：赋初值~</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"comment\">//代码块（匿名代码块）</span></span><br><span class=\"line\">        <span class=\"comment\">//没有名字，程序不会主动调用这些模块</span></span><br><span class=\"line\">        <span class=\"comment\">//匿名代码块：创建对象时就自动创建了，而且在构造器之前</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;匿名代码块&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//1 ： 只执行一次~</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//静态代码块</span></span><br><span class=\"line\">        <span class=\"comment\">//可以在里面加载一些初始化的数据</span></span><br><span class=\"line\">        <span class=\"comment\">//静态代码块：类一加载就直接执行，永久只执行一次</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;静态代码块&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">//3</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Person</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;构造方法&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Person</span> <span class=\"variable\">person2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Person</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">        结果：</span></span><br><span class=\"line\"><span class=\"comment\">            静态代码块</span></span><br><span class=\"line\"><span class=\"comment\">            匿名代码块</span></span><br><span class=\"line\"><span class=\"comment\">            构造方法</span></span><br><span class=\"line\"><span class=\"comment\">            =================</span></span><br><span class=\"line\"><span class=\"comment\">            匿名代码块</span></span><br><span class=\"line\"><span class=\"comment\">            构造方法</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>package的一些新特性</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//静态导入包~</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.Math.random;</span><br><span class=\"line\"><span class=\"keyword\">import</span> <span class=\"keyword\">static</span> java.lang.Math.PI;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        System.out.println(random());</span><br><span class=\"line\">        System.out.println(PI);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    final 通过final修饰的类不能被继承，就没有子类</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"08、抽象类（abstract\"><a href=\"#08、抽象类（abstract\" class=\"headerlink\" title=\"08、抽象类（abstract)\"></a>08、抽象类（abstract)</h2><ul>\n<li><p>抽象类特点</p>\n<ol>\n<li>抽象类和抽象方法都需要被abstract修饰。抽象方法一定要定义在抽象类中</li>\n<li>抽象类不可以直接创建对象，原因：调用抽象方法没有意义</li>\n<li>只有覆盖了抽象类中所有的抽象方法后，其子类才可以创建对象，否则该子类还是一个抽象类</li>\n</ol>\n</li>\n<li><p>abstract不能和哪些关键字共存?</p>\n<ol>\n<li>private 被私有的成员只能在本类中调用，而abstract强制重写抽象方法，二者冲突</li>\n<li>final final表示最终的，被修饰的类和方法不能被继承和重写，与abstract强制重写抽象方法冲突</li>\n<li>static 无意义</li>\n</ol>\n</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//abstract修饰的类为抽象类,java的类是单继承（接口可以多继承）</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Action</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//抽象方法，可以实现约束作用，让继承的子类来实现方法。</span></span><br><span class=\"line\">    <span class=\"comment\">//abstract,抽象方法，只有方法名字，没有方法的实现！</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doSomething</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    <span class=\"comment\">//抽象类不能new出对象，只能用子类去实现。</span></span><br><span class=\"line\">    <span class=\"comment\">//抽象类里可以写普通方法</span></span><br><span class=\"line\">    <span class=\"comment\">//抽象方法必须在抽象类中</span></span><br><span class=\"line\">    <span class=\"comment\">//抽象的抽象：约束</span></span><br><span class=\"line\">    <span class=\"comment\">//存在的意义，提高开发效率。</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">A</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Action</span>&#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doSomething</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"09、接口\"><a href=\"#09、接口\" class=\"headerlink\" title=\"09、接口\"></a>09、接口</h2><ul>\n<li><p><strong>接口的成员特点</strong></p>\n<ul>\n<li>成员变量：只能是常量，并且是静态的，默认有public static final修饰</li>\n<li>成员方法：只能是抽象方法，默认有public abstract修饰</li>\n<li>构造方法：接口没有构造方法</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo06;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"comment\">//接口</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">query</span><span class=\"params\">(String name)</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//接口实现类</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">UserServiceImpl</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">UserService</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">add</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delete</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">update</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">query</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"10、内部类\"><a href=\"#10、内部类\" class=\"headerlink\" title=\"10、内部类\"></a>10、内部类</h2><ol>\n<li>成员内部类</li>\n<li>静态内部类（static 修饰）</li>\n<li>局部内部类</li>\n<li>匿名内部类</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.oop.Demo07;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">out</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;外部类&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Inner</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">in</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;内部类&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//作用：获得内部类的私有属性</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">getName</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">            System.out.println(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">    public static void main(String[] args) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">        Outer outer = new Outer();</span></span><br><span class=\"line\"><span class=\"comment\">        outer.out();  //外部类</span></span><br><span class=\"line\"><span class=\"comment\">        Outer.Inner in = outer.new Inner();</span></span><br><span class=\"line\"><span class=\"comment\">        in.in();  //内部类</span></span><br><span class=\"line\"><span class=\"comment\">        in.getName();  //Q</span></span><br><span class=\"line\"><span class=\"comment\">    &#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>小疑惑  UserService userservice = new UserService()</p>\n</blockquote>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//一个Java类中可以有多个class类，但是只能有一个public class</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Outer</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">Apple</span>().eat();</span><br><span class=\"line\">        <span class=\"comment\">//匿名内部类</span></span><br><span class=\"line\">        <span class=\"type\">UserService</span> <span class=\"variable\">userservice</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UserService</span>()&#123;</span><br><span class=\"line\">            <span class=\"meta\">@Override</span></span><br><span class=\"line\">            <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">Hello</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//局部内部类</span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Apple</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">eat</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;1&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">interface</span> <span class=\"title class_\">UserService</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">Hello</span><span class=\"params\">()</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"11、类、接口、抽象类小结\"><a href=\"#11、类、接口、抽象类小结\" class=\"headerlink\" title=\"11、类、接口、抽象类小结\"></a>11、类、接口、抽象类小结</h2><blockquote>\n<p>类与类,类与接口,接口与接口的关系</p>\n</blockquote>\n<ul>\n<li>类与类：继承关系,只能单继承,可以多层继承</li>\n<li>类与接口：实现关系,可以单实现,也可以多实现。并且可以在继承一个类的同时实现多个接口</li>\n<li>接口与接口：继承关系,可以单继承,也可以多继承</li>\n</ul>\n<blockquote>\n<p>抽象类和接口的区别</p>\n</blockquote>\n<ul>\n<li><p>成员区别</p>\n<p>抽象类：</p>\n<p>成员变量：可以是变量，也可以是常量</p>\n<p>成员方法：可以是抽象类，也可以非抽象类</p>\n<p>构造方法：有</p>\n<p>接口：</p>\n<p>成员变量：只能是常量</p>\n<p>成员方法：只能是抽象类</p>\n<p>构造方法：无</p>\n</li>\n<li><p>关系区别</p>\n<p>抽象方法：</p>\n<p>类与类：继承，单继承<br>类与接口：实现，单实现，多实现<br>接口与接口：继承，单继承，多继承</p>\n</li>\n<li><p>设计理念区别</p>\n<p>抽象类：体现的是“is a ”的关系，抽象类中定义的是该继承体系的共性功能</p>\n<p>接口：体现的是“like a ”的关系，接口中定义的是该继承体系的个性功能（扩展功能）</p>\n</li>\n</ul>\n<h2 id=\"12、异常\"><a href=\"#12、异常\" class=\"headerlink\" title=\"12、异常\"></a>12、异常</h2><p>Error和Exception</p>\n<blockquote>\n<p>Exception</p>\n</blockquote>\n<h3 id=\"12-1-异常层次结构图示\"><a href=\"#12-1-异常层次结构图示\" class=\"headerlink\" title=\"12-1 异常层次结构图示\"></a>12-1 异常层次结构图示</h3><p>（引用菜鸟教程）</p>\n<img src=\"/2022/01/11/Java%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B0/2291368-20220123223242579-694787793.png\" class=\"\" title=\"2291368-20220123223242579-694787793\">\n\n<h3 id=\"12-2-关键字\"><a href=\"#12-2-关键字\" class=\"headerlink\" title=\"12-2 关键字\"></a>12-2 关键字</h3><ol>\n<li>try</li>\n<li>catch</li>\n<li>finally</li>\n<li>throw</li>\n<li>throws</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.exception;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">a</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">b</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"comment\">//Ctrl+Alt+t  快捷键：捕获结构代码</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span>&#123;<span class=\"comment\">//监控区</span></span><br><span class=\"line\">            System.out.println(a/b);   <span class=\"comment\">//Exception in thread &quot;main&quot; java.lang.ArithmeticException: / by zero</span></span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (ArithmeticException e)&#123;  <span class=\"comment\">//捕获</span></span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Error error)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Error&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Exception exception)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Exception&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">catch</span> (Throwable throwable)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;Throwable&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">finally</span> &#123;  <span class=\"comment\">//善后处理   finally可以不用，用于处理IO流等关闭资源</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;其他异常&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">输出结果：</span></span><br><span class=\"line\"><span class=\"comment\">java.lang.ArithmeticException: / by zero</span></span><br><span class=\"line\"><span class=\"comment\">其他异常</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"12-3-自定义异常\"><a href=\"#12-3-自定义异常\" class=\"headerlink\" title=\"12-3 自定义异常\"></a>12-3 自定义异常</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.exception.Demo02;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/1/23.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyException</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Exception</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> detail;</span><br><span class=\"line\">    <span class=\"comment\">//参数大于10抛异常</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyException</span><span class=\"params\">(<span class=\"type\">int</span> detail)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.detail = detail;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;MyException&#123;&quot;</span> + <span class=\"string\">&quot;detail=&#x27;&quot;</span> + detail + <span class=\"string\">&#x27;\\&#x27;&#x27;</span> + <span class=\"string\">&#x27;&#125;&#x27;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//测试</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Test</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//可能出现异常的方法</span></span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">test</span><span class=\"params\">(<span class=\"type\">int</span> a)</span> <span class=\"keyword\">throws</span> MyException&#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;参数：&quot;</span>+a);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (a &gt; <span class=\"number\">10</span>)&#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyException</span>(a);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;OK&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            test(<span class=\"number\">14</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (MyException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*</span></span><br><span class=\"line\"><span class=\"comment\">参数：14</span></span><br><span class=\"line\"><span class=\"comment\">MyException&#123;detail=&#x27;14&#x27;&#125;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"后记（有感）\"><a href=\"#后记（有感）\" class=\"headerlink\" title=\"后记（有感）\"></a>后记（有感）</h1><p>从2022年1月1号准备开始学习，至今23号，经过23天（实际最多只需要一周就可以搞定，打脸自己flag）断断续续的学习，课程是B站狂神说Java的JavaSE课程，记录了这么一份笔记，希望可以用来以后回顾。能感觉出来这是一份速学课程，相对而言少了很多知识点，适合急找工作速成。后续再找点资料补充完善java体系。</p>\n<blockquote>\n<p>补充待续</p>\n</blockquote>\n"},{"title":"Windows下Java开发环境安装与配置教程","copyright":true,"date":"2022-06-29T11:35:00.000Z","_content":"\n1. 下载安装包\n\n   https://www.oracle.com/java/technologies/downloads/\n\n2. 双击exe文件进入安装\n\n3. 选择指定目录安装jdk\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193030780-141851887.png)\n\n4. 选择指定目录安装jre\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193051710-860567096.png)\n\n5. 安装完成\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193111863-1620087635.png)\n\n6. 配置环境变量\n\n   - 我的电脑右击，再点击属性找到高级系统设置，再点击环境变量进行配置。\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193139564-1366743433.png)\n\n   - 配置\n      ```\n           变量名：JAVA_HOME\n           变量值：D:\\Environment\\Java\\jdk1.8.0_281   // 要根据自己的实际路径配置\n      \n           变量名：Path\n           变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n      ```\n      ![](Windows下Java开发环境安装与配置教程/2291368-20220629193204294-338728882.png)\n\n\n7. 测试\n\n   windows键+R键，键入cmd；\n\n   键入命令: java -version、java、javac 几个命令，出现以下信息，说明环境变量配置成功；\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193230336-1133392836.png)\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193243736-1465458166.png)\n","source":"_posts/Windows下Java开发环境安装与配置教程.md","raw":"---\ntitle: 'Windows下Java开发环境安装与配置教程'\ncopyright: true\ndate: '2022-06-29 19:35'\ntags: 'Java'\ncategories: '环境'\n---\n\n1. 下载安装包\n\n   https://www.oracle.com/java/technologies/downloads/\n\n2. 双击exe文件进入安装\n\n3. 选择指定目录安装jdk\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193030780-141851887.png)\n\n4. 选择指定目录安装jre\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193051710-860567096.png)\n\n5. 安装完成\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193111863-1620087635.png)\n\n6. 配置环境变量\n\n   - 我的电脑右击，再点击属性找到高级系统设置，再点击环境变量进行配置。\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193139564-1366743433.png)\n\n   - 配置\n      ```\n           变量名：JAVA_HOME\n           变量值：D:\\Environment\\Java\\jdk1.8.0_281   // 要根据自己的实际路径配置\n      \n           变量名：Path\n           变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;\n      ```\n      ![](Windows下Java开发环境安装与配置教程/2291368-20220629193204294-338728882.png)\n\n\n7. 测试\n\n   windows键+R键，键入cmd；\n\n   键入命令: java -version、java、javac 几个命令，出现以下信息，说明环境变量配置成功；\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193230336-1133392836.png)\n\n   ![](Windows下Java开发环境安装与配置教程/2291368-20220629193243736-1465458166.png)\n","slug":"Windows下Java开发环境安装与配置教程","published":1,"updated":"2022-12-08T10:08:16.147Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfto0018sw6x93cod165","content":"<ol>\n<li><p>下载安装包</p>\n<p><a href=\"https://www.oracle.com/java/technologies/downloads/\">https://www.oracle.com/java/technologies/downloads/</a></p>\n</li>\n<li><p>双击exe文件进入安装</p>\n</li>\n<li><p>选择指定目录安装jdk</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193030780-141851887.png\" class=\"\"></li>\n<li><p>选择指定目录安装jre</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193051710-860567096.png\" class=\"\"></li>\n<li><p>安装完成</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193111863-1620087635.png\" class=\"\"></li>\n<li><p>配置环境变量</p>\n<ul>\n<li>我的电脑右击，再点击属性找到高级系统设置，再点击环境变量进行配置。</li>\n</ul>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193139564-1366743433.png\" class=\"\">\n\n<ul>\n<li>配置 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量名：JAVA_HOME</span><br><span class=\"line\">变量值：D:\\Environment\\Java\\jdk1.8.0_281   // 要根据自己的实际路径配置</span><br><span class=\"line\">      </span><br><span class=\"line\">变量名：Path</span><br><span class=\"line\">变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</span><br></pre></td></tr></table></figure>\n <img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193204294-338728882.png\" class=\"\"></li>\n</ul>\n</li>\n</ol>\n<ol start=\"7\">\n<li><p>测试</p>\n<p>windows键+R键，键入cmd；</p>\n<p>键入命令: java -version、java、javac 几个命令，出现以下信息，说明环境变量配置成功；</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193230336-1133392836.png\" class=\"\">\n\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193243736-1465458166.png\" class=\"\"></li>\n</ol>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<ol>\n<li><p>下载安装包</p>\n<p><a href=\"https://www.oracle.com/java/technologies/downloads/\">https://www.oracle.com/java/technologies/downloads/</a></p>\n</li>\n<li><p>双击exe文件进入安装</p>\n</li>\n<li><p>选择指定目录安装jdk</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193030780-141851887.png\" class=\"\"></li>\n<li><p>选择指定目录安装jre</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193051710-860567096.png\" class=\"\"></li>\n<li><p>安装完成</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193111863-1620087635.png\" class=\"\"></li>\n<li><p>配置环境变量</p>\n<ul>\n<li>我的电脑右击，再点击属性找到高级系统设置，再点击环境变量进行配置。</li>\n</ul>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193139564-1366743433.png\" class=\"\">\n\n<ul>\n<li>配置 <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">变量名：JAVA_HOME</span><br><span class=\"line\">变量值：D:\\Environment\\Java\\jdk1.8.0_281   // 要根据自己的实际路径配置</span><br><span class=\"line\">      </span><br><span class=\"line\">变量名：Path</span><br><span class=\"line\">变量值：%JAVA_HOME%\\bin;%JAVA_HOME%\\jre\\bin;</span><br></pre></td></tr></table></figure>\n <img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193204294-338728882.png\" class=\"\"></li>\n</ul>\n</li>\n</ol>\n<ol start=\"7\">\n<li><p>测试</p>\n<p>windows键+R键，键入cmd；</p>\n<p>键入命令: java -version、java、javac 几个命令，出现以下信息，说明环境变量配置成功；</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193230336-1133392836.png\" class=\"\">\n\n<img src=\"/2022/06/29/Windows%E4%B8%8BJava%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629193243736-1465458166.png\" class=\"\"></li>\n</ol>\n"},{"title":"Markdown语法","date":"2022-02-22T12:00:53.000Z","sticky":null,"pic":null,"comments":1,"toc":true,"expire":true,"only":["home","category","tag"],"_content":"\n# Markdown语法（一级标题）\n\n## 标题（二级标题）\n\n### 三级标题\n\n#### 四级标题\n\n## 字体\n\n**加粗**\n\n*斜体*\n\n***斜体加粗***\n\n~~删除线~~\n\n## 引用\n\n> 你好，2022！ \n\n## 分割线\n\n到此！\n\n---\n\n## 图片\n\n1. 引用本地图片\n\n   ![2291368-20220103211113078-6410979](Markdown语法/2291368-20220103211113078-6410979.jpg)\n\n2. 引用网络图片\n\n   ![网络图片](https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg)\n\n## 超链接\n\n[百度](https://www.baidu.com/)\n\n## 列表\n\n有序列表\n\n水果\n\n1. 香蕉\n2. 苹果\n3. 梨子\n\n无序列表\n\n蔬菜\n\n- 萝卜\n- 番茄\n- 黄瓜\n\n## 表格\n\n| 姓名 | 性别 |\n| ---- | ---- |\n| 张三 | 男   |\n## 代码\n\n```java\nHello World!\n```","source":"_posts/Markdown语法.md","raw":"---\ntitle: Markdown语法\ndate: 2022-02-22 20:00:53\ncategories: 学习笔记\ntags:\n- Markdown\nsticky: \npic:\ncomments: true\ntoc: true\nexpire: true\nonly:\n- home\n- category\n- tag\n---\n\n# Markdown语法（一级标题）\n\n## 标题（二级标题）\n\n### 三级标题\n\n#### 四级标题\n\n## 字体\n\n**加粗**\n\n*斜体*\n\n***斜体加粗***\n\n~~删除线~~\n\n## 引用\n\n> 你好，2022！ \n\n## 分割线\n\n到此！\n\n---\n\n## 图片\n\n1. 引用本地图片\n\n   ![2291368-20220103211113078-6410979](Markdown语法/2291368-20220103211113078-6410979.jpg)\n\n2. 引用网络图片\n\n   ![网络图片](https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg)\n\n## 超链接\n\n[百度](https://www.baidu.com/)\n\n## 列表\n\n有序列表\n\n水果\n\n1. 香蕉\n2. 苹果\n3. 梨子\n\n无序列表\n\n蔬菜\n\n- 萝卜\n- 番茄\n- 黄瓜\n\n## 表格\n\n| 姓名 | 性别 |\n| ---- | ---- |\n| 张三 | 男   |\n## 代码\n\n```java\nHello World!\n```","slug":"Markdown语法","published":1,"updated":"2022-12-08T01:20:07.731Z","layout":"post","photos":[],"link":"","_id":"clbexyfto001bsw6x0f365ddy","content":"<h1 id=\"Markdown语法（一级标题）\"><a href=\"#Markdown语法（一级标题）\" class=\"headerlink\" title=\"Markdown语法（一级标题）\"></a>Markdown语法（一级标题）</h1><h2 id=\"标题（二级标题）\"><a href=\"#标题（二级标题）\" class=\"headerlink\" title=\"标题（二级标题）\"></a>标题（二级标题）</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><p><strong>加粗</strong></p>\n<p><em>斜体</em></p>\n<p><em><strong>斜体加粗</strong></em></p>\n<p><del>删除线</del></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><blockquote>\n<p>你好，2022！ </p>\n</blockquote>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><p>到此！</p>\n<hr>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><ol>\n<li><p>引用本地图片</p>\n<img src=\"/2022/02/22/Markdown%E8%AF%AD%E6%B3%95/2291368-20220103211113078-6410979.jpg\" class=\"\" title=\"2291368-20220103211113078-6410979\"></li>\n<li><p>引用网络图片</p>\n<p><img src=\"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg\" alt=\"网络图片\"></p>\n</li>\n</ol>\n<h2 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h2><p><a href=\"https://www.baidu.com/\">百度</a></p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p>有序列表</p>\n<p>水果</p>\n<ol>\n<li>香蕉</li>\n<li>苹果</li>\n<li>梨子</li>\n</ol>\n<p>无序列表</p>\n<p>蔬菜</p>\n<ul>\n<li>萝卜</li>\n<li>番茄</li>\n<li>黄瓜</li>\n</ul>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>性别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>张三</td>\n<td>男</td>\n</tr>\n</tbody></table>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure>","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<h1 id=\"Markdown语法（一级标题）\"><a href=\"#Markdown语法（一级标题）\" class=\"headerlink\" title=\"Markdown语法（一级标题）\"></a>Markdown语法（一级标题）</h1><h2 id=\"标题（二级标题）\"><a href=\"#标题（二级标题）\" class=\"headerlink\" title=\"标题（二级标题）\"></a>标题（二级标题）</h2><h3 id=\"三级标题\"><a href=\"#三级标题\" class=\"headerlink\" title=\"三级标题\"></a>三级标题</h3><h4 id=\"四级标题\"><a href=\"#四级标题\" class=\"headerlink\" title=\"四级标题\"></a>四级标题</h4><h2 id=\"字体\"><a href=\"#字体\" class=\"headerlink\" title=\"字体\"></a>字体</h2><p><strong>加粗</strong></p>\n<p><em>斜体</em></p>\n<p><em><strong>斜体加粗</strong></em></p>\n<p><del>删除线</del></p>\n<h2 id=\"引用\"><a href=\"#引用\" class=\"headerlink\" title=\"引用\"></a>引用</h2><blockquote>\n<p>你好，2022！ </p>\n</blockquote>\n<h2 id=\"分割线\"><a href=\"#分割线\" class=\"headerlink\" title=\"分割线\"></a>分割线</h2><p>到此！</p>\n<hr>\n<h2 id=\"图片\"><a href=\"#图片\" class=\"headerlink\" title=\"图片\"></a>图片</h2><ol>\n<li><p>引用本地图片</p>\n<img src=\"/2022/02/22/Markdown%E8%AF%AD%E6%B3%95/2291368-20220103211113078-6410979.jpg\" class=\"\" title=\"2291368-20220103211113078-6410979\"></li>\n<li><p>引用网络图片</p>\n<p><img src=\"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg\" alt=\"网络图片\"></p>\n</li>\n</ol>\n<h2 id=\"超链接\"><a href=\"#超链接\" class=\"headerlink\" title=\"超链接\"></a>超链接</h2><p><a href=\"https://www.baidu.com/\">百度</a></p>\n<h2 id=\"列表\"><a href=\"#列表\" class=\"headerlink\" title=\"列表\"></a>列表</h2><p>有序列表</p>\n<p>水果</p>\n<ol>\n<li>香蕉</li>\n<li>苹果</li>\n<li>梨子</li>\n</ol>\n<p>无序列表</p>\n<p>蔬菜</p>\n<ul>\n<li>萝卜</li>\n<li>番茄</li>\n<li>黄瓜</li>\n</ul>\n<h2 id=\"表格\"><a href=\"#表格\" class=\"headerlink\" title=\"表格\"></a>表格</h2><table>\n<thead>\n<tr>\n<th>姓名</th>\n<th>性别</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>张三</td>\n<td>男</td>\n</tr>\n</tbody></table>\n<h2 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h2><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World!</span><br></pre></td></tr></table></figure>"},{"title":"Java集成ip2region2.x实现ip属地功能","date":"2022-11-03T09:03:53.000Z","sticky":null,"pic":null,"comments":1,"toc":true,"expire":true,"only":["home","category","tag"],"_content":"\n# Java集成ip2region2.x实现ip属地功能\n\n## 效果图/封面\n\n![](Java集成ip2region2.x实现ip属地功能开发教程/Snipaste_2022-11-12_09-59-54.png)\n\n## 一、前言\n\n如今许多软件如B站、微博、抖音等都加上 IP 归属地防止恶意评论，境外用户显示的是国家，国内的用户显示的省份。兴致一起，我便想自己的博客项目加上此功能。\n\n目前存在几种方式：\n\n- 方式一：IP地址库ip2region（本文采取的方式）\n\n- 方式二：使用第三方API（查询效率低，不稳定，容易失效）\n  1. ~~淘宝--IP库地址：`https://ip.taobao.com/`已经停止服务()~~\n  2. 太平洋IP地址库`http://whois.pconline.com.cn/` \n\n## 二、ip2region简介\n\n   ip2region - 准确率99.9%的离线IP地址定位库，0.0x毫秒级查询，ip2region.db数据库只有数MB，提供了java、php、c、python、nodejs、golang、c#等查询绑定和Binary,[B树](https://so.csdn.net/so/search?q=B树&spm=1001.2101.3001.7020),内存三种查询算法。\n\n- 地址：\n\n  GitHub地址：https://github.com/lionsoul2014/ip2region\n\n  Gitee地址：https://gitee.com/lionsoul/ip2region\n\n- 特性/优势\n\n  1. 标准化的数据格式——每个 ip 数据段的 region 信息都固定了格式：国家|区域|省份|城市|ISP\n  2. 数据去重和压缩\n  3. 极速查询响应——即使是完全基于 xdb 文件的查询，单次查询响应时间在十微秒级别\n  4. IP 数据管理框架\n\n## 三、ip2region的使用\n\n### 1、下载ip2region.db\n\n将项目从GitHub/Gitee仓库down下来，找到data目录，有三种不同文件格式的ip地址库，进入找到[ip2region.xdb](https://gitee.com/lionsoul/ip2region/blob/master/data/ip2region.xdb)，将ip2region.xdb复制出来放到resources下。\n\n### 2、pom.xml中引入依赖\n\n```xml\n<dependency>\n     <groupId>org.lionsoul</groupId>\n     <artifactId>ip2region</artifactId>\n     <version>2.6.5</version>\n </dependency>\n```\n\n### 3、IpUtils工具类\n\n其中有三个方法，\n\n其一是去获取请求中的真实客户端ip。\n\n其二是通过ip获取城市信息。\n\n其三在服务启动时加载 ip2region.db 这个数据资源到内存中。\n\n```java\npackage com.lll.blog.utils;\n\nimport com.baomidou.mybatisplus.core.toolkit.StringUtils;\nimport lombok.extern.slf4j.Slf4j;\nimport org.lionsoul.ip2region.xdb.Searcher;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.FileCopyUtils;\n\nimport javax.annotation.PostConstruct;\nimport javax.servlet.http.HttpServletRequest;\nimport java.io.InputStream;\nimport java.net.InetAddress;\nimport java.net.UnknownHostException;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Slf4j\n@Component\npublic class IPUtils {\n\n    private static Logger logger = LoggerFactory.getLogger(IPUtils.class);\n\n    private static Searcher searcher;\n\n    /**\n     * 获取客户端IP地址\n     *\n     * 使用Nginx等反向代理软件， 则不能通过request.getRemoteAddr()获取IP地址\n     * 如果使用了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP地址，X-Forwarded-For中第一个非unknown的有效IP字符串，则为真实IP地址\n     */\n    public static String getIpAddr(HttpServletRequest request) {\n        String ip = null;\n        try {\n            ip = request.getHeader(\"x-forwarded-for\");\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"Proxy-Client-IP\");\n            }\n            if (StringUtils.isEmpty(ip) || ip.length() == 0 || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"WL-Proxy-Client-IP\");\n            }\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"HTTP_CLIENT_IP\");\n            }\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"HTTP_X_FORWARDED_FOR\");\n            }\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getRemoteAddr();\n                if (\"127.0.0.1\".equals(ip) || \"0:0:0:0:0:0:0:1\".equals(ip)) {\n                    //根据网卡取本机配置的IP\n                    InetAddress inet = null;\n                    try {\n                        inet = InetAddress.getLocalHost();\n                    } catch (UnknownHostException e) {\n                        log.error(\"getIpAddress exception:\", e);\n                    }\n                    ip = inet.getHostAddress();\n                }\n            }\n        } catch (Exception e) {\n            logger.error(\"IPUtils ERROR \", e);\n        }\n        return ip;\n    }\n\n    /**\n     * 根据ip从 ip2region.db 中获取地理位置\n     *\n     * @param ip\n     * @return 地理位置\n     */\n    public static Map getCityInfo(String ip) {\n        //数据格式： 国家|区域|省份|城市|ISP\n        //192.168.31.160 0|0|0|内网IP|内网IP\n        //47.52.236.180 中国|0|香港|0|阿里云\n        //220.248.12.158 中国|0|上海|上海市|联通\n        //164.114.53.60 美国|0|华盛顿|0|0\n        HashMap<String, Object> cityInfo = new HashMap<>();\n        try {\n            String searchIpInfo = searcher.search(ip);\n            String[] splitIpInfo = searchIpInfo.split(\"\\\\|\");\n            cityInfo.put(\"ip\",ip);\n            cityInfo.put(\"searchInfo\", searchIpInfo);\n            cityInfo.put(\"country\",splitIpInfo[0]);\n            cityInfo.put(\"region\",splitIpInfo[1]);\n            cityInfo.put(\"province\",splitIpInfo[2]);\n            cityInfo.put(\"city\",splitIpInfo[3]);\n            cityInfo.put(\"ISP\",splitIpInfo[3]);\n            return cityInfo;\n        } catch (Exception e) {\n            log.info(\"failed to search(%s): %s\\n\", ip, e);\n        }\n        return null;\n    }\n\n    /**\n     * 在服务启动时加载 ip2region.db 到内存中\n     * 解决打包jar后找不到 ip2region.db 的问题\n     *\n     * @throws Exception 出现异常应该直接抛出终止程序启动，避免后续invoke时出现更多错误\n     */\n    @PostConstruct\n    private static void initIp2regionResource() {\n        try {\n            InputStream inputStream = new ClassPathResource(\"/ipdb/ip2region.xdb\").getInputStream();\n            byte[] dbBinStr = FileCopyUtils.copyToByteArray(inputStream);\n            // 创建一个完全基于内存的查询对象\n            searcher = Searcher.newWithBuffer(dbBinStr);\n        } catch (Exception e) {\n            log.info(\"failed to create content cached searcher: %s\\n\", e);\n        }\n    }\n\n}\n```\n\n### 4、测试类\n\n```java\npackage com.lll.blog.controller;\n\nimport com.lll.blog.utils.IPUtils;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.Map;\n\n\n/**\n * @author Rain\n * @date 2022/10/28 15:57\n */\n@Controller\npublic class IpController {\n\n    @GetMapping(value = \"/testIp\")\n    @ResponseBody\n    public Object testIp(HttpServletRequest request) {\n\n        String ipAddr = IPUtils.getIpAddr(request);\n        Map cityInfo = IPUtils.getCityInfo(ipAddr);\n        System.out.println(cityInfo.get(\"province\"));\n        //数据格式： 国家|区域|省份|城市|ISP\n        //192.168.31.160 0|0|0|内网IP|内网IP\n        //47.52.236.180 中国|0|香港|0|阿里云\n        //220.248.12.158 中国|0|上海|上海市|联通\n        //164.114.53.60 美国|0|华盛顿|0|0\n        String ip = \"183.213.81.138\";\n        Map result = IPUtils.getCityInfo(ip);\n        System.out.println(result.get(\"province\"));\n        return cityInfo;\n    }\n}\n```\n\n## 四、需求实现-博客项目归属地\n\n项目技术：Springboot + Vue\n\n### 1、后端\n\n**Controller**\n\n```\npackage com.lll.blog.controller;\n\nimport com.lll.blog.service.SysUserService;\nimport com.lll.blog.utils.IPUtils;\nimport com.lll.blog.vo.Result;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"users\")\npublic class UsersController {\n\n    @Autowired\n    private SysUserService SysUserService;\n    \n    @GetMapping(\"getIpRegion\")\n    public Result getIpRegion(HttpServletRequest request){\n        String ipAddr = IPUtils.getIpAddr(request);\n        return SysUserService.getIpRegion(ipAddr);\n    }\n}\n```\n\n**Service**\n\n```\npublic interface SysUserService {\n\n    Result getIpRegion(String ip);\n}\n```\n\n**Impl**\n\n```\npackage com.lll.blog.service.impl;\n\nimport com.lll.blog.utils.IPUtils;\nimport com.lll.blog.vo.ErrorCode;\nimport com.lll.blog.vo.Result;\n\nimport java.util.Map;\n\n\n@Service\npublic class SysUserServiceImpl implements SysUserService {\n\n    @Override\n    public Result getIpRegion(String ip) {\n        Map cityInfo = IPUtils.getCityInfo(ip);\n        if (\"中国\".equals(cityInfo.get(\"country\"))){\n            System.out.println(cityInfo.get(\"province\"));\n            Object province = cityInfo.get(\"province\");\n            return Result.success(province);\n        }\n        else if (\"0\".equals(cityInfo.get(\"country\"))){\n            System.out.println(cityInfo);\n            if (\"内网IP\".equals(cityInfo.get(\"ISP\"))){\n                return Result.success(\"内网\");\n            }\n            return Result.success(\"未知\");\n        }\n        else {\n            System.out.println(cityInfo.get(\"country\"));\n            return Result.success(cityInfo.get(\"country\"));\n        }\n    }\n\n}\n```\n\n### 2、前端\n\n(下面仅仅展示部分关键代码)\n\n**api**\n\n```\nexport function getIpRegionInfo() {\n  return request({\n    url: '/users/getIpRegion',\n    method: 'get'\n  })\n```\n\n**vue页面**\n\n```vue\n<template>\n  <el-card>\n    <div class=\"me-author-description\" v-if=\"!user.login\">\n      <span><i class=\"el-icon-location-outline\"></i> &nbsp;IP属地:{{ip}}</span>\n    </div>\n  </el-card>\n</template>\n\n\n<script>\n  import {getIpRegionInfo} from '@/api/login'\n\n  export default {\n    name: 'CardMe',\n    created() {\n      this.getIpRegionInfo()\n    },\n    data() {\n      return {\n        ip: null,\n      }\n    },\n    methods: {\n      getIpRegionInfo() {\n        getIpRegionInfo().then((data => {\n          this.ip = data.data\n        })).catch(error => {\n          if (error !== 'error') {\n            that.$message({type: 'error', message: 'ip归属地获取失败!', showClose: true})\n          }\n        })\n      }\n    }\n  }\n</script>\n```\n\n## 五、扩展\n\n### 1、好文\n\n- [深入浅出之ip2region实现](https://segmentfault.com/a/1190000039019933)\n\n- ip2region2.x\n\n  [Java 根据 IP 地址来获取 位置 -- 使用 ip2region](https://blog.csdn.net/weixin_42144379/article/details/84900446?spm=1001.2101.3001.6650.19&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-19-84900446-blog-120698683.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-19-84900446-blog-120698683.pc_relevant_default&utm_relevant_index=22)\n\n  [使用强大的离线IP地址定位库ip2region获取城市信息](https://blog.csdn.net/sinat_27933301/article/details/123170533?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-123170533-blog-124451706.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.1&utm_relevant_index=3)\n\n- 1.x\n\n  [IP获取城市-Java调用ip2region](https://malian.tech/article/111345)\n\n### 2、待尝试\n\n- [mica 2.0.1 发布新增最好用的 ip2region boot stater](https://segmentfault.com/a/1190000022622489)\n\n- @IP注解\n\n  后续有时间尝试一下 @IP注解切面开发[参考](https://blog.csdn.net/weixin_33005117/article/details/125599192?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-8-125599192-blog-107375608.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-8-125599192-blog-107375608.pc_relevant_default&utm_relevant_index=9)\n\n  之后在接口方法上加上 @IP 注解就可以实现监控Controller接口的访问地址","source":"_posts/Java集成ip2region2.x实现ip属地功能开发教程.md","raw":"---\ntitle: Java集成ip2region2.x实现ip属地功能\ndate: 2022-11-03 17:03:53\ncategories: 学习笔记\ntags:\n- ip属地\nsticky: \npic:\ncomments: true\ntoc: true\nexpire: true\nonly:\n- home\n- category\n- tag\n---\n\n# Java集成ip2region2.x实现ip属地功能\n\n## 效果图/封面\n\n![](Java集成ip2region2.x实现ip属地功能开发教程/Snipaste_2022-11-12_09-59-54.png)\n\n## 一、前言\n\n如今许多软件如B站、微博、抖音等都加上 IP 归属地防止恶意评论，境外用户显示的是国家，国内的用户显示的省份。兴致一起，我便想自己的博客项目加上此功能。\n\n目前存在几种方式：\n\n- 方式一：IP地址库ip2region（本文采取的方式）\n\n- 方式二：使用第三方API（查询效率低，不稳定，容易失效）\n  1. ~~淘宝--IP库地址：`https://ip.taobao.com/`已经停止服务()~~\n  2. 太平洋IP地址库`http://whois.pconline.com.cn/` \n\n## 二、ip2region简介\n\n   ip2region - 准确率99.9%的离线IP地址定位库，0.0x毫秒级查询，ip2region.db数据库只有数MB，提供了java、php、c、python、nodejs、golang、c#等查询绑定和Binary,[B树](https://so.csdn.net/so/search?q=B树&spm=1001.2101.3001.7020),内存三种查询算法。\n\n- 地址：\n\n  GitHub地址：https://github.com/lionsoul2014/ip2region\n\n  Gitee地址：https://gitee.com/lionsoul/ip2region\n\n- 特性/优势\n\n  1. 标准化的数据格式——每个 ip 数据段的 region 信息都固定了格式：国家|区域|省份|城市|ISP\n  2. 数据去重和压缩\n  3. 极速查询响应——即使是完全基于 xdb 文件的查询，单次查询响应时间在十微秒级别\n  4. IP 数据管理框架\n\n## 三、ip2region的使用\n\n### 1、下载ip2region.db\n\n将项目从GitHub/Gitee仓库down下来，找到data目录，有三种不同文件格式的ip地址库，进入找到[ip2region.xdb](https://gitee.com/lionsoul/ip2region/blob/master/data/ip2region.xdb)，将ip2region.xdb复制出来放到resources下。\n\n### 2、pom.xml中引入依赖\n\n```xml\n<dependency>\n     <groupId>org.lionsoul</groupId>\n     <artifactId>ip2region</artifactId>\n     <version>2.6.5</version>\n </dependency>\n```\n\n### 3、IpUtils工具类\n\n其中有三个方法，\n\n其一是去获取请求中的真实客户端ip。\n\n其二是通过ip获取城市信息。\n\n其三在服务启动时加载 ip2region.db 这个数据资源到内存中。\n\n```java\npackage com.lll.blog.utils;\n\nimport com.baomidou.mybatisplus.core.toolkit.StringUtils;\nimport lombok.extern.slf4j.Slf4j;\nimport org.lionsoul.ip2region.xdb.Searcher;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\nimport org.springframework.core.io.ClassPathResource;\nimport org.springframework.stereotype.Component;\nimport org.springframework.util.FileCopyUtils;\n\nimport javax.annotation.PostConstruct;\nimport javax.servlet.http.HttpServletRequest;\nimport java.io.InputStream;\nimport java.net.InetAddress;\nimport java.net.UnknownHostException;\nimport java.util.HashMap;\nimport java.util.Map;\n\n@Slf4j\n@Component\npublic class IPUtils {\n\n    private static Logger logger = LoggerFactory.getLogger(IPUtils.class);\n\n    private static Searcher searcher;\n\n    /**\n     * 获取客户端IP地址\n     *\n     * 使用Nginx等反向代理软件， 则不能通过request.getRemoteAddr()获取IP地址\n     * 如果使用了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP地址，X-Forwarded-For中第一个非unknown的有效IP字符串，则为真实IP地址\n     */\n    public static String getIpAddr(HttpServletRequest request) {\n        String ip = null;\n        try {\n            ip = request.getHeader(\"x-forwarded-for\");\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"Proxy-Client-IP\");\n            }\n            if (StringUtils.isEmpty(ip) || ip.length() == 0 || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"WL-Proxy-Client-IP\");\n            }\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"HTTP_CLIENT_IP\");\n            }\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getHeader(\"HTTP_X_FORWARDED_FOR\");\n            }\n            if (StringUtils.isEmpty(ip) || \"unknown\".equalsIgnoreCase(ip)) {\n                ip = request.getRemoteAddr();\n                if (\"127.0.0.1\".equals(ip) || \"0:0:0:0:0:0:0:1\".equals(ip)) {\n                    //根据网卡取本机配置的IP\n                    InetAddress inet = null;\n                    try {\n                        inet = InetAddress.getLocalHost();\n                    } catch (UnknownHostException e) {\n                        log.error(\"getIpAddress exception:\", e);\n                    }\n                    ip = inet.getHostAddress();\n                }\n            }\n        } catch (Exception e) {\n            logger.error(\"IPUtils ERROR \", e);\n        }\n        return ip;\n    }\n\n    /**\n     * 根据ip从 ip2region.db 中获取地理位置\n     *\n     * @param ip\n     * @return 地理位置\n     */\n    public static Map getCityInfo(String ip) {\n        //数据格式： 国家|区域|省份|城市|ISP\n        //192.168.31.160 0|0|0|内网IP|内网IP\n        //47.52.236.180 中国|0|香港|0|阿里云\n        //220.248.12.158 中国|0|上海|上海市|联通\n        //164.114.53.60 美国|0|华盛顿|0|0\n        HashMap<String, Object> cityInfo = new HashMap<>();\n        try {\n            String searchIpInfo = searcher.search(ip);\n            String[] splitIpInfo = searchIpInfo.split(\"\\\\|\");\n            cityInfo.put(\"ip\",ip);\n            cityInfo.put(\"searchInfo\", searchIpInfo);\n            cityInfo.put(\"country\",splitIpInfo[0]);\n            cityInfo.put(\"region\",splitIpInfo[1]);\n            cityInfo.put(\"province\",splitIpInfo[2]);\n            cityInfo.put(\"city\",splitIpInfo[3]);\n            cityInfo.put(\"ISP\",splitIpInfo[3]);\n            return cityInfo;\n        } catch (Exception e) {\n            log.info(\"failed to search(%s): %s\\n\", ip, e);\n        }\n        return null;\n    }\n\n    /**\n     * 在服务启动时加载 ip2region.db 到内存中\n     * 解决打包jar后找不到 ip2region.db 的问题\n     *\n     * @throws Exception 出现异常应该直接抛出终止程序启动，避免后续invoke时出现更多错误\n     */\n    @PostConstruct\n    private static void initIp2regionResource() {\n        try {\n            InputStream inputStream = new ClassPathResource(\"/ipdb/ip2region.xdb\").getInputStream();\n            byte[] dbBinStr = FileCopyUtils.copyToByteArray(inputStream);\n            // 创建一个完全基于内存的查询对象\n            searcher = Searcher.newWithBuffer(dbBinStr);\n        } catch (Exception e) {\n            log.info(\"failed to create content cached searcher: %s\\n\", e);\n        }\n    }\n\n}\n```\n\n### 4、测试类\n\n```java\npackage com.lll.blog.controller;\n\nimport com.lll.blog.utils.IPUtils;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.Map;\n\n\n/**\n * @author Rain\n * @date 2022/10/28 15:57\n */\n@Controller\npublic class IpController {\n\n    @GetMapping(value = \"/testIp\")\n    @ResponseBody\n    public Object testIp(HttpServletRequest request) {\n\n        String ipAddr = IPUtils.getIpAddr(request);\n        Map cityInfo = IPUtils.getCityInfo(ipAddr);\n        System.out.println(cityInfo.get(\"province\"));\n        //数据格式： 国家|区域|省份|城市|ISP\n        //192.168.31.160 0|0|0|内网IP|内网IP\n        //47.52.236.180 中国|0|香港|0|阿里云\n        //220.248.12.158 中国|0|上海|上海市|联通\n        //164.114.53.60 美国|0|华盛顿|0|0\n        String ip = \"183.213.81.138\";\n        Map result = IPUtils.getCityInfo(ip);\n        System.out.println(result.get(\"province\"));\n        return cityInfo;\n    }\n}\n```\n\n## 四、需求实现-博客项目归属地\n\n项目技术：Springboot + Vue\n\n### 1、后端\n\n**Controller**\n\n```\npackage com.lll.blog.controller;\n\nimport com.lll.blog.service.SysUserService;\nimport com.lll.blog.utils.IPUtils;\nimport com.lll.blog.vo.Result;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.*;\n\nimport javax.servlet.http.HttpServletRequest;\nimport java.util.Map;\n\n@RestController\n@RequestMapping(\"users\")\npublic class UsersController {\n\n    @Autowired\n    private SysUserService SysUserService;\n    \n    @GetMapping(\"getIpRegion\")\n    public Result getIpRegion(HttpServletRequest request){\n        String ipAddr = IPUtils.getIpAddr(request);\n        return SysUserService.getIpRegion(ipAddr);\n    }\n}\n```\n\n**Service**\n\n```\npublic interface SysUserService {\n\n    Result getIpRegion(String ip);\n}\n```\n\n**Impl**\n\n```\npackage com.lll.blog.service.impl;\n\nimport com.lll.blog.utils.IPUtils;\nimport com.lll.blog.vo.ErrorCode;\nimport com.lll.blog.vo.Result;\n\nimport java.util.Map;\n\n\n@Service\npublic class SysUserServiceImpl implements SysUserService {\n\n    @Override\n    public Result getIpRegion(String ip) {\n        Map cityInfo = IPUtils.getCityInfo(ip);\n        if (\"中国\".equals(cityInfo.get(\"country\"))){\n            System.out.println(cityInfo.get(\"province\"));\n            Object province = cityInfo.get(\"province\");\n            return Result.success(province);\n        }\n        else if (\"0\".equals(cityInfo.get(\"country\"))){\n            System.out.println(cityInfo);\n            if (\"内网IP\".equals(cityInfo.get(\"ISP\"))){\n                return Result.success(\"内网\");\n            }\n            return Result.success(\"未知\");\n        }\n        else {\n            System.out.println(cityInfo.get(\"country\"));\n            return Result.success(cityInfo.get(\"country\"));\n        }\n    }\n\n}\n```\n\n### 2、前端\n\n(下面仅仅展示部分关键代码)\n\n**api**\n\n```\nexport function getIpRegionInfo() {\n  return request({\n    url: '/users/getIpRegion',\n    method: 'get'\n  })\n```\n\n**vue页面**\n\n```vue\n<template>\n  <el-card>\n    <div class=\"me-author-description\" v-if=\"!user.login\">\n      <span><i class=\"el-icon-location-outline\"></i> &nbsp;IP属地:{{ip}}</span>\n    </div>\n  </el-card>\n</template>\n\n\n<script>\n  import {getIpRegionInfo} from '@/api/login'\n\n  export default {\n    name: 'CardMe',\n    created() {\n      this.getIpRegionInfo()\n    },\n    data() {\n      return {\n        ip: null,\n      }\n    },\n    methods: {\n      getIpRegionInfo() {\n        getIpRegionInfo().then((data => {\n          this.ip = data.data\n        })).catch(error => {\n          if (error !== 'error') {\n            that.$message({type: 'error', message: 'ip归属地获取失败!', showClose: true})\n          }\n        })\n      }\n    }\n  }\n</script>\n```\n\n## 五、扩展\n\n### 1、好文\n\n- [深入浅出之ip2region实现](https://segmentfault.com/a/1190000039019933)\n\n- ip2region2.x\n\n  [Java 根据 IP 地址来获取 位置 -- 使用 ip2region](https://blog.csdn.net/weixin_42144379/article/details/84900446?spm=1001.2101.3001.6650.19&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-19-84900446-blog-120698683.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-19-84900446-blog-120698683.pc_relevant_default&utm_relevant_index=22)\n\n  [使用强大的离线IP地址定位库ip2region获取城市信息](https://blog.csdn.net/sinat_27933301/article/details/123170533?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-123170533-blog-124451706.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.1&utm_relevant_index=3)\n\n- 1.x\n\n  [IP获取城市-Java调用ip2region](https://malian.tech/article/111345)\n\n### 2、待尝试\n\n- [mica 2.0.1 发布新增最好用的 ip2region boot stater](https://segmentfault.com/a/1190000022622489)\n\n- @IP注解\n\n  后续有时间尝试一下 @IP注解切面开发[参考](https://blog.csdn.net/weixin_33005117/article/details/125599192?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-8-125599192-blog-107375608.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromBaidu%7ERate-8-125599192-blog-107375608.pc_relevant_default&utm_relevant_index=9)\n\n  之后在接口方法上加上 @IP 注解就可以实现监控Controller接口的访问地址","slug":"Java集成ip2region2.x实现ip属地功能开发教程","published":1,"updated":"2022-12-07T08:53:04.034Z","layout":"post","photos":[],"link":"","_id":"clbexyftp001esw6xcd522aie","content":"<h1 id=\"Java集成ip2region2-x实现ip属地功能\"><a href=\"#Java集成ip2region2-x实现ip属地功能\" class=\"headerlink\" title=\"Java集成ip2region2.x实现ip属地功能\"></a>Java集成ip2region2.x实现ip属地功能</h1><h2 id=\"效果图-封面\"><a href=\"#效果图-封面\" class=\"headerlink\" title=\"效果图/封面\"></a>效果图/封面</h2><img src=\"/2022/11/03/Java%E9%9B%86%E6%88%90ip2region2.x%E5%AE%9E%E7%8E%B0ip%E5%B1%9E%E5%9C%B0%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/Snipaste_2022-11-12_09-59-54.png\" class=\"\">\n\n<h2 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h2><p>如今许多软件如B站、微博、抖音等都加上 IP 归属地防止恶意评论，境外用户显示的是国家，国内的用户显示的省份。兴致一起，我便想自己的博客项目加上此功能。</p>\n<p>目前存在几种方式：</p>\n<ul>\n<li><p>方式一：IP地址库ip2region（本文采取的方式）</p>\n</li>\n<li><p>方式二：使用第三方API（查询效率低，不稳定，容易失效）</p>\n<ol>\n<li><del>淘宝–IP库地址：<code>https://ip.taobao.com/</code>已经停止服务()</del></li>\n<li>太平洋IP地址库<code>http://whois.pconline.com.cn/</code> </li>\n</ol>\n</li>\n</ul>\n<h2 id=\"二、ip2region简介\"><a href=\"#二、ip2region简介\" class=\"headerlink\" title=\"二、ip2region简介\"></a>二、ip2region简介</h2><p>   ip2region - 准确率99.9%的离线IP地址定位库，0.0x毫秒级查询，ip2region.db数据库只有数MB，提供了java、php、c、python、nodejs、golang、c#等查询绑定和Binary,<a href=\"https://so.csdn.net/so/search?q=B%E6%A0%91&spm=1001.2101.3001.7020\">B树</a>,内存三种查询算法。</p>\n<ul>\n<li><p>地址：</p>\n<p>GitHub地址：<a href=\"https://github.com/lionsoul2014/ip2region\">https://github.com/lionsoul2014/ip2region</a></p>\n<p>Gitee地址：<a href=\"https://gitee.com/lionsoul/ip2region\">https://gitee.com/lionsoul/ip2region</a></p>\n</li>\n<li><p>特性/优势</p>\n<ol>\n<li>标准化的数据格式——每个 ip 数据段的 region 信息都固定了格式：国家|区域|省份|城市|ISP</li>\n<li>数据去重和压缩</li>\n<li>极速查询响应——即使是完全基于 xdb 文件的查询，单次查询响应时间在十微秒级别</li>\n<li>IP 数据管理框架</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"三、ip2region的使用\"><a href=\"#三、ip2region的使用\" class=\"headerlink\" title=\"三、ip2region的使用\"></a>三、ip2region的使用</h2><h3 id=\"1、下载ip2region-db\"><a href=\"#1、下载ip2region-db\" class=\"headerlink\" title=\"1、下载ip2region.db\"></a>1、下载ip2region.db</h3><p>将项目从GitHub/Gitee仓库down下来，找到data目录，有三种不同文件格式的ip地址库，进入找到<a href=\"https://gitee.com/lionsoul/ip2region/blob/master/data/ip2region.xdb\">ip2region.xdb</a>，将ip2region.xdb复制出来放到resources下。</p>\n<h3 id=\"2、pom-xml中引入依赖\"><a href=\"#2、pom-xml中引入依赖\" class=\"headerlink\" title=\"2、pom.xml中引入依赖\"></a>2、pom.xml中引入依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.lionsoul<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>ip2region<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、IpUtils工具类\"><a href=\"#3、IpUtils工具类\" class=\"headerlink\" title=\"3、IpUtils工具类\"></a>3、IpUtils工具类</h3><p>其中有三个方法，</p>\n<p>其一是去获取请求中的真实客户端ip。</p>\n<p>其二是通过ip获取城市信息。</p>\n<p>其三在服务启动时加载 ip2region.db 这个数据资源到内存中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.lll.blog.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.lionsoul.ip2region.xdb.Searcher;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.FileCopyUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.PostConstruct;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IPUtils</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> LoggerFactory.getLogger(IPUtils.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Searcher searcher;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取客户端IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * 使用Nginx等反向代理软件， 则不能通过request.getRemoteAddr()获取IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果使用了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP地址，X-Forwarded-For中第一个非unknown的有效IP字符串，则为真实IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getIpAddr</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ip</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            ip = request.getHeader(<span class=\"string\">&quot;x-forwarded-for&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || ip.length() == <span class=\"number\">0</span> || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getRemoteAddr();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;127.0.0.1&quot;</span>.equals(ip) || <span class=\"string\">&quot;0:0:0:0:0:0:0:1&quot;</span>.equals(ip)) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//根据网卡取本机配置的IP</span></span><br><span class=\"line\">                    <span class=\"type\">InetAddress</span> <span class=\"variable\">inet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        inet = InetAddress.getLocalHost();</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">                        log.error(<span class=\"string\">&quot;getIpAddress exception:&quot;</span>, e);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    ip = inet.getHostAddress();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            logger.error(<span class=\"string\">&quot;IPUtils ERROR &quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ip;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据ip从 ip2region.db 中获取地理位置</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ip</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 地理位置</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Map <span class=\"title function_\">getCityInfo</span><span class=\"params\">(String ip)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//数据格式： 国家|区域|省份|城市|ISP</span></span><br><span class=\"line\">        <span class=\"comment\">//192.168.31.160 0|0|0|内网IP|内网IP</span></span><br><span class=\"line\">        <span class=\"comment\">//47.52.236.180 中国|0|香港|0|阿里云</span></span><br><span class=\"line\">        <span class=\"comment\">//220.248.12.158 中国|0|上海|上海市|联通</span></span><br><span class=\"line\">        <span class=\"comment\">//164.114.53.60 美国|0|华盛顿|0|0</span></span><br><span class=\"line\">        HashMap&lt;String, Object&gt; cityInfo = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">searchIpInfo</span> <span class=\"operator\">=</span> searcher.search(ip);</span><br><span class=\"line\">            String[] splitIpInfo = searchIpInfo.split(<span class=\"string\">&quot;\\\\|&quot;</span>);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;ip&quot;</span>,ip);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;searchInfo&quot;</span>, searchIpInfo);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;country&quot;</span>,splitIpInfo[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;region&quot;</span>,splitIpInfo[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;province&quot;</span>,splitIpInfo[<span class=\"number\">2</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;city&quot;</span>,splitIpInfo[<span class=\"number\">3</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;ISP&quot;</span>,splitIpInfo[<span class=\"number\">3</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cityInfo;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;failed to search(%s): %s\\n&quot;</span>, ip, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在服务启动时加载 ip2region.db 到内存中</span></span><br><span class=\"line\"><span class=\"comment\">     * 解决打包jar后找不到 ip2region.db 的问题</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception 出现异常应该直接抛出终止程序启动，避免后续invoke时出现更多错误</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initIp2regionResource</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathResource</span>(<span class=\"string\">&quot;/ipdb/ip2region.xdb&quot;</span>).getInputStream();</span><br><span class=\"line\">            <span class=\"type\">byte</span>[] dbBinStr = FileCopyUtils.copyToByteArray(inputStream);</span><br><span class=\"line\">            <span class=\"comment\">// 创建一个完全基于内存的查询对象</span></span><br><span class=\"line\">            searcher = Searcher.newWithBuffer(dbBinStr);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;failed to create content cached searcher: %s\\n&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4、测试类\"><a href=\"#4、测试类\" class=\"headerlink\" title=\"4、测试类\"></a>4、测试类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.lll.blog.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.lll.blog.utils.IPUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Rain</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/10/28 15:57</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IpController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(value = &quot;/testIp&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">testIp</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ipAddr</span> <span class=\"operator\">=</span> IPUtils.getIpAddr(request);</span><br><span class=\"line\">        <span class=\"type\">Map</span> <span class=\"variable\">cityInfo</span> <span class=\"operator\">=</span> IPUtils.getCityInfo(ipAddr);</span><br><span class=\"line\">        System.out.println(cityInfo.get(<span class=\"string\">&quot;province&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">//数据格式： 国家|区域|省份|城市|ISP</span></span><br><span class=\"line\">        <span class=\"comment\">//192.168.31.160 0|0|0|内网IP|内网IP</span></span><br><span class=\"line\">        <span class=\"comment\">//47.52.236.180 中国|0|香港|0|阿里云</span></span><br><span class=\"line\">        <span class=\"comment\">//220.248.12.158 中国|0|上海|上海市|联通</span></span><br><span class=\"line\">        <span class=\"comment\">//164.114.53.60 美国|0|华盛顿|0|0</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ip</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;183.213.81.138&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">Map</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> IPUtils.getCityInfo(ip);</span><br><span class=\"line\">        System.out.println(result.get(<span class=\"string\">&quot;province&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cityInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、需求实现-博客项目归属地\"><a href=\"#四、需求实现-博客项目归属地\" class=\"headerlink\" title=\"四、需求实现-博客项目归属地\"></a>四、需求实现-博客项目归属地</h2><p>项目技术：Springboot + Vue</p>\n<h3 id=\"1、后端\"><a href=\"#1、后端\" class=\"headerlink\" title=\"1、后端\"></a>1、后端</h3><p><strong>Controller</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.lll.blog.controller;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.lll.blog.service.SysUserService;</span><br><span class=\"line\">import com.lll.blog.utils.IPUtils;</span><br><span class=\"line\">import com.lll.blog.vo.Result;</span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\">import javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;users&quot;)</span><br><span class=\"line\">public class UsersController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private SysUserService SysUserService;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @GetMapping(&quot;getIpRegion&quot;)</span><br><span class=\"line\">    public Result getIpRegion(HttpServletRequest request)&#123;</span><br><span class=\"line\">        String ipAddr = IPUtils.getIpAddr(request);</span><br><span class=\"line\">        return SysUserService.getIpRegion(ipAddr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Service</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface SysUserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Result getIpRegion(String ip);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Impl</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.lll.blog.service.impl;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.lll.blog.utils.IPUtils;</span><br><span class=\"line\">import com.lll.blog.vo.ErrorCode;</span><br><span class=\"line\">import com.lll.blog.vo.Result;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@Service</span><br><span class=\"line\">public class SysUserServiceImpl implements SysUserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public Result getIpRegion(String ip) &#123;</span><br><span class=\"line\">        Map cityInfo = IPUtils.getCityInfo(ip);</span><br><span class=\"line\">        if (&quot;中国&quot;.equals(cityInfo.get(&quot;country&quot;)))&#123;</span><br><span class=\"line\">            System.out.println(cityInfo.get(&quot;province&quot;));</span><br><span class=\"line\">            Object province = cityInfo.get(&quot;province&quot;);</span><br><span class=\"line\">            return Result.success(province);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (&quot;0&quot;.equals(cityInfo.get(&quot;country&quot;)))&#123;</span><br><span class=\"line\">            System.out.println(cityInfo);</span><br><span class=\"line\">            if (&quot;内网IP&quot;.equals(cityInfo.get(&quot;ISP&quot;)))&#123;</span><br><span class=\"line\">                return Result.success(&quot;内网&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return Result.success(&quot;未知&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            System.out.println(cityInfo.get(&quot;country&quot;));</span><br><span class=\"line\">            return Result.success(cityInfo.get(&quot;country&quot;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、前端\"><a href=\"#2、前端\" class=\"headerlink\" title=\"2、前端\"></a>2、前端</h3><p>(下面仅仅展示部分关键代码)</p>\n<p><strong>api</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function getIpRegionInfo() &#123;</span><br><span class=\"line\">  return request(&#123;</span><br><span class=\"line\">    url: &#x27;/users/getIpRegion&#x27;,</span><br><span class=\"line\">    method: &#x27;get&#x27;</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>vue页面</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;el-card&gt;</span><br><span class=\"line\">    &lt;div class=&quot;me-author-description&quot; v-if=&quot;!user.login&quot;&gt;</span><br><span class=\"line\">      &lt;span&gt;&lt;i class=&quot;el-icon-location-outline&quot;&gt;&lt;/i&gt; &amp;nbsp;IP属地:&#123;&#123;ip&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/el-card&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  import &#123;getIpRegionInfo&#125; from &#x27;@/api/login&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name: &#x27;CardMe&#x27;,</span><br><span class=\"line\">    created() &#123;</span><br><span class=\"line\">      this.getIpRegionInfo()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123;</span><br><span class=\"line\">        ip: null,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      getIpRegionInfo() &#123;</span><br><span class=\"line\">        getIpRegionInfo().then((data =&gt; &#123;</span><br><span class=\"line\">          this.ip = data.data</span><br><span class=\"line\">        &#125;)).catch(error =&gt; &#123;</span><br><span class=\"line\">          if (error !== &#x27;error&#x27;) &#123;</span><br><span class=\"line\">            that.$message(&#123;type: &#x27;error&#x27;, message: &#x27;ip归属地获取失败!&#x27;, showClose: true&#125;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、扩展\"><a href=\"#五、扩展\" class=\"headerlink\" title=\"五、扩展\"></a>五、扩展</h2><h3 id=\"1、好文\"><a href=\"#1、好文\" class=\"headerlink\" title=\"1、好文\"></a>1、好文</h3><ul>\n<li><p><a href=\"https://segmentfault.com/a/1190000039019933\">深入浅出之ip2region实现</a></p>\n</li>\n<li><p>ip2region2.x</p>\n<p><a href=\"https://blog.csdn.net/weixin_42144379/article/details/84900446?spm=1001.2101.3001.6650.19&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-19-84900446-blog-120698683.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-19-84900446-blog-120698683.pc_relevant_default&utm_relevant_index=22\">Java 根据 IP 地址来获取 位置 – 使用 ip2region</a></p>\n<p><a href=\"https://blog.csdn.net/sinat_27933301/article/details/123170533?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-123170533-blog-124451706.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.1&utm_relevant_index=3\">使用强大的离线IP地址定位库ip2region获取城市信息</a></p>\n</li>\n<li><p>1.x</p>\n<p><a href=\"https://malian.tech/article/111345\">IP获取城市-Java调用ip2region</a></p>\n</li>\n</ul>\n<h3 id=\"2、待尝试\"><a href=\"#2、待尝试\" class=\"headerlink\" title=\"2、待尝试\"></a>2、待尝试</h3><ul>\n<li><p><a href=\"https://segmentfault.com/a/1190000022622489\">mica 2.0.1 发布新增最好用的 ip2region boot stater</a></p>\n</li>\n<li><p>@IP注解</p>\n<p>后续有时间尝试一下 @IP注解切面开发<a href=\"https://blog.csdn.net/weixin_33005117/article/details/125599192?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-125599192-blog-107375608.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-125599192-blog-107375608.pc_relevant_default&utm_relevant_index=9\">参考</a></p>\n<p>之后在接口方法上加上 @IP 注解就可以实现监控Controller接口的访问地址</p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"<h1 id=\"Java集成ip2region2-x实现ip属地功能\"><a href=\"#Java集成ip2region2-x实现ip属地功能\" class=\"headerlink\" title=\"Java集成ip2region2.x实现ip属地功能\"></a>Java集成ip2region2.x实现ip属地功能</h1><h2 id=\"效果图-封面\"><a href=\"#效果图-封面\" class=\"headerlink\" title=\"效果图/封面\"></a>效果图/封面</h2><img src=\"/2022/11/03/Java%E9%9B%86%E6%88%90ip2region2.x%E5%AE%9E%E7%8E%B0ip%E5%B1%9E%E5%9C%B0%E5%8A%9F%E8%83%BD%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B/Snipaste_2022-11-12_09-59-54.png\" class=\"\">\n\n<h2 id=\"一、前言\"><a href=\"#一、前言\" class=\"headerlink\" title=\"一、前言\"></a>一、前言</h2><p>如今许多软件如B站、微博、抖音等都加上 IP 归属地防止恶意评论，境外用户显示的是国家，国内的用户显示的省份。兴致一起，我便想自己的博客项目加上此功能。</p>\n<p>目前存在几种方式：</p>\n<ul>\n<li><p>方式一：IP地址库ip2region（本文采取的方式）</p>\n</li>\n<li><p>方式二：使用第三方API（查询效率低，不稳定，容易失效）</p>\n<ol>\n<li><del>淘宝–IP库地址：<code>https://ip.taobao.com/</code>已经停止服务()</del></li>\n<li>太平洋IP地址库<code>http://whois.pconline.com.cn/</code> </li>\n</ol>\n</li>\n</ul>\n<h2 id=\"二、ip2region简介\"><a href=\"#二、ip2region简介\" class=\"headerlink\" title=\"二、ip2region简介\"></a>二、ip2region简介</h2><p>   ip2region - 准确率99.9%的离线IP地址定位库，0.0x毫秒级查询，ip2region.db数据库只有数MB，提供了java、php、c、python、nodejs、golang、c#等查询绑定和Binary,<a href=\"https://so.csdn.net/so/search?q=B%E6%A0%91&spm=1001.2101.3001.7020\">B树</a>,内存三种查询算法。</p>\n<ul>\n<li><p>地址：</p>\n<p>GitHub地址：<a href=\"https://github.com/lionsoul2014/ip2region\">https://github.com/lionsoul2014/ip2region</a></p>\n<p>Gitee地址：<a href=\"https://gitee.com/lionsoul/ip2region\">https://gitee.com/lionsoul/ip2region</a></p>\n</li>\n<li><p>特性/优势</p>\n<ol>\n<li>标准化的数据格式——每个 ip 数据段的 region 信息都固定了格式：国家|区域|省份|城市|ISP</li>\n<li>数据去重和压缩</li>\n<li>极速查询响应——即使是完全基于 xdb 文件的查询，单次查询响应时间在十微秒级别</li>\n<li>IP 数据管理框架</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"三、ip2region的使用\"><a href=\"#三、ip2region的使用\" class=\"headerlink\" title=\"三、ip2region的使用\"></a>三、ip2region的使用</h2><h3 id=\"1、下载ip2region-db\"><a href=\"#1、下载ip2region-db\" class=\"headerlink\" title=\"1、下载ip2region.db\"></a>1、下载ip2region.db</h3><p>将项目从GitHub/Gitee仓库down下来，找到data目录，有三种不同文件格式的ip地址库，进入找到<a href=\"https://gitee.com/lionsoul/ip2region/blob/master/data/ip2region.xdb\">ip2region.xdb</a>，将ip2region.xdb复制出来放到resources下。</p>\n<h3 id=\"2、pom-xml中引入依赖\"><a href=\"#2、pom-xml中引入依赖\" class=\"headerlink\" title=\"2、pom.xml中引入依赖\"></a>2、pom.xml中引入依赖</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.lionsoul<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>ip2region<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>2.6.5<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"3、IpUtils工具类\"><a href=\"#3、IpUtils工具类\" class=\"headerlink\" title=\"3、IpUtils工具类\"></a>3、IpUtils工具类</h3><p>其中有三个方法，</p>\n<p>其一是去获取请求中的真实客户端ip。</p>\n<p>其二是通过ip获取城市信息。</p>\n<p>其三在服务启动时加载 ip2region.db 这个数据资源到内存中。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.lll.blog.utils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.baomidou.mybatisplus.core.toolkit.StringUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.lionsoul.ip2region.xdb.Searcher;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.Logger;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.slf4j.LoggerFactory;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.core.io.ClassPathResource;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Component;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.util.FileCopyUtils;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.annotation.PostConstruct;</span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.InetAddress;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.net.UnknownHostException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IPUtils</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Logger</span> <span class=\"variable\">logger</span> <span class=\"operator\">=</span> LoggerFactory.getLogger(IPUtils.class);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> Searcher searcher;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 获取客户端IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * 使用Nginx等反向代理软件， 则不能通过request.getRemoteAddr()获取IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     * 如果使用了多级反向代理的话，X-Forwarded-For的值并不止一个，而是一串IP地址，X-Forwarded-For中第一个非unknown的有效IP字符串，则为真实IP地址</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">getIpAddr</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ip</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            ip = request.getHeader(<span class=\"string\">&quot;x-forwarded-for&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;Proxy-Client-IP&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || ip.length() == <span class=\"number\">0</span> || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;WL-Proxy-Client-IP&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;HTTP_CLIENT_IP&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getHeader(<span class=\"string\">&quot;HTTP_X_FORWARDED_FOR&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (StringUtils.isEmpty(ip) || <span class=\"string\">&quot;unknown&quot;</span>.equalsIgnoreCase(ip)) &#123;</span><br><span class=\"line\">                ip = request.getRemoteAddr();</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (<span class=\"string\">&quot;127.0.0.1&quot;</span>.equals(ip) || <span class=\"string\">&quot;0:0:0:0:0:0:0:1&quot;</span>.equals(ip)) &#123;</span><br><span class=\"line\">                    <span class=\"comment\">//根据网卡取本机配置的IP</span></span><br><span class=\"line\">                    <span class=\"type\">InetAddress</span> <span class=\"variable\">inet</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        inet = InetAddress.getLocalHost();</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (UnknownHostException e) &#123;</span><br><span class=\"line\">                        log.error(<span class=\"string\">&quot;getIpAddress exception:&quot;</span>, e);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    ip = inet.getHostAddress();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            logger.error(<span class=\"string\">&quot;IPUtils ERROR &quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> ip;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 根据ip从 ip2region.db 中获取地理位置</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> ip</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 地理位置</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Map <span class=\"title function_\">getCityInfo</span><span class=\"params\">(String ip)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//数据格式： 国家|区域|省份|城市|ISP</span></span><br><span class=\"line\">        <span class=\"comment\">//192.168.31.160 0|0|0|内网IP|内网IP</span></span><br><span class=\"line\">        <span class=\"comment\">//47.52.236.180 中国|0|香港|0|阿里云</span></span><br><span class=\"line\">        <span class=\"comment\">//220.248.12.158 中国|0|上海|上海市|联通</span></span><br><span class=\"line\">        <span class=\"comment\">//164.114.53.60 美国|0|华盛顿|0|0</span></span><br><span class=\"line\">        HashMap&lt;String, Object&gt; cityInfo = <span class=\"keyword\">new</span> <span class=\"title class_\">HashMap</span>&lt;&gt;();</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">searchIpInfo</span> <span class=\"operator\">=</span> searcher.search(ip);</span><br><span class=\"line\">            String[] splitIpInfo = searchIpInfo.split(<span class=\"string\">&quot;\\\\|&quot;</span>);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;ip&quot;</span>,ip);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;searchInfo&quot;</span>, searchIpInfo);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;country&quot;</span>,splitIpInfo[<span class=\"number\">0</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;region&quot;</span>,splitIpInfo[<span class=\"number\">1</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;province&quot;</span>,splitIpInfo[<span class=\"number\">2</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;city&quot;</span>,splitIpInfo[<span class=\"number\">3</span>]);</span><br><span class=\"line\">            cityInfo.put(<span class=\"string\">&quot;ISP&quot;</span>,splitIpInfo[<span class=\"number\">3</span>]);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> cityInfo;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;failed to search(%s): %s\\n&quot;</span>, ip, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 在服务启动时加载 ip2region.db 到内存中</span></span><br><span class=\"line\"><span class=\"comment\">     * 解决打包jar后找不到 ip2region.db 的问题</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@throws</span> Exception 出现异常应该直接抛出终止程序启动，避免后续invoke时出现更多错误</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@PostConstruct</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initIp2regionResource</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">InputStream</span> <span class=\"variable\">inputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ClassPathResource</span>(<span class=\"string\">&quot;/ipdb/ip2region.xdb&quot;</span>).getInputStream();</span><br><span class=\"line\">            <span class=\"type\">byte</span>[] dbBinStr = FileCopyUtils.copyToByteArray(inputStream);</span><br><span class=\"line\">            <span class=\"comment\">// 创建一个完全基于内存的查询对象</span></span><br><span class=\"line\">            searcher = Searcher.newWithBuffer(dbBinStr);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            log.info(<span class=\"string\">&quot;failed to create content cached searcher: %s\\n&quot;</span>, e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"4、测试类\"><a href=\"#4、测试类\" class=\"headerlink\" title=\"4、测试类\"></a>4、测试类</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.lll.blog.controller;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.lll.blog.utils.IPUtils;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.stereotype.Controller;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.GetMapping;</span><br><span class=\"line\"><span class=\"keyword\">import</span> org.springframework.web.bind.annotation.ResponseBody;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@author</span> Rain</span></span><br><span class=\"line\"><span class=\"comment\"> * <span class=\"doctag\">@date</span> 2022/10/28 15:57</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"meta\">@Controller</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">IpController</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@GetMapping(value = &quot;/testIp&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@ResponseBody</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Object <span class=\"title function_\">testIp</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ipAddr</span> <span class=\"operator\">=</span> IPUtils.getIpAddr(request);</span><br><span class=\"line\">        <span class=\"type\">Map</span> <span class=\"variable\">cityInfo</span> <span class=\"operator\">=</span> IPUtils.getCityInfo(ipAddr);</span><br><span class=\"line\">        System.out.println(cityInfo.get(<span class=\"string\">&quot;province&quot;</span>));</span><br><span class=\"line\">        <span class=\"comment\">//数据格式： 国家|区域|省份|城市|ISP</span></span><br><span class=\"line\">        <span class=\"comment\">//192.168.31.160 0|0|0|内网IP|内网IP</span></span><br><span class=\"line\">        <span class=\"comment\">//47.52.236.180 中国|0|香港|0|阿里云</span></span><br><span class=\"line\">        <span class=\"comment\">//220.248.12.158 中国|0|上海|上海市|联通</span></span><br><span class=\"line\">        <span class=\"comment\">//164.114.53.60 美国|0|华盛顿|0|0</span></span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">ip</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;183.213.81.138&quot;</span>;</span><br><span class=\"line\">        <span class=\"type\">Map</span> <span class=\"variable\">result</span> <span class=\"operator\">=</span> IPUtils.getCityInfo(ip);</span><br><span class=\"line\">        System.out.println(result.get(<span class=\"string\">&quot;province&quot;</span>));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> cityInfo;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"四、需求实现-博客项目归属地\"><a href=\"#四、需求实现-博客项目归属地\" class=\"headerlink\" title=\"四、需求实现-博客项目归属地\"></a>四、需求实现-博客项目归属地</h2><p>项目技术：Springboot + Vue</p>\n<h3 id=\"1、后端\"><a href=\"#1、后端\" class=\"headerlink\" title=\"1、后端\"></a>1、后端</h3><p><strong>Controller</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.lll.blog.controller;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.lll.blog.service.SysUserService;</span><br><span class=\"line\">import com.lll.blog.utils.IPUtils;</span><br><span class=\"line\">import com.lll.blog.vo.Result;</span><br><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.web.bind.annotation.*;</span><br><span class=\"line\"></span><br><span class=\"line\">import javax.servlet.http.HttpServletRequest;</span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\">@RestController</span><br><span class=\"line\">@RequestMapping(&quot;users&quot;)</span><br><span class=\"line\">public class UsersController &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    private SysUserService SysUserService;</span><br><span class=\"line\">    </span><br><span class=\"line\">    @GetMapping(&quot;getIpRegion&quot;)</span><br><span class=\"line\">    public Result getIpRegion(HttpServletRequest request)&#123;</span><br><span class=\"line\">        String ipAddr = IPUtils.getIpAddr(request);</span><br><span class=\"line\">        return SysUserService.getIpRegion(ipAddr);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Service</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public interface SysUserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Result getIpRegion(String ip);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Impl</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.lll.blog.service.impl;</span><br><span class=\"line\"></span><br><span class=\"line\">import com.lll.blog.utils.IPUtils;</span><br><span class=\"line\">import com.lll.blog.vo.ErrorCode;</span><br><span class=\"line\">import com.lll.blog.vo.Result;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.Map;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">@Service</span><br><span class=\"line\">public class SysUserServiceImpl implements SysUserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public Result getIpRegion(String ip) &#123;</span><br><span class=\"line\">        Map cityInfo = IPUtils.getCityInfo(ip);</span><br><span class=\"line\">        if (&quot;中国&quot;.equals(cityInfo.get(&quot;country&quot;)))&#123;</span><br><span class=\"line\">            System.out.println(cityInfo.get(&quot;province&quot;));</span><br><span class=\"line\">            Object province = cityInfo.get(&quot;province&quot;);</span><br><span class=\"line\">            return Result.success(province);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else if (&quot;0&quot;.equals(cityInfo.get(&quot;country&quot;)))&#123;</span><br><span class=\"line\">            System.out.println(cityInfo);</span><br><span class=\"line\">            if (&quot;内网IP&quot;.equals(cityInfo.get(&quot;ISP&quot;)))&#123;</span><br><span class=\"line\">                return Result.success(&quot;内网&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            return Result.success(&quot;未知&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        else &#123;</span><br><span class=\"line\">            System.out.println(cityInfo.get(&quot;country&quot;));</span><br><span class=\"line\">            return Result.success(cityInfo.get(&quot;country&quot;));</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、前端\"><a href=\"#2、前端\" class=\"headerlink\" title=\"2、前端\"></a>2、前端</h3><p>(下面仅仅展示部分关键代码)</p>\n<p><strong>api</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export function getIpRegionInfo() &#123;</span><br><span class=\"line\">  return request(&#123;</span><br><span class=\"line\">    url: &#x27;/users/getIpRegion&#x27;,</span><br><span class=\"line\">    method: &#x27;get&#x27;</span><br><span class=\"line\">  &#125;)</span><br></pre></td></tr></table></figure>\n\n<p><strong>vue页面</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;template&gt;</span><br><span class=\"line\">  &lt;el-card&gt;</span><br><span class=\"line\">    &lt;div class=&quot;me-author-description&quot; v-if=&quot;!user.login&quot;&gt;</span><br><span class=\"line\">      &lt;span&gt;&lt;i class=&quot;el-icon-location-outline&quot;&gt;&lt;/i&gt; &amp;nbsp;IP属地:&#123;&#123;ip&#125;&#125;&lt;/span&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">  &lt;/el-card&gt;</span><br><span class=\"line\">&lt;/template&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">  import &#123;getIpRegionInfo&#125; from &#x27;@/api/login&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">  export default &#123;</span><br><span class=\"line\">    name: &#x27;CardMe&#x27;,</span><br><span class=\"line\">    created() &#123;</span><br><span class=\"line\">      this.getIpRegionInfo()</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    data() &#123;</span><br><span class=\"line\">      return &#123;</span><br><span class=\"line\">        ip: null,</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    methods: &#123;</span><br><span class=\"line\">      getIpRegionInfo() &#123;</span><br><span class=\"line\">        getIpRegionInfo().then((data =&gt; &#123;</span><br><span class=\"line\">          this.ip = data.data</span><br><span class=\"line\">        &#125;)).catch(error =&gt; &#123;</span><br><span class=\"line\">          if (error !== &#x27;error&#x27;) &#123;</span><br><span class=\"line\">            that.$message(&#123;type: &#x27;error&#x27;, message: &#x27;ip归属地获取失败!&#x27;, showClose: true&#125;)</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">        &#125;)</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"五、扩展\"><a href=\"#五、扩展\" class=\"headerlink\" title=\"五、扩展\"></a>五、扩展</h2><h3 id=\"1、好文\"><a href=\"#1、好文\" class=\"headerlink\" title=\"1、好文\"></a>1、好文</h3><ul>\n<li><p><a href=\"https://segmentfault.com/a/1190000039019933\">深入浅出之ip2region实现</a></p>\n</li>\n<li><p>ip2region2.x</p>\n<p><a href=\"https://blog.csdn.net/weixin_42144379/article/details/84900446?spm=1001.2101.3001.6650.19&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-19-84900446-blog-120698683.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-19-84900446-blog-120698683.pc_relevant_default&utm_relevant_index=22\">Java 根据 IP 地址来获取 位置 – 使用 ip2region</a></p>\n<p><a href=\"https://blog.csdn.net/sinat_27933301/article/details/123170533?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-123170533-blog-124451706.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.1&utm_relevant_index=3\">使用强大的离线IP地址定位库ip2region获取城市信息</a></p>\n</li>\n<li><p>1.x</p>\n<p><a href=\"https://malian.tech/article/111345\">IP获取城市-Java调用ip2region</a></p>\n</li>\n</ul>\n<h3 id=\"2、待尝试\"><a href=\"#2、待尝试\" class=\"headerlink\" title=\"2、待尝试\"></a>2、待尝试</h3><ul>\n<li><p><a href=\"https://segmentfault.com/a/1190000022622489\">mica 2.0.1 发布新增最好用的 ip2region boot stater</a></p>\n</li>\n<li><p>@IP注解</p>\n<p>后续有时间尝试一下 @IP注解切面开发<a href=\"https://blog.csdn.net/weixin_33005117/article/details/125599192?spm=1001.2101.3001.6650.8&utm_medium=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-125599192-blog-107375608.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~BlogCommendFromBaidu~Rate-8-125599192-blog-107375608.pc_relevant_default&utm_relevant_index=9\">参考</a></p>\n<p>之后在接口方法上加上 @IP 注解就可以实现监控Controller接口的访问地址</p>\n</li>\n</ul>\n"},{"title":"Windows下ElasticSearch8.5.1下载安装及使用","copyright":true,"date":"2022-11-23T10:17:00.000Z","description":"ElasticSearch下载安装及使用","_content":"\n## ElasticSearch下载安装及使用\n\n### 前言\n\nElasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式的全文搜索引擎，基于restful web接口。Elasticsearch是用Java语言开发的，基于Apache协议的开源项目，是目前最受欢迎的企业搜索引擎。Elasticsearch广泛运用于云计算中，能够达到实时搜索，具有稳定，可靠，快速的特点。\n\n由于是个人开发环境，准备尝试最新的版本，不怕核心业务出问题，而且可以享受新版本的新功能、高性能等优点，保持自己技术的不断演进。本次尝试新版本V8.5.1。\n\n不过要注意一下版本对应关系\n\nhttps://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153626401-341014184.png)\n\n\n- 下载地址：https://www.elastic.co/cn/downloads/past-releases\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153915252-1831743221.png)\n\n\n- elasticsearch默认端口为9200；\n- Kibana默认端口为5601。\n\n### 安装\n\n####  Elasticsearch\n\n1、下载\n\n下载Elasticsearch zip包，并解压到指定目录，下载地址：https://www.elastic.co/cn/downloads/elasticsearch\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123152941797-1053419929.png)\n\n2、启动（获取登录密码）\n\n运行bin目录下的elasticsearch.bat启动Elasticsearch；\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153050837-236704868.png)\n\n出现如下\n\n```\nwarning: ignoring JAVA_HOME=D:\\Environment\\Java\\jdk1.8.0_281; using bundled JDK\n```\n\n回车即可。\n\n账号和密码记录起来关闭下面页面\n\n```\nelastic\nTetT4MAcOLew5x-nrUhR\n```\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153217942-618302738.png)\n\n3、修改yml配置文件\n\n打开config 目录下面的 elasticsearch.yml 文件，把加密关闭\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153245736-1598997349.png)\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153255337-1553269531.png)\n\n\n建议可以把所有的（4个）`enabled：true改成false`\n\n不然还会报错，当然修改也可以运行。\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153316742-1509047586.png)\n\n4、重启登录\n\n修改之后记得保存关闭，重新双击bin目录下面的 elasticsearch.bat ，浏览器打开 localhost:9200输入账号密码\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153304496-1553677349.png)\n\n登录成功可见\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153308813-1108409909.png)\n\n5、其他操作\n\n- 其一，创建 “kibana_system”用户\n\n进入es的bin目录下打开命令行界面，创建用户保存密码，输入命令：\n\n```\nbin\\elasticsearch-reset-password -u kibana_system\n```\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153321534-953734721.png)\n\n注意创建用户要确定启动es\n\n否则报错：`ERROR: Failed to determine the health of the cluster`\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153328602-574621719.png)\n\n保存密码`0xSAku3csJeFooqiVXOW`，后续配置Kibana会用到。\n\n- 其二，安装中文分词插件（后续补充详细操作）\n\n#### Kibana\n\n1、下载Kibana（注意版本对应）\n\nKibana是访问Elasticsearch的客户端，下载完成后解压到指定目录，下载地址：https://www.elastic.co/cn/downloads/past-releases#kibana\n\n\n2、配置\n\n第一步，要有创建 的“kibana_system”用户（上文已创建），没有创建即可。\n\n第二步，打开kibana的config文件夹中的kibana.yml，添加配置信息。\t\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153334434-1909134036.png)\n\n  kibana.yml添加如下配置\n\n   ```\n   server.port: 5601  \n   server.host: \"0.0.0.0\"\n   # 国际化中文\n   i18n.locale: \"zh-CN\"\n   # 配置es集群url\n   elasticsearch.hosts: [\"http://localhost:9200\"] \n   # 创建连接用户的账号和密码，注意此密码是创建连接用户时保存的密码\n   elasticsearch.username: \"kibana_system\"\n   elasticsearch.password: \"0xSAku3csJeFooqiVXOW\"   \n   ```\n\n3、启动\n\n运行bin目录下的kibana.bat，启动Kibana的用户界面\n\n4、访问\n\n浏览器打开 localhost:5601即可打开Kibana的用户界面，出现如下界面表示运行成功。\n\n> 注意密码为 elasticsearch的账号密码 \n>\n> 账号：elastic\n>\n> 密码：启动elasticsearch时保存的密码\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153338693-731479448.png)\n\n登录后暂时选择自己浏览\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153343093-1497482917.png)\n\n进入到系统界面如图\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153346388-2038670210.png)\n\n\n### 入门使用体验\n\n通过kibana登录elasticsearch进入控制台操作一下。\n\n登录kibana点击左侧菜单 => Management => 开发工具\n\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153352114-920323856.png)\n\n进入控制台\n\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153356066-462304454.png)\n\n\n操作1：查询所有节点\n\n控制台输入请求，点击发送请求，右侧展示结果。\n\n```powershell\nGET /_cat/nodes?v \n```\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153359657-726233578.png)\n\n操作2：默认的分析器\n\nstandard 是默认的分析器。它提供了基于语法的标记化（基于Unicode文本分割算法），适用于大多数语言。\n\n```fsharp\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\":     \"新年大吉\"\n}\n```\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153404682-549087824.png)\n","source":"_posts/Windows 下 ElasticSearch8.5.1下载安装及使用.md","raw":"---\ntitle: 'Windows下ElasticSearch8.5.1下载安装及使用'\ncopyright: true\ndate: '2022-11-23 18:17'\ndescription: 'ElasticSearch下载安装及使用'\ntags: 'ElasticSearch'\ncategories: '中间件'\n---\n\n## ElasticSearch下载安装及使用\n\n### 前言\n\nElasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式的全文搜索引擎，基于restful web接口。Elasticsearch是用Java语言开发的，基于Apache协议的开源项目，是目前最受欢迎的企业搜索引擎。Elasticsearch广泛运用于云计算中，能够达到实时搜索，具有稳定，可靠，快速的特点。\n\n由于是个人开发环境，准备尝试最新的版本，不怕核心业务出问题，而且可以享受新版本的新功能、高性能等优点，保持自己技术的不断演进。本次尝试新版本V8.5.1。\n\n不过要注意一下版本对应关系\n\nhttps://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153626401-341014184.png)\n\n\n- 下载地址：https://www.elastic.co/cn/downloads/past-releases\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153915252-1831743221.png)\n\n\n- elasticsearch默认端口为9200；\n- Kibana默认端口为5601。\n\n### 安装\n\n####  Elasticsearch\n\n1、下载\n\n下载Elasticsearch zip包，并解压到指定目录，下载地址：https://www.elastic.co/cn/downloads/elasticsearch\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123152941797-1053419929.png)\n\n2、启动（获取登录密码）\n\n运行bin目录下的elasticsearch.bat启动Elasticsearch；\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153050837-236704868.png)\n\n出现如下\n\n```\nwarning: ignoring JAVA_HOME=D:\\Environment\\Java\\jdk1.8.0_281; using bundled JDK\n```\n\n回车即可。\n\n账号和密码记录起来关闭下面页面\n\n```\nelastic\nTetT4MAcOLew5x-nrUhR\n```\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153217942-618302738.png)\n\n3、修改yml配置文件\n\n打开config 目录下面的 elasticsearch.yml 文件，把加密关闭\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153245736-1598997349.png)\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153255337-1553269531.png)\n\n\n建议可以把所有的（4个）`enabled：true改成false`\n\n不然还会报错，当然修改也可以运行。\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153316742-1509047586.png)\n\n4、重启登录\n\n修改之后记得保存关闭，重新双击bin目录下面的 elasticsearch.bat ，浏览器打开 localhost:9200输入账号密码\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153304496-1553677349.png)\n\n登录成功可见\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153308813-1108409909.png)\n\n5、其他操作\n\n- 其一，创建 “kibana_system”用户\n\n进入es的bin目录下打开命令行界面，创建用户保存密码，输入命令：\n\n```\nbin\\elasticsearch-reset-password -u kibana_system\n```\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153321534-953734721.png)\n\n注意创建用户要确定启动es\n\n否则报错：`ERROR: Failed to determine the health of the cluster`\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153328602-574621719.png)\n\n保存密码`0xSAku3csJeFooqiVXOW`，后续配置Kibana会用到。\n\n- 其二，安装中文分词插件（后续补充详细操作）\n\n#### Kibana\n\n1、下载Kibana（注意版本对应）\n\nKibana是访问Elasticsearch的客户端，下载完成后解压到指定目录，下载地址：https://www.elastic.co/cn/downloads/past-releases#kibana\n\n\n2、配置\n\n第一步，要有创建 的“kibana_system”用户（上文已创建），没有创建即可。\n\n第二步，打开kibana的config文件夹中的kibana.yml，添加配置信息。\t\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153334434-1909134036.png)\n\n  kibana.yml添加如下配置\n\n   ```\n   server.port: 5601  \n   server.host: \"0.0.0.0\"\n   # 国际化中文\n   i18n.locale: \"zh-CN\"\n   # 配置es集群url\n   elasticsearch.hosts: [\"http://localhost:9200\"] \n   # 创建连接用户的账号和密码，注意此密码是创建连接用户时保存的密码\n   elasticsearch.username: \"kibana_system\"\n   elasticsearch.password: \"0xSAku3csJeFooqiVXOW\"   \n   ```\n\n3、启动\n\n运行bin目录下的kibana.bat，启动Kibana的用户界面\n\n4、访问\n\n浏览器打开 localhost:5601即可打开Kibana的用户界面，出现如下界面表示运行成功。\n\n> 注意密码为 elasticsearch的账号密码 \n>\n> 账号：elastic\n>\n> 密码：启动elasticsearch时保存的密码\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153338693-731479448.png)\n\n登录后暂时选择自己浏览\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153343093-1497482917.png)\n\n进入到系统界面如图\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153346388-2038670210.png)\n\n\n### 入门使用体验\n\n通过kibana登录elasticsearch进入控制台操作一下。\n\n登录kibana点击左侧菜单 => Management => 开发工具\n\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153352114-920323856.png)\n\n进入控制台\n\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153356066-462304454.png)\n\n\n操作1：查询所有节点\n\n控制台输入请求，点击发送请求，右侧展示结果。\n\n```powershell\nGET /_cat/nodes?v \n```\n\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153359657-726233578.png)\n\n操作2：默认的分析器\n\nstandard 是默认的分析器。它提供了基于语法的标记化（基于Unicode文本分割算法），适用于大多数语言。\n\n```fsharp\nPOST _analyze\n{\n  \"analyzer\": \"standard\",\n  \"text\":     \"新年大吉\"\n}\n```\n![](Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153404682-549087824.png)\n","slug":"Windows 下 ElasticSearch8.5.1下载安装及使用","published":1,"updated":"2022-12-07T07:15:14.399Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftq001hsw6x069nc1qf","content":"<h2 id=\"ElasticSearch下载安装及使用\"><a href=\"#ElasticSearch下载安装及使用\" class=\"headerlink\" title=\"ElasticSearch下载安装及使用\"></a>ElasticSearch下载安装及使用</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Elasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式的全文搜索引擎，基于restful web接口。Elasticsearch是用Java语言开发的，基于Apache协议的开源项目，是目前最受欢迎的企业搜索引擎。Elasticsearch广泛运用于云计算中，能够达到实时搜索，具有稳定，可靠，快速的特点。</p>\n<p>由于是个人开发环境，准备尝试最新的版本，不怕核心业务出问题，而且可以享受新版本的新功能、高性能等优点，保持自己技术的不断演进。本次尝试新版本V8.5.1。</p>\n<p>不过要注意一下版本对应关系</p>\n<p><a href=\"https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features\">https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features</a></p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153626401-341014184.png\" class=\"\">\n\n\n<ul>\n<li>下载地址：<a href=\"https://www.elastic.co/cn/downloads/past-releases\">https://www.elastic.co/cn/downloads/past-releases</a></li>\n</ul>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153915252-1831743221.png\" class=\"\">\n\n\n<ul>\n<li>elasticsearch默认端口为9200；</li>\n<li>Kibana默认端口为5601。</li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h4><p>1、下载</p>\n<p>下载Elasticsearch zip包，并解压到指定目录，下载地址：<a href=\"https://www.elastic.co/cn/downloads/elasticsearch\">https://www.elastic.co/cn/downloads/elasticsearch</a></p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123152941797-1053419929.png\" class=\"\">\n\n<p>2、启动（获取登录密码）</p>\n<p>运行bin目录下的elasticsearch.bat启动Elasticsearch；</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153050837-236704868.png\" class=\"\">\n\n<p>出现如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warning: ignoring JAVA_HOME=D:\\Environment\\Java\\jdk1.8.0_281; using bundled JDK</span><br></pre></td></tr></table></figure>\n\n<p>回车即可。</p>\n<p>账号和密码记录起来关闭下面页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elastic</span><br><span class=\"line\">TetT4MAcOLew5x-nrUhR</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153217942-618302738.png\" class=\"\">\n\n<p>3、修改yml配置文件</p>\n<p>打开config 目录下面的 elasticsearch.yml 文件，把加密关闭</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153245736-1598997349.png\" class=\"\">\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153255337-1553269531.png\" class=\"\">\n\n\n<p>建议可以把所有的（4个）<code>enabled：true改成false</code></p>\n<p>不然还会报错，当然修改也可以运行。</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153316742-1509047586.png\" class=\"\">\n\n<p>4、重启登录</p>\n<p>修改之后记得保存关闭，重新双击bin目录下面的 elasticsearch.bat ，浏览器打开 localhost:9200输入账号密码</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153304496-1553677349.png\" class=\"\">\n\n<p>登录成功可见</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153308813-1108409909.png\" class=\"\">\n\n<p>5、其他操作</p>\n<ul>\n<li>其一，创建 “kibana_system”用户</li>\n</ul>\n<p>进入es的bin目录下打开命令行界面，创建用户保存密码，输入命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin\\elasticsearch-reset-password -u kibana_system</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153321534-953734721.png\" class=\"\">\n\n<p>注意创建用户要确定启动es</p>\n<p>否则报错：<code>ERROR: Failed to determine the health of the cluster</code></p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153328602-574621719.png\" class=\"\">\n\n<p>保存密码<code>0xSAku3csJeFooqiVXOW</code>，后续配置Kibana会用到。</p>\n<ul>\n<li>其二，安装中文分词插件（后续补充详细操作）</li>\n</ul>\n<h4 id=\"Kibana\"><a href=\"#Kibana\" class=\"headerlink\" title=\"Kibana\"></a>Kibana</h4><p>1、下载Kibana（注意版本对应）</p>\n<p>Kibana是访问Elasticsearch的客户端，下载完成后解压到指定目录，下载地址：<a href=\"https://www.elastic.co/cn/downloads/past-releases#kibana\">https://www.elastic.co/cn/downloads/past-releases#kibana</a></p>\n<p>2、配置</p>\n<p>第一步，要有创建 的“kibana_system”用户（上文已创建），没有创建即可。</p>\n<p>第二步，打开kibana的config文件夹中的kibana.yml，添加配置信息。    </p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153334434-1909134036.png\" class=\"\">\n\n<p>  kibana.yml添加如下配置</p>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port: 5601  </span><br><span class=\"line\">server.host: &quot;0.0.0.0&quot;</span><br><span class=\"line\"># 国际化中文</span><br><span class=\"line\">i18n.locale: &quot;zh-CN&quot;</span><br><span class=\"line\"># 配置es集群url</span><br><span class=\"line\">elasticsearch.hosts: [&quot;http://localhost:9200&quot;] </span><br><span class=\"line\"># 创建连接用户的账号和密码，注意此密码是创建连接用户时保存的密码</span><br><span class=\"line\">elasticsearch.username: &quot;kibana_system&quot;</span><br><span class=\"line\">elasticsearch.password: &quot;0xSAku3csJeFooqiVXOW&quot;   </span><br></pre></td></tr></table></figure>\n\n<p>3、启动</p>\n<p>运行bin目录下的kibana.bat，启动Kibana的用户界面</p>\n<p>4、访问</p>\n<p>浏览器打开 localhost:5601即可打开Kibana的用户界面，出现如下界面表示运行成功。</p>\n<blockquote>\n<p>注意密码为 elasticsearch的账号密码 </p>\n<p>账号：elastic</p>\n<p>密码：启动elasticsearch时保存的密码</p>\n</blockquote>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153338693-731479448.png\" class=\"\">\n\n<p>登录后暂时选择自己浏览</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153343093-1497482917.png\" class=\"\">\n\n<p>进入到系统界面如图</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153346388-2038670210.png\" class=\"\">\n\n\n<h3 id=\"入门使用体验\"><a href=\"#入门使用体验\" class=\"headerlink\" title=\"入门使用体验\"></a>入门使用体验</h3><p>通过kibana登录elasticsearch进入控制台操作一下。</p>\n<p>登录kibana点击左侧菜单 =&gt; Management =&gt; 开发工具</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153352114-920323856.png\" class=\"\">\n\n<p>进入控制台</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153356066-462304454.png\" class=\"\">\n\n\n<p>操作1：查询所有节点</p>\n<p>控制台输入请求，点击发送请求，右侧展示结果。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_cat/nodes?v </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153359657-726233578.png\" class=\"\">\n\n<p>操作2：默认的分析器</p>\n<p>standard 是默认的分析器。它提供了基于语法的标记化（基于Unicode文本分割算法），适用于大多数语言。</p>\n<figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST <span class=\"keyword\">_analyze</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;analyzer&quot;</span><span class=\"operator\">:</span> <span class=\"string\">&quot;standard&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;text&quot;</span><span class=\"operator\">:</span>     <span class=\"string\">&quot;新年大吉&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153404682-549087824.png\" class=\"\">\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/vq/wallhaven-vqm813.jpg","excerpt":"","more":"<h2 id=\"ElasticSearch下载安装及使用\"><a href=\"#ElasticSearch下载安装及使用\" class=\"headerlink\" title=\"ElasticSearch下载安装及使用\"></a>ElasticSearch下载安装及使用</h2><h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Elasticsearch是一个基于Lucene的搜索服务器。它提供了一个分布式的全文搜索引擎，基于restful web接口。Elasticsearch是用Java语言开发的，基于Apache协议的开源项目，是目前最受欢迎的企业搜索引擎。Elasticsearch广泛运用于云计算中，能够达到实时搜索，具有稳定，可靠，快速的特点。</p>\n<p>由于是个人开发环境，准备尝试最新的版本，不怕核心业务出问题，而且可以享受新版本的新功能、高性能等优点，保持自己技术的不断演进。本次尝试新版本V8.5.1。</p>\n<p>不过要注意一下版本对应关系</p>\n<p><a href=\"https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features\">https://docs.spring.io/spring-data/elasticsearch/docs/4.0.1.RELEASE/reference/html/#new-features</a></p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153626401-341014184.png\" class=\"\">\n\n\n<ul>\n<li>下载地址：<a href=\"https://www.elastic.co/cn/downloads/past-releases\">https://www.elastic.co/cn/downloads/past-releases</a></li>\n</ul>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153915252-1831743221.png\" class=\"\">\n\n\n<ul>\n<li>elasticsearch默认端口为9200；</li>\n<li>Kibana默认端口为5601。</li>\n</ul>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><h4 id=\"Elasticsearch\"><a href=\"#Elasticsearch\" class=\"headerlink\" title=\"Elasticsearch\"></a>Elasticsearch</h4><p>1、下载</p>\n<p>下载Elasticsearch zip包，并解压到指定目录，下载地址：<a href=\"https://www.elastic.co/cn/downloads/elasticsearch\">https://www.elastic.co/cn/downloads/elasticsearch</a></p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123152941797-1053419929.png\" class=\"\">\n\n<p>2、启动（获取登录密码）</p>\n<p>运行bin目录下的elasticsearch.bat启动Elasticsearch；</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153050837-236704868.png\" class=\"\">\n\n<p>出现如下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">warning: ignoring JAVA_HOME=D:\\Environment\\Java\\jdk1.8.0_281; using bundled JDK</span><br></pre></td></tr></table></figure>\n\n<p>回车即可。</p>\n<p>账号和密码记录起来关闭下面页面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">elastic</span><br><span class=\"line\">TetT4MAcOLew5x-nrUhR</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153217942-618302738.png\" class=\"\">\n\n<p>3、修改yml配置文件</p>\n<p>打开config 目录下面的 elasticsearch.yml 文件，把加密关闭</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153245736-1598997349.png\" class=\"\">\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153255337-1553269531.png\" class=\"\">\n\n\n<p>建议可以把所有的（4个）<code>enabled：true改成false</code></p>\n<p>不然还会报错，当然修改也可以运行。</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153316742-1509047586.png\" class=\"\">\n\n<p>4、重启登录</p>\n<p>修改之后记得保存关闭，重新双击bin目录下面的 elasticsearch.bat ，浏览器打开 localhost:9200输入账号密码</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153304496-1553677349.png\" class=\"\">\n\n<p>登录成功可见</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153308813-1108409909.png\" class=\"\">\n\n<p>5、其他操作</p>\n<ul>\n<li>其一，创建 “kibana_system”用户</li>\n</ul>\n<p>进入es的bin目录下打开命令行界面，创建用户保存密码，输入命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin\\elasticsearch-reset-password -u kibana_system</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153321534-953734721.png\" class=\"\">\n\n<p>注意创建用户要确定启动es</p>\n<p>否则报错：<code>ERROR: Failed to determine the health of the cluster</code></p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153328602-574621719.png\" class=\"\">\n\n<p>保存密码<code>0xSAku3csJeFooqiVXOW</code>，后续配置Kibana会用到。</p>\n<ul>\n<li>其二，安装中文分词插件（后续补充详细操作）</li>\n</ul>\n<h4 id=\"Kibana\"><a href=\"#Kibana\" class=\"headerlink\" title=\"Kibana\"></a>Kibana</h4><p>1、下载Kibana（注意版本对应）</p>\n<p>Kibana是访问Elasticsearch的客户端，下载完成后解压到指定目录，下载地址：<a href=\"https://www.elastic.co/cn/downloads/past-releases#kibana\">https://www.elastic.co/cn/downloads/past-releases#kibana</a></p>\n<p>2、配置</p>\n<p>第一步，要有创建 的“kibana_system”用户（上文已创建），没有创建即可。</p>\n<p>第二步，打开kibana的config文件夹中的kibana.yml，添加配置信息。    </p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153334434-1909134036.png\" class=\"\">\n\n<p>  kibana.yml添加如下配置</p>\n   <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server.port: 5601  </span><br><span class=\"line\">server.host: &quot;0.0.0.0&quot;</span><br><span class=\"line\"># 国际化中文</span><br><span class=\"line\">i18n.locale: &quot;zh-CN&quot;</span><br><span class=\"line\"># 配置es集群url</span><br><span class=\"line\">elasticsearch.hosts: [&quot;http://localhost:9200&quot;] </span><br><span class=\"line\"># 创建连接用户的账号和密码，注意此密码是创建连接用户时保存的密码</span><br><span class=\"line\">elasticsearch.username: &quot;kibana_system&quot;</span><br><span class=\"line\">elasticsearch.password: &quot;0xSAku3csJeFooqiVXOW&quot;   </span><br></pre></td></tr></table></figure>\n\n<p>3、启动</p>\n<p>运行bin目录下的kibana.bat，启动Kibana的用户界面</p>\n<p>4、访问</p>\n<p>浏览器打开 localhost:5601即可打开Kibana的用户界面，出现如下界面表示运行成功。</p>\n<blockquote>\n<p>注意密码为 elasticsearch的账号密码 </p>\n<p>账号：elastic</p>\n<p>密码：启动elasticsearch时保存的密码</p>\n</blockquote>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153338693-731479448.png\" class=\"\">\n\n<p>登录后暂时选择自己浏览</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153343093-1497482917.png\" class=\"\">\n\n<p>进入到系统界面如图</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153346388-2038670210.png\" class=\"\">\n\n\n<h3 id=\"入门使用体验\"><a href=\"#入门使用体验\" class=\"headerlink\" title=\"入门使用体验\"></a>入门使用体验</h3><p>通过kibana登录elasticsearch进入控制台操作一下。</p>\n<p>登录kibana点击左侧菜单 =&gt; Management =&gt; 开发工具</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153352114-920323856.png\" class=\"\">\n\n<p>进入控制台</p>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153356066-462304454.png\" class=\"\">\n\n\n<p>操作1：查询所有节点</p>\n<p>控制台输入请求，点击发送请求，右侧展示结果。</p>\n<figure class=\"highlight powershell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /_cat/nodes?v </span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153359657-726233578.png\" class=\"\">\n\n<p>操作2：默认的分析器</p>\n<p>standard 是默认的分析器。它提供了基于语法的标记化（基于Unicode文本分割算法），适用于大多数语言。</p>\n<figure class=\"highlight fsharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST <span class=\"keyword\">_analyze</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"string\">&quot;analyzer&quot;</span><span class=\"operator\">:</span> <span class=\"string\">&quot;standard&quot;</span>,</span><br><span class=\"line\">  <span class=\"string\">&quot;text&quot;</span><span class=\"operator\">:</span>     <span class=\"string\">&quot;新年大吉&quot;</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<img src=\"/2022/11/23/Windows%20%E4%B8%8B%20ElasticSearch8.5.1%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/2291368-20221123153404682-549087824.png\" class=\"\">\n"},{"title":"Windows下Maven安装及配置教程","copyright":true,"date":"2022-06-30T12:51:00.000Z","_content":"\n1. 下载(本文下载的是zip文件)\n\n   官网下载：https://maven.apache.org/download.cgi\n\n   下载完成后解压到指定目录下即可。\n\n2. 配置\n\n   - 配置本地仓库\n\n     默认本地仓库是C盘，修改到指定文件夹下。注意Maven的核心配置文件：`conf/settings.xml`\n\n     打开添加如图如下代码即可\n\n     ![Snipaste_2022-05-13_09-06-50](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-06-50.png)\n\n     ```\n     <!--配置Maven本地仓库-->\n     <localRepository>F:\\ProDocument\\common\\maven-repository</localRepository>\n     ```\n\n   - 配置阿里云提供的镜像仓库\n\n     注：Maven默认中央仓库的id 为 central。id是唯一的。因此使用< id>central< /id>覆盖了默认的中央仓库。\n\n     ```\n      <mirror>\n          <id>nexus-aliyun</id>\n          <mirrorOf>central</mirrorOf>\n          <name>Nexus aliyun</name>\n          <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n      </mirror>\n     ```\n\n   - 配置java版本\n     ```\n     <profiles>\n         <profile>\n         \t<id>jdk-1.8</id>\n           \t<activation>\n             \t<activeByDefault>true</activeByDefault>\n                 <jdk>1.8</jdk>\n           \t</activation>\n           \t<properties>   \t\t\n                 <maven.compiler.source>1.8</maven.compiler.source>\n                 <maven.compiler.target>1.8</maven.compiler.target>\n                 <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n          \t</properties>\n         </profile>\n     </profiles>\n     ```\n   - settings.xml\n\n     ```\n      <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     \n      <settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\n     \n        <!--配置Maven本地仓库-->\n        <localRepository>F:\\ProDocument\\common\\maven-repository</localRepository>\n       \n        <mirrors>\n          <!-- 阿里云镜像 -->\n          <mirror>\n            <id>nexus-aliyun</id>\n            <mirrorOf>*</mirrorOf>\n            <name>Nexus aliyun</name>\n            <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n          </mirror>\n        </mirrors>\n     \n        <profiles>\n          <!-- Java版本 -->\n          <profile>\n          \t<id>jdk-1.8</id>\n            \t<activation>\n              \t<activeByDefault>true</activeByDefault>\n                  <jdk>1.8</jdk>\n            \t</activation>\n            \t<properties>   \t\t\n                  <maven.compiler.source>1.8</maven.compiler.source>\n                  <maven.compiler.target>1.8</maven.compiler.target>\n                  <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n           \t</properties>\n          </profile>\n          \n        </profiles>\n      </settings>\n     ```\n\n   - 配置环境变量\n\n     首先Maven是一个用java语言开发的程序，它必须基于JDK来运行，需要通过JAVA_HOME来找到JDK的安装位置。因此需要配置好Java环境。\n\n     其次配置`MAVEN_HOME`中\n\n     ![Snipaste_2022-05-13_09-15-10](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-15-10.png)\n     \n     Path路径下配置%MAVEN_HOME\\bin;\n     \n     ![Snipaste_2022-05-13_09-18-05](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-18-05.png)\n\n3. 验证\n\n    cmd 命令行输入`mvn -version`（-v缩写）出现如下情况即验证成功。\n\n    ![Snipaste_2022-05-13_10-23-28](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_10-23-28.png)\n    \n    ```\n    C:\\Users\\pc>mvn -version\n    Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\n    Maven home: D:\\Environment\\apache-maven-3.6.3\\bin\\..\n    Java version: 1.8.0_281, vendor: Oracle Corporation, runtime: D:\\Environment\\Java\\jdk1.8.0_281\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\n    ```\n","source":"_posts/Windows下Maven安装及配置教程.md","raw":"---\ntitle: 'Windows下Maven安装及配置教程'\ncopyright: true\ndate: '2022-06-30 20:51'\ntags: 'Maven'\ncategories: '环境'\n---\n\n1. 下载(本文下载的是zip文件)\n\n   官网下载：https://maven.apache.org/download.cgi\n\n   下载完成后解压到指定目录下即可。\n\n2. 配置\n\n   - 配置本地仓库\n\n     默认本地仓库是C盘，修改到指定文件夹下。注意Maven的核心配置文件：`conf/settings.xml`\n\n     打开添加如图如下代码即可\n\n     ![Snipaste_2022-05-13_09-06-50](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-06-50.png)\n\n     ```\n     <!--配置Maven本地仓库-->\n     <localRepository>F:\\ProDocument\\common\\maven-repository</localRepository>\n     ```\n\n   - 配置阿里云提供的镜像仓库\n\n     注：Maven默认中央仓库的id 为 central。id是唯一的。因此使用< id>central< /id>覆盖了默认的中央仓库。\n\n     ```\n      <mirror>\n          <id>nexus-aliyun</id>\n          <mirrorOf>central</mirrorOf>\n          <name>Nexus aliyun</name>\n          <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n      </mirror>\n     ```\n\n   - 配置java版本\n     ```\n     <profiles>\n         <profile>\n         \t<id>jdk-1.8</id>\n           \t<activation>\n             \t<activeByDefault>true</activeByDefault>\n                 <jdk>1.8</jdk>\n           \t</activation>\n           \t<properties>   \t\t\n                 <maven.compiler.source>1.8</maven.compiler.source>\n                 <maven.compiler.target>1.8</maven.compiler.target>\n                 <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n          \t</properties>\n         </profile>\n     </profiles>\n     ```\n   - settings.xml\n\n     ```\n      <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n     \n      <settings xmlns=\"http://maven.apache.org/SETTINGS/1.0.0\"\n                xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n                xsi:schemaLocation=\"http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd\">\n     \n        <!--配置Maven本地仓库-->\n        <localRepository>F:\\ProDocument\\common\\maven-repository</localRepository>\n       \n        <mirrors>\n          <!-- 阿里云镜像 -->\n          <mirror>\n            <id>nexus-aliyun</id>\n            <mirrorOf>*</mirrorOf>\n            <name>Nexus aliyun</name>\n            <url>http://maven.aliyun.com/nexus/content/groups/public</url>\n          </mirror>\n        </mirrors>\n     \n        <profiles>\n          <!-- Java版本 -->\n          <profile>\n          \t<id>jdk-1.8</id>\n            \t<activation>\n              \t<activeByDefault>true</activeByDefault>\n                  <jdk>1.8</jdk>\n            \t</activation>\n            \t<properties>   \t\t\n                  <maven.compiler.source>1.8</maven.compiler.source>\n                  <maven.compiler.target>1.8</maven.compiler.target>\n                  <maven.compiler.compilerVersion>1.8</maven.compiler.compilerVersion>\n           \t</properties>\n          </profile>\n          \n        </profiles>\n      </settings>\n     ```\n\n   - 配置环境变量\n\n     首先Maven是一个用java语言开发的程序，它必须基于JDK来运行，需要通过JAVA_HOME来找到JDK的安装位置。因此需要配置好Java环境。\n\n     其次配置`MAVEN_HOME`中\n\n     ![Snipaste_2022-05-13_09-15-10](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-15-10.png)\n     \n     Path路径下配置%MAVEN_HOME\\bin;\n     \n     ![Snipaste_2022-05-13_09-18-05](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-18-05.png)\n\n3. 验证\n\n    cmd 命令行输入`mvn -version`（-v缩写）出现如下情况即验证成功。\n\n    ![Snipaste_2022-05-13_10-23-28](Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_10-23-28.png)\n    \n    ```\n    C:\\Users\\pc>mvn -version\n    Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)\n    Maven home: D:\\Environment\\apache-maven-3.6.3\\bin\\..\n    Java version: 1.8.0_281, vendor: Oracle Corporation, runtime: D:\\Environment\\Java\\jdk1.8.0_281\\jre\n    Default locale: zh_CN, platform encoding: GBK\n    OS name: \"windows 10\", version: \"10.0\", arch: \"amd64\", family: \"windows\"\n    ```\n","slug":"Windows下Maven安装及配置教程","published":1,"updated":"2022-12-07T06:40:31.195Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftq001ksw6xb8pv5jic","content":"<ol>\n<li><p>下载(本文下载的是zip文件)</p>\n<p>官网下载：<a href=\"https://maven.apache.org/download.cgi\">https://maven.apache.org/download.cgi</a></p>\n<p>下载完成后解压到指定目录下即可。</p>\n</li>\n<li><p>配置</p>\n<ul>\n<li><p>配置本地仓库</p>\n<p>默认本地仓库是C盘，修改到指定文件夹下。注意Maven的核心配置文件：<code>conf/settings.xml</code></p>\n<p>打开添加如图如下代码即可</p>\n<p><img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-06-50.png\" alt=\"Snipaste_2022-05-13_09-06-50\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--配置Maven本地仓库--&gt;</span><br><span class=\"line\">&lt;localRepository&gt;F:\\ProDocument\\common\\maven-repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>配置阿里云提供的镜像仓库</p>\n<p>注：Maven默认中央仓库的id 为 central。id是唯一的。因此使用&lt; id&gt;central&lt; /id&gt;覆盖了默认的中央仓库。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;mirror&gt;</span><br><span class=\"line\">    &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class=\"line\">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class=\"line\">    &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class=\"line\">    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class=\"line\">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>配置java版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;profiles&gt;</span><br><span class=\"line\">    &lt;profile&gt;</span><br><span class=\"line\">    \t&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class=\"line\">      \t&lt;activation&gt;</span><br><span class=\"line\">        \t&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class=\"line\">            &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class=\"line\">      \t&lt;/activation&gt;</span><br><span class=\"line\">      \t&lt;properties&gt;   \t\t</span><br><span class=\"line\">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class=\"line\">     \t&lt;/properties&gt;</span><br><span class=\"line\">    &lt;/profile&gt;</span><br><span class=\"line\">&lt;/profiles&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>settings.xml</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">     </span><br><span class=\"line\">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class=\"line\">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class=\"line\">     </span><br><span class=\"line\">  &lt;!--配置Maven本地仓库--&gt;</span><br><span class=\"line\">  &lt;localRepository&gt;F:\\ProDocument\\common\\maven-repository&lt;/localRepository&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">  &lt;mirrors&gt;</span><br><span class=\"line\">    &lt;!-- 阿里云镜像 --&gt;</span><br><span class=\"line\">    &lt;mirror&gt;</span><br><span class=\"line\">      &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class=\"line\">      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class=\"line\">      &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class=\"line\">      &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class=\"line\">    &lt;/mirror&gt;</span><br><span class=\"line\">  &lt;/mirrors&gt;</span><br><span class=\"line\">     </span><br><span class=\"line\">  &lt;profiles&gt;</span><br><span class=\"line\">    &lt;!-- Java版本 --&gt;</span><br><span class=\"line\">    &lt;profile&gt;</span><br><span class=\"line\">    \t&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class=\"line\">      \t&lt;activation&gt;</span><br><span class=\"line\">        \t&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class=\"line\">            &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class=\"line\">      \t&lt;/activation&gt;</span><br><span class=\"line\">      \t&lt;properties&gt;   \t\t</span><br><span class=\"line\">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class=\"line\">     \t&lt;/properties&gt;</span><br><span class=\"line\">    &lt;/profile&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &lt;/profiles&gt;</span><br><span class=\"line\">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>配置环境变量</p>\n<p>首先Maven是一个用java语言开发的程序，它必须基于JDK来运行，需要通过JAVA_HOME来找到JDK的安装位置。因此需要配置好Java环境。</p>\n<p>其次配置<code>MAVEN_HOME</code>中</p>\n<p><img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-15-10.png\" alt=\"Snipaste_2022-05-13_09-15-10\"></p>\n<p>Path路径下配置%MAVEN_HOME\\bin;</p>\n<p><img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-18-05.png\" alt=\"Snipaste_2022-05-13_09-18-05\"></p>\n</li>\n</ul>\n</li>\n<li><p>验证</p>\n<p> cmd 命令行输入<code>mvn -version</code>（-v缩写）出现如下情况即验证成功。</p>\n<p> <img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_10-23-28.png\" alt=\"Snipaste_2022-05-13_10-23-28\"></p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\pc&gt;mvn -version</span><br><span class=\"line\">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class=\"line\">Maven home: D:\\Environment\\apache-maven-3.6.3\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_281, vendor: Oracle Corporation, runtime: D:\\Environment\\Java\\jdk1.8.0_281\\jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<ol>\n<li><p>下载(本文下载的是zip文件)</p>\n<p>官网下载：<a href=\"https://maven.apache.org/download.cgi\">https://maven.apache.org/download.cgi</a></p>\n<p>下载完成后解压到指定目录下即可。</p>\n</li>\n<li><p>配置</p>\n<ul>\n<li><p>配置本地仓库</p>\n<p>默认本地仓库是C盘，修改到指定文件夹下。注意Maven的核心配置文件：<code>conf/settings.xml</code></p>\n<p>打开添加如图如下代码即可</p>\n<p><img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-06-50.png\" alt=\"Snipaste_2022-05-13_09-06-50\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;!--配置Maven本地仓库--&gt;</span><br><span class=\"line\">&lt;localRepository&gt;F:\\ProDocument\\common\\maven-repository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>配置阿里云提供的镜像仓库</p>\n<p>注：Maven默认中央仓库的id 为 central。id是唯一的。因此使用&lt; id&gt;central&lt; /id&gt;覆盖了默认的中央仓库。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;mirror&gt;</span><br><span class=\"line\">    &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class=\"line\">    &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;</span><br><span class=\"line\">    &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class=\"line\">    &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class=\"line\">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>配置java版本</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;profiles&gt;</span><br><span class=\"line\">    &lt;profile&gt;</span><br><span class=\"line\">    \t&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class=\"line\">      \t&lt;activation&gt;</span><br><span class=\"line\">        \t&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class=\"line\">            &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class=\"line\">      \t&lt;/activation&gt;</span><br><span class=\"line\">      \t&lt;properties&gt;   \t\t</span><br><span class=\"line\">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class=\"line\">     \t&lt;/properties&gt;</span><br><span class=\"line\">    &lt;/profile&gt;</span><br><span class=\"line\">&lt;/profiles&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>settings.xml</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class=\"line\">     </span><br><span class=\"line\">&lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot;</span><br><span class=\"line\">          xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span><br><span class=\"line\">          xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt;</span><br><span class=\"line\">     </span><br><span class=\"line\">  &lt;!--配置Maven本地仓库--&gt;</span><br><span class=\"line\">  &lt;localRepository&gt;F:\\ProDocument\\common\\maven-repository&lt;/localRepository&gt;</span><br><span class=\"line\"> </span><br><span class=\"line\">  &lt;mirrors&gt;</span><br><span class=\"line\">    &lt;!-- 阿里云镜像 --&gt;</span><br><span class=\"line\">    &lt;mirror&gt;</span><br><span class=\"line\">      &lt;id&gt;nexus-aliyun&lt;/id&gt;</span><br><span class=\"line\">      &lt;mirrorOf&gt;*&lt;/mirrorOf&gt;</span><br><span class=\"line\">      &lt;name&gt;Nexus aliyun&lt;/name&gt;</span><br><span class=\"line\">      &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt;</span><br><span class=\"line\">    &lt;/mirror&gt;</span><br><span class=\"line\">  &lt;/mirrors&gt;</span><br><span class=\"line\">     </span><br><span class=\"line\">  &lt;profiles&gt;</span><br><span class=\"line\">    &lt;!-- Java版本 --&gt;</span><br><span class=\"line\">    &lt;profile&gt;</span><br><span class=\"line\">    \t&lt;id&gt;jdk-1.8&lt;/id&gt;</span><br><span class=\"line\">      \t&lt;activation&gt;</span><br><span class=\"line\">        \t&lt;activeByDefault&gt;true&lt;/activeByDefault&gt;</span><br><span class=\"line\">            &lt;jdk&gt;1.8&lt;/jdk&gt;</span><br><span class=\"line\">      \t&lt;/activation&gt;</span><br><span class=\"line\">      \t&lt;properties&gt;   \t\t</span><br><span class=\"line\">            &lt;maven.compiler.source&gt;1.8&lt;/maven.compiler.source&gt;</span><br><span class=\"line\">            &lt;maven.compiler.target&gt;1.8&lt;/maven.compiler.target&gt;</span><br><span class=\"line\">            &lt;maven.compiler.compilerVersion&gt;1.8&lt;/maven.compiler.compilerVersion&gt;</span><br><span class=\"line\">     \t&lt;/properties&gt;</span><br><span class=\"line\">    &lt;/profile&gt;</span><br><span class=\"line\">    </span><br><span class=\"line\">  &lt;/profiles&gt;</span><br><span class=\"line\">&lt;/settings&gt;</span><br></pre></td></tr></table></figure></li>\n<li><p>配置环境变量</p>\n<p>首先Maven是一个用java语言开发的程序，它必须基于JDK来运行，需要通过JAVA_HOME来找到JDK的安装位置。因此需要配置好Java环境。</p>\n<p>其次配置<code>MAVEN_HOME</code>中</p>\n<p><img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-15-10.png\" alt=\"Snipaste_2022-05-13_09-15-10\"></p>\n<p>Path路径下配置%MAVEN_HOME\\bin;</p>\n<p><img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_09-18-05.png\" alt=\"Snipaste_2022-05-13_09-18-05\"></p>\n</li>\n</ul>\n</li>\n<li><p>验证</p>\n<p> cmd 命令行输入<code>mvn -version</code>（-v缩写）出现如下情况即验证成功。</p>\n<p> <img src=\"Windows%E4%B8%8BMaven%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/Snipaste_2022-05-13_10-23-28.png\" alt=\"Snipaste_2022-05-13_10-23-28\"></p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\Users\\pc&gt;mvn -version</span><br><span class=\"line\">Apache Maven 3.6.3 (cecedd343002696d0abb50b32b541b8a6ba2883f)</span><br><span class=\"line\">Maven home: D:\\Environment\\apache-maven-3.6.3\\bin\\..</span><br><span class=\"line\">Java version: 1.8.0_281, vendor: Oracle Corporation, runtime: D:\\Environment\\Java\\jdk1.8.0_281\\jre</span><br><span class=\"line\">Default locale: zh_CN, platform encoding: GBK</span><br><span class=\"line\">OS name: &quot;windows 10&quot;, version: &quot;10.0&quot;, arch: &quot;amd64&quot;, family: &quot;windows&quot;</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"Windows下RabbitMQ下载安装","copyright":true,"date":"2022-11-26T05:36:00.000Z","_content":"\n## 前言\n\nRabbitmq是一个消息队列\n\nErlang 可视化工具\n\n注意Rabbitmq和Erlang是有版本对应关系的\n\n查看地址：https://www.rabbitmq.com/which-erlang.html\n\n![](Windows下RabbitMQ下载安装/2291368-20221113170308568-904817832.png)\n\n下文安装使用24.2.2+v3.10\n\n## 安装\n\n首先进入RabbitMQ官网，下载最新的RabbitMQ安装包  \n\n网址：http://www.rabbitmq.com/install-windows.html\n\nRabbitMQ的github地址：https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10\n\nErlang的github地址：https://github.com/erlang/otp/releases/tag/OTP-24.2.2\n\n\n1、下载好后傻瓜式安装\n需要注意两点：\n- 先安装Erlang后，才能够安装RabbitMQ，因为RabbitMQ是基于Eralng语言开发的。\n- 主机名不能是中文名称\n\n\n2、安装完成后进入RabbitMq安装目录下的\\sbin目录下，输入下面命令，启动图形化界面\n\n```\n# 开启图形化界面\nrabbitmq-plugins enable rabbitmq_management\n```\n\n本地浏览器输入 http://localhost:15672\n\n会打开图形化管理页面，账号和密码都是  guest\n\n![](Windows下RabbitMQ下载安装/2291368-20221126132613809-1055551774.png)\n\n登录成功后如图\n\n![](Windows下RabbitMQ下载安装/2291368-20221126132646873-1365415137.png)\n\n==后续补充项目中使用==\n","source":"_posts/Windows下RabbitMQ下载安装.md","raw":"---\ntitle: 'Windows下RabbitMQ下载安装'\ncopyright: true\ndate: '2022-11-26 13:36'\ntags: 'RabbitMQ'\ncategories: '中间件'\n---\n\n## 前言\n\nRabbitmq是一个消息队列\n\nErlang 可视化工具\n\n注意Rabbitmq和Erlang是有版本对应关系的\n\n查看地址：https://www.rabbitmq.com/which-erlang.html\n\n![](Windows下RabbitMQ下载安装/2291368-20221113170308568-904817832.png)\n\n下文安装使用24.2.2+v3.10\n\n## 安装\n\n首先进入RabbitMQ官网，下载最新的RabbitMQ安装包  \n\n网址：http://www.rabbitmq.com/install-windows.html\n\nRabbitMQ的github地址：https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10\n\nErlang的github地址：https://github.com/erlang/otp/releases/tag/OTP-24.2.2\n\n\n1、下载好后傻瓜式安装\n需要注意两点：\n- 先安装Erlang后，才能够安装RabbitMQ，因为RabbitMQ是基于Eralng语言开发的。\n- 主机名不能是中文名称\n\n\n2、安装完成后进入RabbitMq安装目录下的\\sbin目录下，输入下面命令，启动图形化界面\n\n```\n# 开启图形化界面\nrabbitmq-plugins enable rabbitmq_management\n```\n\n本地浏览器输入 http://localhost:15672\n\n会打开图形化管理页面，账号和密码都是  guest\n\n![](Windows下RabbitMQ下载安装/2291368-20221126132613809-1055551774.png)\n\n登录成功后如图\n\n![](Windows下RabbitMQ下载安装/2291368-20221126132646873-1365415137.png)\n\n==后续补充项目中使用==\n","slug":"Windows下RabbitMQ下载安装","published":1,"updated":"2022-12-07T07:19:46.781Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftr001nsw6x8mmm88ge","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Rabbitmq是一个消息队列</p>\n<p>Erlang 可视化工具</p>\n<p>注意Rabbitmq和Erlang是有版本对应关系的</p>\n<p>查看地址：<a href=\"https://www.rabbitmq.com/which-erlang.html\">https://www.rabbitmq.com/which-erlang.html</a></p>\n<img src=\"/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221113170308568-904817832.png\" class=\"\">\n\n<p>下文安装使用24.2.2+v3.10</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先进入RabbitMQ官网，下载最新的RabbitMQ安装包  </p>\n<p>网址：<a href=\"http://www.rabbitmq.com/install-windows.html\">http://www.rabbitmq.com/install-windows.html</a></p>\n<p>RabbitMQ的github地址：<a href=\"https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10\">https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10</a></p>\n<p>Erlang的github地址：<a href=\"https://github.com/erlang/otp/releases/tag/OTP-24.2.2\">https://github.com/erlang/otp/releases/tag/OTP-24.2.2</a></p>\n<p>1、下载好后傻瓜式安装<br>需要注意两点：</p>\n<ul>\n<li>先安装Erlang后，才能够安装RabbitMQ，因为RabbitMQ是基于Eralng语言开发的。</li>\n<li>主机名不能是中文名称</li>\n</ul>\n<p>2、安装完成后进入RabbitMq安装目录下的\\sbin目录下，输入下面命令，启动图形化界面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 开启图形化界面</span><br><span class=\"line\">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>\n\n<p>本地浏览器输入 <a href=\"http://localhost:15672/\">http://localhost:15672</a></p>\n<p>会打开图形化管理页面，账号和密码都是  guest</p>\n<img src=\"/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221126132613809-1055551774.png\" class=\"\">\n\n<p>登录成功后如图</p>\n<img src=\"/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221126132646873-1365415137.png\" class=\"\">\n\n<p>==后续补充项目中使用==</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>Rabbitmq是一个消息队列</p>\n<p>Erlang 可视化工具</p>\n<p>注意Rabbitmq和Erlang是有版本对应关系的</p>\n<p>查看地址：<a href=\"https://www.rabbitmq.com/which-erlang.html\">https://www.rabbitmq.com/which-erlang.html</a></p>\n<img src=\"/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221113170308568-904817832.png\" class=\"\">\n\n<p>下文安装使用24.2.2+v3.10</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>首先进入RabbitMQ官网，下载最新的RabbitMQ安装包  </p>\n<p>网址：<a href=\"http://www.rabbitmq.com/install-windows.html\">http://www.rabbitmq.com/install-windows.html</a></p>\n<p>RabbitMQ的github地址：<a href=\"https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10\">https://github.com/rabbitmq/rabbitmq-server/releases/tag/v3.10.10</a></p>\n<p>Erlang的github地址：<a href=\"https://github.com/erlang/otp/releases/tag/OTP-24.2.2\">https://github.com/erlang/otp/releases/tag/OTP-24.2.2</a></p>\n<p>1、下载好后傻瓜式安装<br>需要注意两点：</p>\n<ul>\n<li>先安装Erlang后，才能够安装RabbitMQ，因为RabbitMQ是基于Eralng语言开发的。</li>\n<li>主机名不能是中文名称</li>\n</ul>\n<p>2、安装完成后进入RabbitMq安装目录下的\\sbin目录下，输入下面命令，启动图形化界面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># 开启图形化界面</span><br><span class=\"line\">rabbitmq-plugins enable rabbitmq_management</span><br></pre></td></tr></table></figure>\n\n<p>本地浏览器输入 <a href=\"http://localhost:15672/\">http://localhost:15672</a></p>\n<p>会打开图形化管理页面，账号和密码都是  guest</p>\n<img src=\"/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221126132613809-1055551774.png\" class=\"\">\n\n<p>登录成功后如图</p>\n<img src=\"/2022/11/26/Windows%E4%B8%8BRabbitMQ%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85/2291368-20221126132646873-1365415137.png\" class=\"\">\n\n<p>==后续补充项目中使用==</p>\n"},{"title":"Hello World","sticky":20,"_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\ntags: 'Hexo'\ncategories: '个人博客'\nsticky: 20\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2022-02-21T07:02:48.000Z","updated":"2022-12-08T10:31:49.347Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftr001qsw6xawrngamo","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Windows下mysql8.0解压版安装配置方法图文教程","copyright":true,"date":"2022-06-29T10:10:00.000Z","_content":"\n## mysql8.0.29winx64解压安装\n\n1. 下载安装包\n\n   下载链接：https://dev.mysql.com/downloads/mysql/\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624110939600-1386441975.png)\n\n   不登陆注册直接下载。\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111124820-511486595.png)\n\n   想下载往期版本可以选择指定版本瞎下载:https://downloads.mysql.com/archives/community/\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624131402573-1864608199.png)\n\n\n2. 下载后的压缩文件解压到指定目录（注意路径不要带空格或者汉字，否则容易报错）\n\n3. 配置环境变量\n\n   找到mysql下的bin目录如!\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111431587-147049396.png)\n\n   在我的电脑，右击属性找到高级系统设置==》系统变量的path中配置如下。\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111449065-658791468.png)\n\n\n4. Windows+R键盘进入命令行(注意最好是以管理员身份进入，不然下面可能报错)，并切换到bin目录下\n\n   ```\n   C:\\WINDOWS\\system32>d:\n   \n   D:\\>cd D:\\Environment\\mysql-8.0.29\\bin\n   ```\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111210435-1959209711.png)\n\n\n\n   >在MySQL解压路径下，新建my.ini 配置初始化参数：(查看网上好多教程有此步骤，但是个人选择忽略了此步骤，无伤大雅)\n\n\n    ```\n    [mysql]\n    \n    # 设置mysql客户端默认字符集\n    \n    default-character-set=utf8\n    \n    [mysqld]\n    \n    #设置3306端口\n    \n    port = 3306\n    \n    # 设置mysql的安装目录\n    \n    basedir=D:\\Java\\mysql-xxx\n    \n    # 设置mysql数据库的数据的存放目录\n    \n    datadir=D:\\Java\\mysql-xxx\\data\n    \n    # 允许最大连接数\n    \n    max_connections=200\n    \n    # 服务端使用的字符集默认为8比特编码的latin1字符集\n    \n    character-set-server=utf8\n    \n    # 创建新表时将使用的默认存储引擎\n    \n    default-storage-engine=INNODB\n    ```\n\n5. 命令行初始化，命令行下载\n\n   注意如果不是管理员身份进入命令行，install会报错 Service successfully installed.\n\n   ```\n   D:\\Environment\\mysql-8.0.29\\bin>mysqld --install\n   Service successfully installed.\n   ```\n  \n   命令行初始化\n\n   ```\n   D:\\Environment\\mysql-8.0.29\\bin>mysqld --initialize --console\n   ```\n   注意记住这个临时密码，后面会用到;\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111536255-363256586.png)\n\n    可能报错：`initialize specified but the data directory has files in it. Aborting`\n\n    原因：初始化时可能会初始化多次，或者原本拷贝的解压包data已经有数据。\n\n    暴力方案：将目录mysql/data目录下内容暴力删除后即可。\n\n\n\n\n6. 启动\n\n   `net start mysql`可能报错'net' 不是内部或外部命令，也不是可运行的程序 或批处理文件。\n\n   解决方案：\n\n   首先确认C:\\Windows\\System32这个目录下面是否存在net.exe文件，如果有，去配置环境变量，用户变量path中添加如下`%SystemRoot%\\system32`\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111609438-1454013709.png)\n\n6. 临时密码登录并修改密码\n\n   ```\n   D:\\Environment\\mysql-8.0.29\\bin>mysql -u root -p\n   Enter password: ************     #输入临时密码\n\n   mysql> alter user 'root'@'localhost' identified by '123456';\n   ```\n   补充查阅其他资料有的说，与5.X版本不同，8已经不支持PASSWORD()方法，若报错可采用如下，未报错直接忽略。\n\n   注意8.0建议使用下面修改方式，已验证，否则后面客户端DBeaver连接会报错 [Bug0045] `Public Key Retrieval is not allowed `\n\n   `ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';`\n\n7. 登录成功\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111630877-1836009720.png)\n\n\n8. 可视化工具连接\n\n   Navicat   DBeaver  SQLyong  后续讲解安装破解。\n   \n   \n","source":"_posts/Windows下mysql8.0解压版安装配置方法图文教程.md","raw":"---\ntitle: 'Windows下mysql8.0解压版安装配置方法图文教程'\ncopyright: true\ndate: '2022-06-29 18:10'\ntags: 'MySQL'\ncategories: '环境'\n---\n\n## mysql8.0.29winx64解压安装\n\n1. 下载安装包\n\n   下载链接：https://dev.mysql.com/downloads/mysql/\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624110939600-1386441975.png)\n\n   不登陆注册直接下载。\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111124820-511486595.png)\n\n   想下载往期版本可以选择指定版本瞎下载:https://downloads.mysql.com/archives/community/\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624131402573-1864608199.png)\n\n\n2. 下载后的压缩文件解压到指定目录（注意路径不要带空格或者汉字，否则容易报错）\n\n3. 配置环境变量\n\n   找到mysql下的bin目录如!\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111431587-147049396.png)\n\n   在我的电脑，右击属性找到高级系统设置==》系统变量的path中配置如下。\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111449065-658791468.png)\n\n\n4. Windows+R键盘进入命令行(注意最好是以管理员身份进入，不然下面可能报错)，并切换到bin目录下\n\n   ```\n   C:\\WINDOWS\\system32>d:\n   \n   D:\\>cd D:\\Environment\\mysql-8.0.29\\bin\n   ```\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111210435-1959209711.png)\n\n\n\n   >在MySQL解压路径下，新建my.ini 配置初始化参数：(查看网上好多教程有此步骤，但是个人选择忽略了此步骤，无伤大雅)\n\n\n    ```\n    [mysql]\n    \n    # 设置mysql客户端默认字符集\n    \n    default-character-set=utf8\n    \n    [mysqld]\n    \n    #设置3306端口\n    \n    port = 3306\n    \n    # 设置mysql的安装目录\n    \n    basedir=D:\\Java\\mysql-xxx\n    \n    # 设置mysql数据库的数据的存放目录\n    \n    datadir=D:\\Java\\mysql-xxx\\data\n    \n    # 允许最大连接数\n    \n    max_connections=200\n    \n    # 服务端使用的字符集默认为8比特编码的latin1字符集\n    \n    character-set-server=utf8\n    \n    # 创建新表时将使用的默认存储引擎\n    \n    default-storage-engine=INNODB\n    ```\n\n5. 命令行初始化，命令行下载\n\n   注意如果不是管理员身份进入命令行，install会报错 Service successfully installed.\n\n   ```\n   D:\\Environment\\mysql-8.0.29\\bin>mysqld --install\n   Service successfully installed.\n   ```\n  \n   命令行初始化\n\n   ```\n   D:\\Environment\\mysql-8.0.29\\bin>mysqld --initialize --console\n   ```\n   注意记住这个临时密码，后面会用到;\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111536255-363256586.png)\n\n    可能报错：`initialize specified but the data directory has files in it. Aborting`\n\n    原因：初始化时可能会初始化多次，或者原本拷贝的解压包data已经有数据。\n\n    暴力方案：将目录mysql/data目录下内容暴力删除后即可。\n\n\n\n\n6. 启动\n\n   `net start mysql`可能报错'net' 不是内部或外部命令，也不是可运行的程序 或批处理文件。\n\n   解决方案：\n\n   首先确认C:\\Windows\\System32这个目录下面是否存在net.exe文件，如果有，去配置环境变量，用户变量path中添加如下`%SystemRoot%\\system32`\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111609438-1454013709.png)\n\n6. 临时密码登录并修改密码\n\n   ```\n   D:\\Environment\\mysql-8.0.29\\bin>mysql -u root -p\n   Enter password: ************     #输入临时密码\n\n   mysql> alter user 'root'@'localhost' identified by '123456';\n   ```\n   补充查阅其他资料有的说，与5.X版本不同，8已经不支持PASSWORD()方法，若报错可采用如下，未报错直接忽略。\n\n   注意8.0建议使用下面修改方式，已验证，否则后面客户端DBeaver连接会报错 [Bug0045] `Public Key Retrieval is not allowed `\n\n   `ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'password';`\n\n7. 登录成功\n\n   ![](Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111630877-1836009720.png)\n\n\n8. 可视化工具连接\n\n   Navicat   DBeaver  SQLyong  后续讲解安装破解。\n   \n   \n","slug":"Windows下mysql8.0解压版安装配置方法图文教程","published":1,"updated":"2022-12-07T06:23:02.774Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyftz0032sw6xfwdo6hxk","content":"<h2 id=\"mysql8-0-29winx64解压安装\"><a href=\"#mysql8-0-29winx64解压安装\" class=\"headerlink\" title=\"mysql8.0.29winx64解压安装\"></a>mysql8.0.29winx64解压安装</h2><ol>\n<li><p>下载安装包</p>\n<p>下载链接：<a href=\"https://dev.mysql.com/downloads/mysql/\">https://dev.mysql.com/downloads/mysql/</a></p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624110939600-1386441975.png\" class=\"\">\n\n<p>不登陆注册直接下载。</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111124820-511486595.png\" class=\"\">\n\n<p>想下载往期版本可以选择指定版本瞎下载:<a href=\"https://downloads.mysql.com/archives/community/\">https://downloads.mysql.com/archives/community/</a></p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624131402573-1864608199.png\" class=\"\"></li>\n</ol>\n<ol start=\"2\">\n<li><p>下载后的压缩文件解压到指定目录（注意路径不要带空格或者汉字，否则容易报错）</p>\n</li>\n<li><p>配置环境变量</p>\n<p>找到mysql下的bin目录如!</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111431587-147049396.png\" class=\"\">\n\n<p>在我的电脑，右击属性找到高级系统设置==》系统变量的path中配置如下。</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111449065-658791468.png\" class=\"\"></li>\n</ol>\n<ol start=\"4\">\n<li><p>Windows+R键盘进入命令行(注意最好是以管理员身份进入，不然下面可能报错)，并切换到bin目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\WINDOWS\\system32&gt;d:</span><br><span class=\"line\"></span><br><span class=\"line\">D:\\&gt;cd D:\\Environment\\mysql-8.0.29\\bin</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111210435-1959209711.png\" class=\"\"></li>\n</ol>\n<blockquote>\n<p>在MySQL解压路径下，新建my.ini 配置初始化参数：(查看网上好多教程有此步骤，但是个人选择忽略了此步骤，无伤大雅)</p>\n</blockquote>\n<pre><code><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysql]</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置mysql客户端默认字符集</span><br><span class=\"line\"></span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\"></span><br><span class=\"line\">#设置3306端口</span><br><span class=\"line\"></span><br><span class=\"line\">port = 3306</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置mysql的安装目录</span><br><span class=\"line\"></span><br><span class=\"line\">basedir=D:\\Java\\mysql-xxx</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置mysql数据库的数据的存放目录</span><br><span class=\"line\"></span><br><span class=\"line\">datadir=D:\\Java\\mysql-xxx\\data</span><br><span class=\"line\"></span><br><span class=\"line\"># 允许最大连接数</span><br><span class=\"line\"></span><br><span class=\"line\">max_connections=200</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class=\"line\"></span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建新表时将使用的默认存储引擎</span><br><span class=\"line\"></span><br><span class=\"line\">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"5\">\n<li><p>命令行初始化，命令行下载</p>\n<p>注意如果不是管理员身份进入命令行，install会报错 Service successfully installed.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\mysql-8.0.29\\bin&gt;mysqld --install</span><br><span class=\"line\">Service successfully installed.</span><br></pre></td></tr></table></figure>\n\n<p>命令行初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\mysql-8.0.29\\bin&gt;mysqld --initialize --console</span><br></pre></td></tr></table></figure>\n<p>注意记住这个临时密码，后面会用到;</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111536255-363256586.png\" class=\"\">\n\n<p> 可能报错：<code>initialize specified but the data directory has files in it. Aborting</code></p>\n<p> 原因：初始化时可能会初始化多次，或者原本拷贝的解压包data已经有数据。</p>\n<p> 暴力方案：将目录mysql/data目录下内容暴力删除后即可。</p>\n</li>\n</ol>\n<ol start=\"6\">\n<li><p>启动</p>\n<p><code>net start mysql</code>可能报错’net’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。</p>\n<p>解决方案：</p>\n<p>首先确认C:\\Windows\\System32这个目录下面是否存在net.exe文件，如果有，去配置环境变量，用户变量path中添加如下<code>%SystemRoot%\\system32</code></p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111609438-1454013709.png\" class=\"\"></li>\n<li><p>临时密码登录并修改密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\mysql-8.0.29\\bin&gt;mysql -u root -p</span><br><span class=\"line\">Enter password: ************     #输入临时密码</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>\n<p>补充查阅其他资料有的说，与5.X版本不同，8已经不支持PASSWORD()方法，若报错可采用如下，未报错直接忽略。</p>\n<p>注意8.0建议使用下面修改方式，已验证，否则后面客户端DBeaver连接会报错 [Bug0045] <code>Public Key Retrieval is not allowed </code></p>\n<p><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;</code></p>\n</li>\n<li><p>登录成功</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111630877-1836009720.png\" class=\"\"></li>\n</ol>\n<ol start=\"8\">\n<li><p>可视化工具连接</p>\n<p>Navicat   DBeaver  SQLyong  后续讲解安装破解。</p>\n</li>\n</ol>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"<h2 id=\"mysql8-0-29winx64解压安装\"><a href=\"#mysql8-0-29winx64解压安装\" class=\"headerlink\" title=\"mysql8.0.29winx64解压安装\"></a>mysql8.0.29winx64解压安装</h2><ol>\n<li><p>下载安装包</p>\n<p>下载链接：<a href=\"https://dev.mysql.com/downloads/mysql/\">https://dev.mysql.com/downloads/mysql/</a></p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624110939600-1386441975.png\" class=\"\">\n\n<p>不登陆注册直接下载。</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111124820-511486595.png\" class=\"\">\n\n<p>想下载往期版本可以选择指定版本瞎下载:<a href=\"https://downloads.mysql.com/archives/community/\">https://downloads.mysql.com/archives/community/</a></p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624131402573-1864608199.png\" class=\"\"></li>\n</ol>\n<ol start=\"2\">\n<li><p>下载后的压缩文件解压到指定目录（注意路径不要带空格或者汉字，否则容易报错）</p>\n</li>\n<li><p>配置环境变量</p>\n<p>找到mysql下的bin目录如!</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111431587-147049396.png\" class=\"\">\n\n<p>在我的电脑，右击属性找到高级系统设置==》系统变量的path中配置如下。</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111449065-658791468.png\" class=\"\"></li>\n</ol>\n<ol start=\"4\">\n<li><p>Windows+R键盘进入命令行(注意最好是以管理员身份进入，不然下面可能报错)，并切换到bin目录下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">C:\\WINDOWS\\system32&gt;d:</span><br><span class=\"line\"></span><br><span class=\"line\">D:\\&gt;cd D:\\Environment\\mysql-8.0.29\\bin</span><br></pre></td></tr></table></figure>\n\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111210435-1959209711.png\" class=\"\"></li>\n</ol>\n<blockquote>\n<p>在MySQL解压路径下，新建my.ini 配置初始化参数：(查看网上好多教程有此步骤，但是个人选择忽略了此步骤，无伤大雅)</p>\n</blockquote>\n<pre><code><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[mysql]</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置mysql客户端默认字符集</span><br><span class=\"line\"></span><br><span class=\"line\">default-character-set=utf8</span><br><span class=\"line\"></span><br><span class=\"line\">[mysqld]</span><br><span class=\"line\"></span><br><span class=\"line\">#设置3306端口</span><br><span class=\"line\"></span><br><span class=\"line\">port = 3306</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置mysql的安装目录</span><br><span class=\"line\"></span><br><span class=\"line\">basedir=D:\\Java\\mysql-xxx</span><br><span class=\"line\"></span><br><span class=\"line\"># 设置mysql数据库的数据的存放目录</span><br><span class=\"line\"></span><br><span class=\"line\">datadir=D:\\Java\\mysql-xxx\\data</span><br><span class=\"line\"></span><br><span class=\"line\"># 允许最大连接数</span><br><span class=\"line\"></span><br><span class=\"line\">max_connections=200</span><br><span class=\"line\"></span><br><span class=\"line\"># 服务端使用的字符集默认为8比特编码的latin1字符集</span><br><span class=\"line\"></span><br><span class=\"line\">character-set-server=utf8</span><br><span class=\"line\"></span><br><span class=\"line\"># 创建新表时将使用的默认存储引擎</span><br><span class=\"line\"></span><br><span class=\"line\">default-storage-engine=INNODB</span><br></pre></td></tr></table></figure>\n</code></pre>\n<ol start=\"5\">\n<li><p>命令行初始化，命令行下载</p>\n<p>注意如果不是管理员身份进入命令行，install会报错 Service successfully installed.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\mysql-8.0.29\\bin&gt;mysqld --install</span><br><span class=\"line\">Service successfully installed.</span><br></pre></td></tr></table></figure>\n\n<p>命令行初始化</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\mysql-8.0.29\\bin&gt;mysqld --initialize --console</span><br></pre></td></tr></table></figure>\n<p>注意记住这个临时密码，后面会用到;</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111536255-363256586.png\" class=\"\">\n\n<p> 可能报错：<code>initialize specified but the data directory has files in it. Aborting</code></p>\n<p> 原因：初始化时可能会初始化多次，或者原本拷贝的解压包data已经有数据。</p>\n<p> 暴力方案：将目录mysql/data目录下内容暴力删除后即可。</p>\n</li>\n</ol>\n<ol start=\"6\">\n<li><p>启动</p>\n<p><code>net start mysql</code>可能报错’net’ 不是内部或外部命令，也不是可运行的程序 或批处理文件。</p>\n<p>解决方案：</p>\n<p>首先确认C:\\Windows\\System32这个目录下面是否存在net.exe文件，如果有，去配置环境变量，用户变量path中添加如下<code>%SystemRoot%\\system32</code></p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111609438-1454013709.png\" class=\"\"></li>\n<li><p>临时密码登录并修改密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\mysql-8.0.29\\bin&gt;mysql -u root -p</span><br><span class=\"line\">Enter password: ************     #输入临时密码</span><br><span class=\"line\"></span><br><span class=\"line\">mysql&gt; alter user &#x27;root&#x27;@&#x27;localhost&#x27; identified by &#x27;123456&#x27;;</span><br></pre></td></tr></table></figure>\n<p>补充查阅其他资料有的说，与5.X版本不同，8已经不支持PASSWORD()方法，若报错可采用如下，未报错直接忽略。</p>\n<p>注意8.0建议使用下面修改方式，已验证，否则后面客户端DBeaver连接会报错 [Bug0045] <code>Public Key Retrieval is not allowed </code></p>\n<p><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED WITH mysql_native_password BY &#39;password&#39;;</code></p>\n</li>\n<li><p>登录成功</p>\n<img src=\"/2022/06/29/Windows%E4%B8%8Bmysql8.0%E8%A7%A3%E5%8E%8B%E7%89%88%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95%E5%9B%BE%E6%96%87%E6%95%99%E7%A8%8B/2291368-20220624111630877-1836009720.png\" class=\"\"></li>\n</ol>\n<ol start=\"8\">\n<li><p>可视化工具连接</p>\n<p>Navicat   DBeaver  SQLyong  后续讲解安装破解。</p>\n</li>\n</ol>\n"},{"title":"Windows若依框架前后端项目分离部署（jar包+Nginx部署）","copyright":true,"date":"2022-06-30T14:06:00.000Z","_content":"\n## 需求描述\n\n使用若依的前后端分离框架做的一个项目，想要部署到另外一台windows电脑（服务器）上，作为小白写一篇文档总结记录一下。\n\n## 电脑环境准备\n\n- JDK1.8 \n- Nginx（注意配置，不要直接点击exe启动）\n- Redis服务（直接下载运行不设置服务也可以）\n- Mysql （或者直接打 jar 包时使用远程 sql 服务器地址）\n\n## 打包\n\n- 后端打 jar 包（由于已经配置好目录位置，========待补充如何配置=============）\n  \n  cleany -> package 然后到指定目录扎到 jar 包即可。\n\n  ![](Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630212505473-523791158.png)\n\n- 前端打包\n\n  在package.json中配置，也可以使用编辑器如 Hbuilder -> 运行 -> 运行到终端 -> npm run build \n\n  ![](Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630213440738-1103491974.png)\n\n  然后去目录下查看dist文件夹，这个文件夹得内容即是打包好的前端内容。\n\n  ![](Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630214014835-585689483.png)\n\n## 部署\n\n将jar包和dist文件拷贝到部署电脑上\n\n- 启动数据库（如果使用本地数据库）\n\n- 启动Redis服务\n\n- 运行后台的jar包（`java -jar 后端jar包目录`）。\n\n- 配置Nginx，启动Nginx。\n\n  将刚刚打好的前端包（dist文件夹）放在指定目录下，然后根据目录在Nginx中的配置文件进行配置。\n\n\n  [IDEA打包jar包详尽流程](https://blog.csdn.net/wwzmvp/article/details/121193609?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-121193609-blog-124827963.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-121193609-blog-124827963.pc_relevant_default&utm_relevant_index=6)\n\n  [若依框架前后端项目分离部署（jar包+Nginx部署）](https://blog.csdn.net/HJS1453100406/article/details/117469217)\n\n  [云服务器部署前后端分离项目（若依）详细教程](https://blog.csdn.net/m0_60028455/article/details/124706441?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124706441-blog-117728822.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=2)\n","source":"_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）.md","raw":"---\ntitle: 'Windows若依框架前后端项目分离部署（jar包+Nginx部署）'\ncopyright: true\ndate: '2022-06-30 22:06'\ntags: '运维'\ncategories: 'categories'\n---\n\n## 需求描述\n\n使用若依的前后端分离框架做的一个项目，想要部署到另外一台windows电脑（服务器）上，作为小白写一篇文档总结记录一下。\n\n## 电脑环境准备\n\n- JDK1.8 \n- Nginx（注意配置，不要直接点击exe启动）\n- Redis服务（直接下载运行不设置服务也可以）\n- Mysql （或者直接打 jar 包时使用远程 sql 服务器地址）\n\n## 打包\n\n- 后端打 jar 包（由于已经配置好目录位置，========待补充如何配置=============）\n  \n  cleany -> package 然后到指定目录扎到 jar 包即可。\n\n  ![](Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630212505473-523791158.png)\n\n- 前端打包\n\n  在package.json中配置，也可以使用编辑器如 Hbuilder -> 运行 -> 运行到终端 -> npm run build \n\n  ![](Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630213440738-1103491974.png)\n\n  然后去目录下查看dist文件夹，这个文件夹得内容即是打包好的前端内容。\n\n  ![](Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630214014835-585689483.png)\n\n## 部署\n\n将jar包和dist文件拷贝到部署电脑上\n\n- 启动数据库（如果使用本地数据库）\n\n- 启动Redis服务\n\n- 运行后台的jar包（`java -jar 后端jar包目录`）。\n\n- 配置Nginx，启动Nginx。\n\n  将刚刚打好的前端包（dist文件夹）放在指定目录下，然后根据目录在Nginx中的配置文件进行配置。\n\n\n  [IDEA打包jar包详尽流程](https://blog.csdn.net/wwzmvp/article/details/121193609?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-121193609-blog-124827963.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7ECTRLIST%7Edefault-3-121193609-blog-124827963.pc_relevant_default&utm_relevant_index=6)\n\n  [若依框架前后端项目分离部署（jar包+Nginx部署）](https://blog.csdn.net/HJS1453100406/article/details/117469217)\n\n  [云服务器部署前后端分离项目（若依）详细教程](https://blog.csdn.net/m0_60028455/article/details/124706441?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124706441-blog-117728822.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=2)\n","slug":"Windows若依框架前后端项目分离部署（jar包+Nginx部署）","published":1,"updated":"2022-12-08T05:32:30.536Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu00033sw6x50cle47r","content":"<h2 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h2><p>使用若依的前后端分离框架做的一个项目，想要部署到另外一台windows电脑（服务器）上，作为小白写一篇文档总结记录一下。</p>\n<h2 id=\"电脑环境准备\"><a href=\"#电脑环境准备\" class=\"headerlink\" title=\"电脑环境准备\"></a>电脑环境准备</h2><ul>\n<li>JDK1.8 </li>\n<li>Nginx（注意配置，不要直接点击exe启动）</li>\n<li>Redis服务（直接下载运行不设置服务也可以）</li>\n<li>Mysql （或者直接打 jar 包时使用远程 sql 服务器地址）</li>\n</ul>\n<h2 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h2><ul>\n<li><p>后端打 jar 包（由于已经配置好目录位置，========待补充如何配置=============）</p>\n<p>cleany -&gt; package 然后到指定目录扎到 jar 包即可。</p>\n<p><img src=\"Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630212505473-523791158.png\"></p>\n</li>\n<li><p>前端打包</p>\n<p>在package.json中配置，也可以使用编辑器如 Hbuilder -&gt; 运行 -&gt; 运行到终端 -&gt; npm run build </p>\n<p><img src=\"Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630213440738-1103491974.png\"></p>\n<p>然后去目录下查看dist文件夹，这个文件夹得内容即是打包好的前端内容。</p>\n<p><img src=\"Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630214014835-585689483.png\"></p>\n</li>\n</ul>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>将jar包和dist文件拷贝到部署电脑上</p>\n<ul>\n<li><p>启动数据库（如果使用本地数据库）</p>\n</li>\n<li><p>启动Redis服务</p>\n</li>\n<li><p>运行后台的jar包（<code>java -jar 后端jar包目录</code>）。</p>\n</li>\n<li><p>配置Nginx，启动Nginx。</p>\n<p>将刚刚打好的前端包（dist文件夹）放在指定目录下，然后根据目录在Nginx中的配置文件进行配置。</p>\n</li>\n</ul>\n<p>  <a href=\"https://blog.csdn.net/wwzmvp/article/details/121193609?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-121193609-blog-124827963.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-121193609-blog-124827963.pc_relevant_default&utm_relevant_index=6\">IDEA打包jar包详尽流程</a></p>\n<p>  <a href=\"https://blog.csdn.net/HJS1453100406/article/details/117469217\">若依框架前后端项目分离部署（jar包+Nginx部署）</a></p>\n<p>  <a href=\"https://blog.csdn.net/m0_60028455/article/details/124706441?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124706441-blog-117728822.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=2\">云服务器部署前后端分离项目（若依）详细教程</a></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<h2 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h2><p>使用若依的前后端分离框架做的一个项目，想要部署到另外一台windows电脑（服务器）上，作为小白写一篇文档总结记录一下。</p>\n<h2 id=\"电脑环境准备\"><a href=\"#电脑环境准备\" class=\"headerlink\" title=\"电脑环境准备\"></a>电脑环境准备</h2><ul>\n<li>JDK1.8 </li>\n<li>Nginx（注意配置，不要直接点击exe启动）</li>\n<li>Redis服务（直接下载运行不设置服务也可以）</li>\n<li>Mysql （或者直接打 jar 包时使用远程 sql 服务器地址）</li>\n</ul>\n<h2 id=\"打包\"><a href=\"#打包\" class=\"headerlink\" title=\"打包\"></a>打包</h2><ul>\n<li><p>后端打 jar 包（由于已经配置好目录位置，========待补充如何配置=============）</p>\n<p>cleany -&gt; package 然后到指定目录扎到 jar 包即可。</p>\n<p><img src=\"Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630212505473-523791158.png\"></p>\n</li>\n<li><p>前端打包</p>\n<p>在package.json中配置，也可以使用编辑器如 Hbuilder -&gt; 运行 -&gt; 运行到终端 -&gt; npm run build </p>\n<p><img src=\"Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630213440738-1103491974.png\"></p>\n<p>然后去目录下查看dist文件夹，这个文件夹得内容即是打包好的前端内容。</p>\n<p><img src=\"Windows%E8%8B%A5%E4%BE%9D%E6%A1%86%E6%9E%B6%E5%89%8D%E5%90%8E%E7%AB%AF%E9%A1%B9%E7%9B%AE%E5%88%86%E7%A6%BB%E9%83%A8%E7%BD%B2%EF%BC%88jar%E5%8C%85+Nginx%E9%83%A8%E7%BD%B2%EF%BC%89/2291368-20220630214014835-585689483.png\"></p>\n</li>\n</ul>\n<h2 id=\"部署\"><a href=\"#部署\" class=\"headerlink\" title=\"部署\"></a>部署</h2><p>将jar包和dist文件拷贝到部署电脑上</p>\n<ul>\n<li><p>启动数据库（如果使用本地数据库）</p>\n</li>\n<li><p>启动Redis服务</p>\n</li>\n<li><p>运行后台的jar包（<code>java -jar 后端jar包目录</code>）。</p>\n</li>\n<li><p>配置Nginx，启动Nginx。</p>\n<p>将刚刚打好的前端包（dist文件夹）放在指定目录下，然后根据目录在Nginx中的配置文件进行配置。</p>\n</li>\n</ul>\n<p>  <a href=\"https://blog.csdn.net/wwzmvp/article/details/121193609?spm=1001.2101.3001.6650.3&utm_medium=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-121193609-blog-124827963.pc_relevant_default&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2~default~CTRLIST~default-3-121193609-blog-124827963.pc_relevant_default&utm_relevant_index=6\">IDEA打包jar包详尽流程</a></p>\n<p>  <a href=\"https://blog.csdn.net/HJS1453100406/article/details/117469217\">若依框架前后端项目分离部署（jar包+Nginx部署）</a></p>\n<p>  <a href=\"https://blog.csdn.net/m0_60028455/article/details/124706441?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124706441-blog-117728822.pc_relevant_aa&spm=1001.2101.3001.4242.1&utm_relevant_index=2\">云服务器部署前后端分离项目（若依）详细教程</a></p>\n"},{"title":"Windows下Redis解压包安装及配置教程","copyright":true,"date":"2022-06-30T12:53:00.000Z","_content":"\n# Windows下Redis解压包安装及配置教程\n\n## Redis下载及配置\n\n### 下载redis \n\nGithub下载地址：https://github.com/MicrosoftArchive/redis/releases\n\n官网下载地址：https://redis.io/download/\n\n### 解压压缩包\n\n解压到自己的指定目录即可\n\n### 修改设置密码\n\n到配置文件中设置，就是 redis 安装路径下/redis.windows-service.conf 这个文件，注意不是另外一个易混淆文件redis.windows.conf。\n\n![2291368-20220629182352439-1266648941](Windows下Redis解压包安装及配置教程/2291368-20220629182352439-1266648941.png)\n\n配置文件中如下图位置添加\n`requirepass 你想设置的密码`\n\n![2291368-20220629183153636-1436499922](Windows下Redis解压包安装及配置教程/2291368-20220629183153636-1436499922.png)\n\n\n\n### 启动Redis服务端\n\n先临时直接双击`redis-server.exe`运行服务即可，当然此方案不好，会有问题，后续解决。\n\n### 连接Redis服务端\n\n双击`redis-cli.exe`进入界面，若配置文件配置了密码，输入密码连接，如果原本配置文件不配置密码的话输入`ping`命令收到`pong`表示连接成功了。\n\n## 将Redis设置成服务并开机自启\n\n### 需求背景\n\n每次启动 redis 都要去到 Redis 安装目录下寻找 redis-server.exe 文件点击，很是麻烦。\n\n另外启动后只要一关闭cmd窗口，redis服务就关闭了。也是一大头疼问题。\n\n于是思考到可不可以跟其它服务一样能够开机自启？显然是可以的。\n\n把 redis 设置为一个 windows 服务便可以解决此问题。\n\n### Redis 设置为服务\n\n进入redis文件夹，输入`redis-server.exe --service-install redis.windows.conf --loglevel verbose` 出现如下情况即将 Redis 设置为服务。\n\n其中参数 --loglevel verbose表示记录日志等级\n\n```\nD:\\Environment\\Redis-x64-5.0.14.1>redis-server.exe --service-install redis.windows.conf --loglevel verbose\n[6924] 30 Jun 11:01:39.652 # Granting read/write access to 'NT AUTHORITY\\NetworkService' on: \"D:\\Environment\\Redis-x64-5.0.14.1\" \"D:\\Environment\\Redis-x64-5.0.14.1\\\"\n[6924] 30 Jun 11:01:39.654 # Redis successfully installed as a service.\n```\n\n### 查看并设置 Redis 的服务\n\n鼠标右键「任务栏」–> 点击「任务管理器」–> 选择「服务」选项 –> 点击下方「打开服务」按钮，打开服务窗口之后就可以找到 Redis 的服务\n\n![](Windows下Redis解压包安装及配置教程/2291368-20220630111206363-1150534863.png)\n\n如果不想设置为自启动，如下将启动方式改为手动启动即可。\n\n![](Windows下Redis解压包安装及配置教程/2291368-20220630111940288-138478437.png)\n\n### 开启与关闭 Redis 服务\n\n在重启电脑之后，就可以直接在命令行操作 Redis 服务了\n\n基本命令：\n\n```\n#开启服务 \nredis-server --service-start\n\n#关闭服务 \nredis-server --service-stop\n\n#卸载服务 \nredis-server --service-uninstall\n\n#服务重命名 \nredis-server --service-name server-name\n```\n**4、扩展**\n\n- 其他操作系统 Redis 启动设置\n\n   参考文章：[centos7 源码安装redis设置开机自启](https://blog.csdn.net/FZlion/article/details/109535797?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7EPaid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7EPaid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&utm_relevant_index=2)\n\n- Redis主从服务安装（待扩展）  \n\n  主从服务可以实现负载均衡，其实就是把上面Redis安装文件包，拷贝到相应目录，修改主、从服务器配置文件中IP、Port，同时从服务器要指定主服务器 的IP、Port，按照Redis自定义服务安装中命令进行服务安装、服务启动、服务关闭、服务卸载即可使用。\n\n## 可视化工具RedisDesktopManager\n\n### 下载安装包\n\n官网下载：https://redisdesktop.com/download\n\ngithub地址：https://github.com/uglide/RedisDesktopManager/releases\n\n不过由于目前收费，需要可以去找一下网盘安装包\n\n### 安装 \n\n点击下载的 exe 文件，傻瓜式安装，下一步即可。\n\n### 创建连接\n\n在创建连接前注意检查一下自己的 Redis 是否开启。开启后如下图可视化连接即可。\n\n![](Windows下Redis解压包安装及配置教程/2291368-20220630140021409-1360003831.png)\n\n### 其他可视化工具\n\n[Redis可视化工具](https://www.jianshu.com/p/721c3762a777)","source":"_posts/Windows下Redis解压包安装及配置教程.md","raw":"---\ntitle: 'Windows下Redis解压包安装及配置教程'\ncopyright: true\ndate: '2022-06-30 20:53'\ntags: 'Redis'\ncategories: '中间件'\n---\n\n# Windows下Redis解压包安装及配置教程\n\n## Redis下载及配置\n\n### 下载redis \n\nGithub下载地址：https://github.com/MicrosoftArchive/redis/releases\n\n官网下载地址：https://redis.io/download/\n\n### 解压压缩包\n\n解压到自己的指定目录即可\n\n### 修改设置密码\n\n到配置文件中设置，就是 redis 安装路径下/redis.windows-service.conf 这个文件，注意不是另外一个易混淆文件redis.windows.conf。\n\n![2291368-20220629182352439-1266648941](Windows下Redis解压包安装及配置教程/2291368-20220629182352439-1266648941.png)\n\n配置文件中如下图位置添加\n`requirepass 你想设置的密码`\n\n![2291368-20220629183153636-1436499922](Windows下Redis解压包安装及配置教程/2291368-20220629183153636-1436499922.png)\n\n\n\n### 启动Redis服务端\n\n先临时直接双击`redis-server.exe`运行服务即可，当然此方案不好，会有问题，后续解决。\n\n### 连接Redis服务端\n\n双击`redis-cli.exe`进入界面，若配置文件配置了密码，输入密码连接，如果原本配置文件不配置密码的话输入`ping`命令收到`pong`表示连接成功了。\n\n## 将Redis设置成服务并开机自启\n\n### 需求背景\n\n每次启动 redis 都要去到 Redis 安装目录下寻找 redis-server.exe 文件点击，很是麻烦。\n\n另外启动后只要一关闭cmd窗口，redis服务就关闭了。也是一大头疼问题。\n\n于是思考到可不可以跟其它服务一样能够开机自启？显然是可以的。\n\n把 redis 设置为一个 windows 服务便可以解决此问题。\n\n### Redis 设置为服务\n\n进入redis文件夹，输入`redis-server.exe --service-install redis.windows.conf --loglevel verbose` 出现如下情况即将 Redis 设置为服务。\n\n其中参数 --loglevel verbose表示记录日志等级\n\n```\nD:\\Environment\\Redis-x64-5.0.14.1>redis-server.exe --service-install redis.windows.conf --loglevel verbose\n[6924] 30 Jun 11:01:39.652 # Granting read/write access to 'NT AUTHORITY\\NetworkService' on: \"D:\\Environment\\Redis-x64-5.0.14.1\" \"D:\\Environment\\Redis-x64-5.0.14.1\\\"\n[6924] 30 Jun 11:01:39.654 # Redis successfully installed as a service.\n```\n\n### 查看并设置 Redis 的服务\n\n鼠标右键「任务栏」–> 点击「任务管理器」–> 选择「服务」选项 –> 点击下方「打开服务」按钮，打开服务窗口之后就可以找到 Redis 的服务\n\n![](Windows下Redis解压包安装及配置教程/2291368-20220630111206363-1150534863.png)\n\n如果不想设置为自启动，如下将启动方式改为手动启动即可。\n\n![](Windows下Redis解压包安装及配置教程/2291368-20220630111940288-138478437.png)\n\n### 开启与关闭 Redis 服务\n\n在重启电脑之后，就可以直接在命令行操作 Redis 服务了\n\n基本命令：\n\n```\n#开启服务 \nredis-server --service-start\n\n#关闭服务 \nredis-server --service-stop\n\n#卸载服务 \nredis-server --service-uninstall\n\n#服务重命名 \nredis-server --service-name server-name\n```\n**4、扩展**\n\n- 其他操作系统 Redis 启动设置\n\n   参考文章：[centos7 源码安装redis设置开机自启](https://blog.csdn.net/FZlion/article/details/109535797?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7EPaid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.pc_relevant.none-task-download-2%7Edefault%7ECTRLIST%7EPaid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&utm_relevant_index=2)\n\n- Redis主从服务安装（待扩展）  \n\n  主从服务可以实现负载均衡，其实就是把上面Redis安装文件包，拷贝到相应目录，修改主、从服务器配置文件中IP、Port，同时从服务器要指定主服务器 的IP、Port，按照Redis自定义服务安装中命令进行服务安装、服务启动、服务关闭、服务卸载即可使用。\n\n## 可视化工具RedisDesktopManager\n\n### 下载安装包\n\n官网下载：https://redisdesktop.com/download\n\ngithub地址：https://github.com/uglide/RedisDesktopManager/releases\n\n不过由于目前收费，需要可以去找一下网盘安装包\n\n### 安装 \n\n点击下载的 exe 文件，傻瓜式安装，下一步即可。\n\n### 创建连接\n\n在创建连接前注意检查一下自己的 Redis 是否开启。开启后如下图可视化连接即可。\n\n![](Windows下Redis解压包安装及配置教程/2291368-20220630140021409-1360003831.png)\n\n### 其他可视化工具\n\n[Redis可视化工具](https://www.jianshu.com/p/721c3762a777)","slug":"Windows下Redis解压包安装及配置教程","published":1,"updated":"2022-12-08T09:43:12.757Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu00035sw6x8bfc9wqx","content":"<h1 id=\"Windows下Redis解压包安装及配置教程\"><a href=\"#Windows下Redis解压包安装及配置教程\" class=\"headerlink\" title=\"Windows下Redis解压包安装及配置教程\"></a>Windows下Redis解压包安装及配置教程</h1><h2 id=\"Redis下载及配置\"><a href=\"#Redis下载及配置\" class=\"headerlink\" title=\"Redis下载及配置\"></a>Redis下载及配置</h2><h3 id=\"下载redis\"><a href=\"#下载redis\" class=\"headerlink\" title=\"下载redis\"></a>下载redis</h3><p>Github下载地址：<a href=\"https://github.com/MicrosoftArchive/redis/releases\">https://github.com/MicrosoftArchive/redis/releases</a></p>\n<p>官网下载地址：<a href=\"https://redis.io/download/\">https://redis.io/download/</a></p>\n<h3 id=\"解压压缩包\"><a href=\"#解压压缩包\" class=\"headerlink\" title=\"解压压缩包\"></a>解压压缩包</h3><p>解压到自己的指定目录即可</p>\n<h3 id=\"修改设置密码\"><a href=\"#修改设置密码\" class=\"headerlink\" title=\"修改设置密码\"></a>修改设置密码</h3><p>到配置文件中设置，就是 redis 安装路径下/redis.windows-service.conf 这个文件，注意不是另外一个易混淆文件redis.windows.conf。</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629182352439-1266648941.png\" class=\"\" title=\"2291368-20220629182352439-1266648941\">\n\n<p>配置文件中如下图位置添加<br><code>requirepass 你想设置的密码</code></p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629183153636-1436499922.png\" class=\"\" title=\"2291368-20220629183153636-1436499922\">\n\n\n\n<h3 id=\"启动Redis服务端\"><a href=\"#启动Redis服务端\" class=\"headerlink\" title=\"启动Redis服务端\"></a>启动Redis服务端</h3><p>先临时直接双击<code>redis-server.exe</code>运行服务即可，当然此方案不好，会有问题，后续解决。</p>\n<h3 id=\"连接Redis服务端\"><a href=\"#连接Redis服务端\" class=\"headerlink\" title=\"连接Redis服务端\"></a>连接Redis服务端</h3><p>双击<code>redis-cli.exe</code>进入界面，若配置文件配置了密码，输入密码连接，如果原本配置文件不配置密码的话输入<code>ping</code>命令收到<code>pong</code>表示连接成功了。</p>\n<h2 id=\"将Redis设置成服务并开机自启\"><a href=\"#将Redis设置成服务并开机自启\" class=\"headerlink\" title=\"将Redis设置成服务并开机自启\"></a>将Redis设置成服务并开机自启</h2><h3 id=\"需求背景\"><a href=\"#需求背景\" class=\"headerlink\" title=\"需求背景\"></a>需求背景</h3><p>每次启动 redis 都要去到 Redis 安装目录下寻找 redis-server.exe 文件点击，很是麻烦。</p>\n<p>另外启动后只要一关闭cmd窗口，redis服务就关闭了。也是一大头疼问题。</p>\n<p>于是思考到可不可以跟其它服务一样能够开机自启？显然是可以的。</p>\n<p>把 redis 设置为一个 windows 服务便可以解决此问题。</p>\n<h3 id=\"Redis-设置为服务\"><a href=\"#Redis-设置为服务\" class=\"headerlink\" title=\"Redis 设置为服务\"></a>Redis 设置为服务</h3><p>进入redis文件夹，输入<code>redis-server.exe --service-install redis.windows.conf --loglevel verbose</code> 出现如下情况即将 Redis 设置为服务。</p>\n<p>其中参数 –loglevel verbose表示记录日志等级</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\Redis-x64-5.0.14.1&gt;redis-server.exe --service-install redis.windows.conf --loglevel verbose</span><br><span class=\"line\">[6924] 30 Jun 11:01:39.652 # Granting read/write access to &#x27;NT AUTHORITY\\NetworkService&#x27; on: &quot;D:\\Environment\\Redis-x64-5.0.14.1&quot; &quot;D:\\Environment\\Redis-x64-5.0.14.1\\&quot;</span><br><span class=\"line\">[6924] 30 Jun 11:01:39.654 # Redis successfully installed as a service.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看并设置-Redis-的服务\"><a href=\"#查看并设置-Redis-的服务\" class=\"headerlink\" title=\"查看并设置 Redis 的服务\"></a>查看并设置 Redis 的服务</h3><p>鼠标右键「任务栏」–&gt; 点击「任务管理器」–&gt; 选择「服务」选项 –&gt; 点击下方「打开服务」按钮，打开服务窗口之后就可以找到 Redis 的服务</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630111206363-1150534863.png\" class=\"\">\n\n<p>如果不想设置为自启动，如下将启动方式改为手动启动即可。</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630111940288-138478437.png\" class=\"\">\n\n<h3 id=\"开启与关闭-Redis-服务\"><a href=\"#开启与关闭-Redis-服务\" class=\"headerlink\" title=\"开启与关闭 Redis 服务\"></a>开启与关闭 Redis 服务</h3><p>在重启电脑之后，就可以直接在命令行操作 Redis 服务了</p>\n<p>基本命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#开启服务 </span><br><span class=\"line\">redis-server --service-start</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭服务 </span><br><span class=\"line\">redis-server --service-stop</span><br><span class=\"line\"></span><br><span class=\"line\">#卸载服务 </span><br><span class=\"line\">redis-server --service-uninstall</span><br><span class=\"line\"></span><br><span class=\"line\">#服务重命名 </span><br><span class=\"line\">redis-server --service-name server-name</span><br></pre></td></tr></table></figure>\n<p><strong>4、扩展</strong></p>\n<ul>\n<li><p>其他操作系统 Redis 启动设置</p>\n<p> 参考文章：<a href=\"https://blog.csdn.net/FZlion/article/details/109535797?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2~default~CTRLIST~Paid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.pc_relevant.none-task-download-2~default~CTRLIST~Paid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&utm_relevant_index=2\">centos7 源码安装redis设置开机自启</a></p>\n</li>\n<li><p>Redis主从服务安装（待扩展）  </p>\n<p>主从服务可以实现负载均衡，其实就是把上面Redis安装文件包，拷贝到相应目录，修改主、从服务器配置文件中IP、Port，同时从服务器要指定主服务器 的IP、Port，按照Redis自定义服务安装中命令进行服务安装、服务启动、服务关闭、服务卸载即可使用。</p>\n</li>\n</ul>\n<h2 id=\"可视化工具RedisDesktopManager\"><a href=\"#可视化工具RedisDesktopManager\" class=\"headerlink\" title=\"可视化工具RedisDesktopManager\"></a>可视化工具RedisDesktopManager</h2><h3 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h3><p>官网下载：<a href=\"https://redisdesktop.com/download\">https://redisdesktop.com/download</a></p>\n<p>github地址：<a href=\"https://github.com/uglide/RedisDesktopManager/releases\">https://github.com/uglide/RedisDesktopManager/releases</a></p>\n<p>不过由于目前收费，需要可以去找一下网盘安装包</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>点击下载的 exe 文件，傻瓜式安装，下一步即可。</p>\n<h3 id=\"创建连接\"><a href=\"#创建连接\" class=\"headerlink\" title=\"创建连接\"></a>创建连接</h3><p>在创建连接前注意检查一下自己的 Redis 是否开启。开启后如下图可视化连接即可。</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630140021409-1360003831.png\" class=\"\">\n\n<h3 id=\"其他可视化工具\"><a href=\"#其他可视化工具\" class=\"headerlink\" title=\"其他可视化工具\"></a>其他可视化工具</h3><p><a href=\"https://www.jianshu.com/p/721c3762a777\">Redis可视化工具</a></p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"<h1 id=\"Windows下Redis解压包安装及配置教程\"><a href=\"#Windows下Redis解压包安装及配置教程\" class=\"headerlink\" title=\"Windows下Redis解压包安装及配置教程\"></a>Windows下Redis解压包安装及配置教程</h1><h2 id=\"Redis下载及配置\"><a href=\"#Redis下载及配置\" class=\"headerlink\" title=\"Redis下载及配置\"></a>Redis下载及配置</h2><h3 id=\"下载redis\"><a href=\"#下载redis\" class=\"headerlink\" title=\"下载redis\"></a>下载redis</h3><p>Github下载地址：<a href=\"https://github.com/MicrosoftArchive/redis/releases\">https://github.com/MicrosoftArchive/redis/releases</a></p>\n<p>官网下载地址：<a href=\"https://redis.io/download/\">https://redis.io/download/</a></p>\n<h3 id=\"解压压缩包\"><a href=\"#解压压缩包\" class=\"headerlink\" title=\"解压压缩包\"></a>解压压缩包</h3><p>解压到自己的指定目录即可</p>\n<h3 id=\"修改设置密码\"><a href=\"#修改设置密码\" class=\"headerlink\" title=\"修改设置密码\"></a>修改设置密码</h3><p>到配置文件中设置，就是 redis 安装路径下/redis.windows-service.conf 这个文件，注意不是另外一个易混淆文件redis.windows.conf。</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629182352439-1266648941.png\" class=\"\" title=\"2291368-20220629182352439-1266648941\">\n\n<p>配置文件中如下图位置添加<br><code>requirepass 你想设置的密码</code></p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220629183153636-1436499922.png\" class=\"\" title=\"2291368-20220629183153636-1436499922\">\n\n\n\n<h3 id=\"启动Redis服务端\"><a href=\"#启动Redis服务端\" class=\"headerlink\" title=\"启动Redis服务端\"></a>启动Redis服务端</h3><p>先临时直接双击<code>redis-server.exe</code>运行服务即可，当然此方案不好，会有问题，后续解决。</p>\n<h3 id=\"连接Redis服务端\"><a href=\"#连接Redis服务端\" class=\"headerlink\" title=\"连接Redis服务端\"></a>连接Redis服务端</h3><p>双击<code>redis-cli.exe</code>进入界面，若配置文件配置了密码，输入密码连接，如果原本配置文件不配置密码的话输入<code>ping</code>命令收到<code>pong</code>表示连接成功了。</p>\n<h2 id=\"将Redis设置成服务并开机自启\"><a href=\"#将Redis设置成服务并开机自启\" class=\"headerlink\" title=\"将Redis设置成服务并开机自启\"></a>将Redis设置成服务并开机自启</h2><h3 id=\"需求背景\"><a href=\"#需求背景\" class=\"headerlink\" title=\"需求背景\"></a>需求背景</h3><p>每次启动 redis 都要去到 Redis 安装目录下寻找 redis-server.exe 文件点击，很是麻烦。</p>\n<p>另外启动后只要一关闭cmd窗口，redis服务就关闭了。也是一大头疼问题。</p>\n<p>于是思考到可不可以跟其它服务一样能够开机自启？显然是可以的。</p>\n<p>把 redis 设置为一个 windows 服务便可以解决此问题。</p>\n<h3 id=\"Redis-设置为服务\"><a href=\"#Redis-设置为服务\" class=\"headerlink\" title=\"Redis 设置为服务\"></a>Redis 设置为服务</h3><p>进入redis文件夹，输入<code>redis-server.exe --service-install redis.windows.conf --loglevel verbose</code> 出现如下情况即将 Redis 设置为服务。</p>\n<p>其中参数 –loglevel verbose表示记录日志等级</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:\\Environment\\Redis-x64-5.0.14.1&gt;redis-server.exe --service-install redis.windows.conf --loglevel verbose</span><br><span class=\"line\">[6924] 30 Jun 11:01:39.652 # Granting read/write access to &#x27;NT AUTHORITY\\NetworkService&#x27; on: &quot;D:\\Environment\\Redis-x64-5.0.14.1&quot; &quot;D:\\Environment\\Redis-x64-5.0.14.1\\&quot;</span><br><span class=\"line\">[6924] 30 Jun 11:01:39.654 # Redis successfully installed as a service.</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"查看并设置-Redis-的服务\"><a href=\"#查看并设置-Redis-的服务\" class=\"headerlink\" title=\"查看并设置 Redis 的服务\"></a>查看并设置 Redis 的服务</h3><p>鼠标右键「任务栏」–&gt; 点击「任务管理器」–&gt; 选择「服务」选项 –&gt; 点击下方「打开服务」按钮，打开服务窗口之后就可以找到 Redis 的服务</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630111206363-1150534863.png\" class=\"\">\n\n<p>如果不想设置为自启动，如下将启动方式改为手动启动即可。</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630111940288-138478437.png\" class=\"\">\n\n<h3 id=\"开启与关闭-Redis-服务\"><a href=\"#开启与关闭-Redis-服务\" class=\"headerlink\" title=\"开启与关闭 Redis 服务\"></a>开启与关闭 Redis 服务</h3><p>在重启电脑之后，就可以直接在命令行操作 Redis 服务了</p>\n<p>基本命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#开启服务 </span><br><span class=\"line\">redis-server --service-start</span><br><span class=\"line\"></span><br><span class=\"line\">#关闭服务 </span><br><span class=\"line\">redis-server --service-stop</span><br><span class=\"line\"></span><br><span class=\"line\">#卸载服务 </span><br><span class=\"line\">redis-server --service-uninstall</span><br><span class=\"line\"></span><br><span class=\"line\">#服务重命名 </span><br><span class=\"line\">redis-server --service-name server-name</span><br></pre></td></tr></table></figure>\n<p><strong>4、扩展</strong></p>\n<ul>\n<li><p>其他操作系统 Redis 启动设置</p>\n<p> 参考文章：<a href=\"https://blog.csdn.net/FZlion/article/details/109535797?spm=1001.2101.3001.6650.1&utm_medium=distribute.pc_relevant.none-task-download-2~default~CTRLIST~Paid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&depth_1-utm_source=distribute.pc_relevant.none-task-download-2~default~CTRLIST~Paid-1-14888871-blog-109535797.pc_relevant_multi_platform_whitelistv1&utm_relevant_index=2\">centos7 源码安装redis设置开机自启</a></p>\n</li>\n<li><p>Redis主从服务安装（待扩展）  </p>\n<p>主从服务可以实现负载均衡，其实就是把上面Redis安装文件包，拷贝到相应目录，修改主、从服务器配置文件中IP、Port，同时从服务器要指定主服务器 的IP、Port，按照Redis自定义服务安装中命令进行服务安装、服务启动、服务关闭、服务卸载即可使用。</p>\n</li>\n</ul>\n<h2 id=\"可视化工具RedisDesktopManager\"><a href=\"#可视化工具RedisDesktopManager\" class=\"headerlink\" title=\"可视化工具RedisDesktopManager\"></a>可视化工具RedisDesktopManager</h2><h3 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h3><p>官网下载：<a href=\"https://redisdesktop.com/download\">https://redisdesktop.com/download</a></p>\n<p>github地址：<a href=\"https://github.com/uglide/RedisDesktopManager/releases\">https://github.com/uglide/RedisDesktopManager/releases</a></p>\n<p>不过由于目前收费，需要可以去找一下网盘安装包</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><p>点击下载的 exe 文件，傻瓜式安装，下一步即可。</p>\n<h3 id=\"创建连接\"><a href=\"#创建连接\" class=\"headerlink\" title=\"创建连接\"></a>创建连接</h3><p>在创建连接前注意检查一下自己的 Redis 是否开启。开启后如下图可视化连接即可。</p>\n<img src=\"/2022/06/30/Windows%E4%B8%8BRedis%E8%A7%A3%E5%8E%8B%E5%8C%85%E5%AE%89%E8%A3%85%E5%8F%8A%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/2291368-20220630140021409-1360003831.png\" class=\"\">\n\n<h3 id=\"其他可视化工具\"><a href=\"#其他可视化工具\" class=\"headerlink\" title=\"其他可视化工具\"></a>其他可视化工具</h3><p><a href=\"https://www.jianshu.com/p/721c3762a777\">Redis可视化工具</a></p>\n"},{"title":"如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频","copyright":true,"date":"2022-11-22T11:43:00.000Z","_content":"\n## 前言\n\n目前国内比较火视频平台的视频平台有这么几家：腾讯、爱奇艺、优酷等，对于新剧、热播剧必须开通VIP会员才能观看，各大影视好剧作品分别被争相购买版权后垄断价格，甚至付费一集集购买观看，非常的不友好。作为一个折腾人，下面就带大家来折腾一下来免费观看付费视频。（实现人生自由的朋友们可以直接开通会员退出本文了）\n\n### 效果\n\n  ![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png)\n\n\n### 油猴脚本安装简述\n\n第一步，下载谷歌/edge浏览器。\n\n第二步，下载tampermonkey。\n\n第三步，下载的油猴文件(或者直接试用如下方式安装)，解压后得到的.crx文件拖拽到谷歌/edge浏览器的扩展管理页面（打开开发者模式）即可完成安装。\n\n## 安装步骤\n\n### 安装油猴扩展\n\n由于考虑到一些同学没有ti子，下文以Edge浏览器（内核Chrome）举例，谷歌浏览器也是大同小异。\n\n1、点击[获取 Microsoft Edge 扩展](https://microsoftedge.microsoft.com/addons?hl=zh-CN)，打开开发者模式。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161300895-837839242.png)\n\n\n2、跳转至扩展获取界面，热门中如有直接点击获取即可\n\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161315069-1517471827.png)\n\n或者搜索**Tampermonkey**，搜索到油猴之后点击获取。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161326879-2039517975.png)\n\n3、弹出添加扩展添加即可。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161340344-243788459.png)\n\n4、添加成功会出现**Tampermonkey** 已经成功安装!会跳转到此页面。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161409227-1151488737.png)\n\n\n5、点击用户脚本，有几种获取脚本的方式，笔者一般使用第二种[GreasyFork](https://greasyfork.org/)去获取。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161422145-1659631518.png)\n\n\n\n\n可以看到有脚本使用安装简单介绍：\n\n第一步：安装一个用户脚本管理器\n\n第二步：安装一个用户脚本\n\n第三步：使用用户脚本\n\n到此第一步我们已经完成，接下来就是安装用户脚本了。\n\n6、也可便捷三步安装油猴，点击传松门，[Tampermonkey • 首页](https://www.tampermonkey.net/)，点击下载直接省略上文1、2、3步骤。以上省略步骤是为了方便用户可以自行安装其他扩展。下文会简单推荐个人好用扩展。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161517671-301035636.png)\n\n\n### 安装用户脚本\n\n1、点击[GreasyFork](https://greasyfork.org/)去获取，首页如图：\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161431578-1856504518.png)\n\n2、搜索框输入脚本名称，支持模糊查询如直接搜索视频（下文以此举例），选择自己所需脚本点击进入安装界面。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161439551-1411541496.png)\n\n3、点击安装此脚本即可。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161447243-1322403015.png)\n\n4、然后点击管理面板即可查看到刚刚安装的脚本。建议之前先把油猴扩展展示，方便后续操作。\n\n油猴扩展展示进行如下操作，点击隐藏标识取消隐藏。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161454039-1238665013.png)\n\n鼠标左击油猴扩展标识，点击管理面板\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161500321-1046594983.png)\n\n5、即可进入管理面板，可以查看到已经安装的脚本列表，默认已经启用。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161507343-2040709033.png)\n\n### 使用方法\n\n打开你想看的视频，发现左边有按钮，点击后展开选择其中一个解析地址稍等片刻，如有解析失败的接口，更换接口即可。\n\n- 全网VIP视频破解去广告免费看+全网音乐下载+知乎增强+短视频无水印下载效果图\n\n  ![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png)\n- B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx效果图\n\n  ![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161532207-1251520737.png)\n\n\n\n## 扩展、脚本推荐\n\n### 油猴脚本推荐\n\n- 计时器掌控者|视频广告跳过|视频广告加速器\n-  懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、知乎增强xxx\n- B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx\n- 百度网盘视频播放尊享 VIP | 解锁视频倍数 | 解锁全部清晰度\n\n### Chrome/Edge扩展推荐\n\n- Infinity 新标签页\n- OneTab\n- Tampermonkey\n- 扩展管理器（Extension Manager）\n- AdBlock/AdGuard\n- 沙拉查词-聚合词典划词翻译\n- NeatDownloadManager Extension\n- SuperCopy 超级复制\n\n  开发者推荐\n\n- GitCodeTree\n- Octotree - GitHub code tree\n- FeHelper(前端助手)\n","source":"_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频.md","raw":"---\ntitle: '如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频'\ncopyright: true\ndate: '2022-11-22 19:43'\ntags: '油猴'\ncategories: 'categories'\n---\n\n## 前言\n\n目前国内比较火视频平台的视频平台有这么几家：腾讯、爱奇艺、优酷等，对于新剧、热播剧必须开通VIP会员才能观看，各大影视好剧作品分别被争相购买版权后垄断价格，甚至付费一集集购买观看，非常的不友好。作为一个折腾人，下面就带大家来折腾一下来免费观看付费视频。（实现人生自由的朋友们可以直接开通会员退出本文了）\n\n### 效果\n\n  ![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png)\n\n\n### 油猴脚本安装简述\n\n第一步，下载谷歌/edge浏览器。\n\n第二步，下载tampermonkey。\n\n第三步，下载的油猴文件(或者直接试用如下方式安装)，解压后得到的.crx文件拖拽到谷歌/edge浏览器的扩展管理页面（打开开发者模式）即可完成安装。\n\n## 安装步骤\n\n### 安装油猴扩展\n\n由于考虑到一些同学没有ti子，下文以Edge浏览器（内核Chrome）举例，谷歌浏览器也是大同小异。\n\n1、点击[获取 Microsoft Edge 扩展](https://microsoftedge.microsoft.com/addons?hl=zh-CN)，打开开发者模式。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161300895-837839242.png)\n\n\n2、跳转至扩展获取界面，热门中如有直接点击获取即可\n\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161315069-1517471827.png)\n\n或者搜索**Tampermonkey**，搜索到油猴之后点击获取。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161326879-2039517975.png)\n\n3、弹出添加扩展添加即可。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161340344-243788459.png)\n\n4、添加成功会出现**Tampermonkey** 已经成功安装!会跳转到此页面。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161409227-1151488737.png)\n\n\n5、点击用户脚本，有几种获取脚本的方式，笔者一般使用第二种[GreasyFork](https://greasyfork.org/)去获取。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161422145-1659631518.png)\n\n\n\n\n可以看到有脚本使用安装简单介绍：\n\n第一步：安装一个用户脚本管理器\n\n第二步：安装一个用户脚本\n\n第三步：使用用户脚本\n\n到此第一步我们已经完成，接下来就是安装用户脚本了。\n\n6、也可便捷三步安装油猴，点击传松门，[Tampermonkey • 首页](https://www.tampermonkey.net/)，点击下载直接省略上文1、2、3步骤。以上省略步骤是为了方便用户可以自行安装其他扩展。下文会简单推荐个人好用扩展。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161517671-301035636.png)\n\n\n### 安装用户脚本\n\n1、点击[GreasyFork](https://greasyfork.org/)去获取，首页如图：\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161431578-1856504518.png)\n\n2、搜索框输入脚本名称，支持模糊查询如直接搜索视频（下文以此举例），选择自己所需脚本点击进入安装界面。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161439551-1411541496.png)\n\n3、点击安装此脚本即可。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161447243-1322403015.png)\n\n4、然后点击管理面板即可查看到刚刚安装的脚本。建议之前先把油猴扩展展示，方便后续操作。\n\n油猴扩展展示进行如下操作，点击隐藏标识取消隐藏。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161454039-1238665013.png)\n\n鼠标左击油猴扩展标识，点击管理面板\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161500321-1046594983.png)\n\n5、即可进入管理面板，可以查看到已经安装的脚本列表，默认已经启用。\n\n![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161507343-2040709033.png)\n\n### 使用方法\n\n打开你想看的视频，发现左边有按钮，点击后展开选择其中一个解析地址稍等片刻，如有解析失败的接口，更换接口即可。\n\n- 全网VIP视频破解去广告免费看+全网音乐下载+知乎增强+短视频无水印下载效果图\n\n  ![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png)\n- B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx效果图\n\n  ![](如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161532207-1251520737.png)\n\n\n\n## 扩展、脚本推荐\n\n### 油猴脚本推荐\n\n- 计时器掌控者|视频广告跳过|视频广告加速器\n-  懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、知乎增强xxx\n- B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx\n- 百度网盘视频播放尊享 VIP | 解锁视频倍数 | 解锁全部清晰度\n\n### Chrome/Edge扩展推荐\n\n- Infinity 新标签页\n- OneTab\n- Tampermonkey\n- 扩展管理器（Extension Manager）\n- AdBlock/AdGuard\n- 沙拉查词-聚合词典划词翻译\n- NeatDownloadManager Extension\n- SuperCopy 超级复制\n\n  开发者推荐\n\n- GitCodeTree\n- Octotree - GitHub code tree\n- FeHelper(前端助手)\n","slug":"如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频","published":1,"updated":"2022-12-07T09:50:18.809Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu10037sw6xb4pd24k9","content":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前国内比较火视频平台的视频平台有这么几家：腾讯、爱奇艺、优酷等，对于新剧、热播剧必须开通VIP会员才能观看，各大影视好剧作品分别被争相购买版权后垄断价格，甚至付费一集集购买观看，非常的不友好。作为一个折腾人，下面就带大家来折腾一下来免费观看付费视频。（实现人生自由的朋友们可以直接开通会员退出本文了）</p>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3>  <img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161524219-1891531800.png\" class=\"\">\n\n\n<h3 id=\"油猴脚本安装简述\"><a href=\"#油猴脚本安装简述\" class=\"headerlink\" title=\"油猴脚本安装简述\"></a>油猴脚本安装简述</h3><p>第一步，下载谷歌/edge浏览器。</p>\n<p>第二步，下载tampermonkey。</p>\n<p>第三步，下载的油猴文件(或者直接试用如下方式安装)，解压后得到的.crx文件拖拽到谷歌/edge浏览器的扩展管理页面（打开开发者模式）即可完成安装。</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><h3 id=\"安装油猴扩展\"><a href=\"#安装油猴扩展\" class=\"headerlink\" title=\"安装油猴扩展\"></a>安装油猴扩展</h3><p>由于考虑到一些同学没有ti子，下文以Edge浏览器（内核Chrome）举例，谷歌浏览器也是大同小异。</p>\n<p>1、点击<a href=\"https://microsoftedge.microsoft.com/addons?hl=zh-CN\">获取 Microsoft Edge 扩展</a>，打开开发者模式。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161300895-837839242.png\" class=\"\">\n\n\n<p>2、跳转至扩展获取界面，热门中如有直接点击获取即可</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161315069-1517471827.png\" class=\"\">\n\n<p>或者搜索<strong>Tampermonkey</strong>，搜索到油猴之后点击获取。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161326879-2039517975.png\" class=\"\">\n\n<p>3、弹出添加扩展添加即可。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161340344-243788459.png\" class=\"\">\n\n<p>4、添加成功会出现<strong>Tampermonkey</strong> 已经成功安装!会跳转到此页面。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161409227-1151488737.png\" class=\"\">\n\n\n<p>5、点击用户脚本，有几种获取脚本的方式，笔者一般使用第二种<a href=\"https://greasyfork.org/\">GreasyFork</a>去获取。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161422145-1659631518.png\" class=\"\">\n\n\n\n\n<p>可以看到有脚本使用安装简单介绍：</p>\n<p>第一步：安装一个用户脚本管理器</p>\n<p>第二步：安装一个用户脚本</p>\n<p>第三步：使用用户脚本</p>\n<p>到此第一步我们已经完成，接下来就是安装用户脚本了。</p>\n<p>6、也可便捷三步安装油猴，点击传松门，<a href=\"https://www.tampermonkey.net/\">Tampermonkey • 首页</a>，点击下载直接省略上文1、2、3步骤。以上省略步骤是为了方便用户可以自行安装其他扩展。下文会简单推荐个人好用扩展。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161517671-301035636.png\" class=\"\">\n\n\n<h3 id=\"安装用户脚本\"><a href=\"#安装用户脚本\" class=\"headerlink\" title=\"安装用户脚本\"></a>安装用户脚本</h3><p>1、点击<a href=\"https://greasyfork.org/\">GreasyFork</a>去获取，首页如图：</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161431578-1856504518.png\" class=\"\">\n\n<p>2、搜索框输入脚本名称，支持模糊查询如直接搜索视频（下文以此举例），选择自己所需脚本点击进入安装界面。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161439551-1411541496.png\" class=\"\">\n\n<p>3、点击安装此脚本即可。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161447243-1322403015.png\" class=\"\">\n\n<p>4、然后点击管理面板即可查看到刚刚安装的脚本。建议之前先把油猴扩展展示，方便后续操作。</p>\n<p>油猴扩展展示进行如下操作，点击隐藏标识取消隐藏。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161454039-1238665013.png\" class=\"\">\n\n<p>鼠标左击油猴扩展标识，点击管理面板</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161500321-1046594983.png\" class=\"\">\n\n<p>5、即可进入管理面板，可以查看到已经安装的脚本列表，默认已经启用。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161507343-2040709033.png\" class=\"\">\n\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><p>打开你想看的视频，发现左边有按钮，点击后展开选择其中一个解析地址稍等片刻，如有解析失败的接口，更换接口即可。</p>\n<ul>\n<li><p>全网VIP视频破解去广告免费看+全网音乐下载+知乎增强+短视频无水印下载效果图</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161524219-1891531800.png\" class=\"\"></li>\n<li><p>B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx效果图</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161532207-1251520737.png\" class=\"\"></li>\n</ul>\n<h2 id=\"扩展、脚本推荐\"><a href=\"#扩展、脚本推荐\" class=\"headerlink\" title=\"扩展、脚本推荐\"></a>扩展、脚本推荐</h2><h3 id=\"油猴脚本推荐\"><a href=\"#油猴脚本推荐\" class=\"headerlink\" title=\"油猴脚本推荐\"></a>油猴脚本推荐</h3><ul>\n<li>计时器掌控者|视频广告跳过|视频广告加速器</li>\n<li> 懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、知乎增强xxx</li>\n<li>B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx</li>\n<li>百度网盘视频播放尊享 VIP | 解锁视频倍数 | 解锁全部清晰度</li>\n</ul>\n<h3 id=\"Chrome-Edge扩展推荐\"><a href=\"#Chrome-Edge扩展推荐\" class=\"headerlink\" title=\"Chrome/Edge扩展推荐\"></a>Chrome/Edge扩展推荐</h3><ul>\n<li><p>Infinity 新标签页</p>\n</li>\n<li><p>OneTab</p>\n</li>\n<li><p>Tampermonkey</p>\n</li>\n<li><p>扩展管理器（Extension Manager）</p>\n</li>\n<li><p>AdBlock/AdGuard</p>\n</li>\n<li><p>沙拉查词-聚合词典划词翻译</p>\n</li>\n<li><p>NeatDownloadManager Extension</p>\n</li>\n<li><p>SuperCopy 超级复制</p>\n<p>开发者推荐</p>\n</li>\n<li><p>GitCodeTree</p>\n</li>\n<li><p>Octotree - GitHub code tree</p>\n</li>\n<li><p>FeHelper(前端助手)</p>\n</li>\n</ul>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>目前国内比较火视频平台的视频平台有这么几家：腾讯、爱奇艺、优酷等，对于新剧、热播剧必须开通VIP会员才能观看，各大影视好剧作品分别被争相购买版权后垄断价格，甚至付费一集集购买观看，非常的不友好。作为一个折腾人，下面就带大家来折腾一下来免费观看付费视频。（实现人生自由的朋友们可以直接开通会员退出本文了）</p>\n<h3 id=\"效果\"><a href=\"#效果\" class=\"headerlink\" title=\"效果\"></a>效果</h3>  <img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161524219-1891531800.png\" class=\"\">\n\n\n<h3 id=\"油猴脚本安装简述\"><a href=\"#油猴脚本安装简述\" class=\"headerlink\" title=\"油猴脚本安装简述\"></a>油猴脚本安装简述</h3><p>第一步，下载谷歌/edge浏览器。</p>\n<p>第二步，下载tampermonkey。</p>\n<p>第三步，下载的油猴文件(或者直接试用如下方式安装)，解压后得到的.crx文件拖拽到谷歌/edge浏览器的扩展管理页面（打开开发者模式）即可完成安装。</p>\n<h2 id=\"安装步骤\"><a href=\"#安装步骤\" class=\"headerlink\" title=\"安装步骤\"></a>安装步骤</h2><h3 id=\"安装油猴扩展\"><a href=\"#安装油猴扩展\" class=\"headerlink\" title=\"安装油猴扩展\"></a>安装油猴扩展</h3><p>由于考虑到一些同学没有ti子，下文以Edge浏览器（内核Chrome）举例，谷歌浏览器也是大同小异。</p>\n<p>1、点击<a href=\"https://microsoftedge.microsoft.com/addons?hl=zh-CN\">获取 Microsoft Edge 扩展</a>，打开开发者模式。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161300895-837839242.png\" class=\"\">\n\n\n<p>2、跳转至扩展获取界面，热门中如有直接点击获取即可</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161315069-1517471827.png\" class=\"\">\n\n<p>或者搜索<strong>Tampermonkey</strong>，搜索到油猴之后点击获取。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161326879-2039517975.png\" class=\"\">\n\n<p>3、弹出添加扩展添加即可。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161340344-243788459.png\" class=\"\">\n\n<p>4、添加成功会出现<strong>Tampermonkey</strong> 已经成功安装!会跳转到此页面。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161409227-1151488737.png\" class=\"\">\n\n\n<p>5、点击用户脚本，有几种获取脚本的方式，笔者一般使用第二种<a href=\"https://greasyfork.org/\">GreasyFork</a>去获取。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161422145-1659631518.png\" class=\"\">\n\n\n\n\n<p>可以看到有脚本使用安装简单介绍：</p>\n<p>第一步：安装一个用户脚本管理器</p>\n<p>第二步：安装一个用户脚本</p>\n<p>第三步：使用用户脚本</p>\n<p>到此第一步我们已经完成，接下来就是安装用户脚本了。</p>\n<p>6、也可便捷三步安装油猴，点击传松门，<a href=\"https://www.tampermonkey.net/\">Tampermonkey • 首页</a>，点击下载直接省略上文1、2、3步骤。以上省略步骤是为了方便用户可以自行安装其他扩展。下文会简单推荐个人好用扩展。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161517671-301035636.png\" class=\"\">\n\n\n<h3 id=\"安装用户脚本\"><a href=\"#安装用户脚本\" class=\"headerlink\" title=\"安装用户脚本\"></a>安装用户脚本</h3><p>1、点击<a href=\"https://greasyfork.org/\">GreasyFork</a>去获取，首页如图：</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161431578-1856504518.png\" class=\"\">\n\n<p>2、搜索框输入脚本名称，支持模糊查询如直接搜索视频（下文以此举例），选择自己所需脚本点击进入安装界面。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161439551-1411541496.png\" class=\"\">\n\n<p>3、点击安装此脚本即可。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161447243-1322403015.png\" class=\"\">\n\n<p>4、然后点击管理面板即可查看到刚刚安装的脚本。建议之前先把油猴扩展展示，方便后续操作。</p>\n<p>油猴扩展展示进行如下操作，点击隐藏标识取消隐藏。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161454039-1238665013.png\" class=\"\">\n\n<p>鼠标左击油猴扩展标识，点击管理面板</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161500321-1046594983.png\" class=\"\">\n\n<p>5、即可进入管理面板，可以查看到已经安装的脚本列表，默认已经启用。</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161507343-2040709033.png\" class=\"\">\n\n<h3 id=\"使用方法\"><a href=\"#使用方法\" class=\"headerlink\" title=\"使用方法\"></a>使用方法</h3><p>打开你想看的视频，发现左边有按钮，点击后展开选择其中一个解析地址稍等片刻，如有解析失败的接口，更换接口即可。</p>\n<ul>\n<li><p>全网VIP视频破解去广告免费看+全网音乐下载+知乎增强+短视频无水印下载效果图</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161524219-1891531800.png\" class=\"\"></li>\n<li><p>B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx效果图</p>\n<img src=\"/2022/11/22/%E5%A6%82%E4%BD%95%E7%94%A8%E6%B2%B9%E7%8C%B4%E8%84%9A%E6%9C%AC%E5%85%8D%E8%B4%B9%E8%A7%82%E7%9C%8B%E5%A6%82%E8%85%BE%E8%AE%AF%E3%80%81%E7%88%B1%E5%A5%87%E8%89%BA%E3%80%81%E4%BC%98%E9%85%B7%E7%AD%89%E5%90%84%E5%A4%A7%E5%B9%B3%E5%8F%B0VIP%E8%A7%86%E9%A2%91/2291368-20221122161532207-1251520737.png\" class=\"\"></li>\n</ul>\n<h2 id=\"扩展、脚本推荐\"><a href=\"#扩展、脚本推荐\" class=\"headerlink\" title=\"扩展、脚本推荐\"></a>扩展、脚本推荐</h2><h3 id=\"油猴脚本推荐\"><a href=\"#油猴脚本推荐\" class=\"headerlink\" title=\"油猴脚本推荐\"></a>油猴脚本推荐</h3><ul>\n<li>计时器掌控者|视频广告跳过|视频广告加速器</li>\n<li> 懒人专用，全网VIP视频免费破解去广告、全网音乐直接下载、知乎增强xxx</li>\n<li>B站哔哩哔哩使用增强，全网VIP视频免费破解去广告，全网音乐直接下载xxx</li>\n<li>百度网盘视频播放尊享 VIP | 解锁视频倍数 | 解锁全部清晰度</li>\n</ul>\n<h3 id=\"Chrome-Edge扩展推荐\"><a href=\"#Chrome-Edge扩展推荐\" class=\"headerlink\" title=\"Chrome/Edge扩展推荐\"></a>Chrome/Edge扩展推荐</h3><ul>\n<li><p>Infinity 新标签页</p>\n</li>\n<li><p>OneTab</p>\n</li>\n<li><p>Tampermonkey</p>\n</li>\n<li><p>扩展管理器（Extension Manager）</p>\n</li>\n<li><p>AdBlock/AdGuard</p>\n</li>\n<li><p>沙拉查词-聚合词典划词翻译</p>\n</li>\n<li><p>NeatDownloadManager Extension</p>\n</li>\n<li><p>SuperCopy 超级复制</p>\n<p>开发者推荐</p>\n</li>\n<li><p>GitCodeTree</p>\n</li>\n<li><p>Octotree - GitHub code tree</p>\n</li>\n<li><p>FeHelper(前端助手)</p>\n</li>\n</ul>\n"},{"title":"微PE制作U盘启动盘教程","copyright":true,"date":"2022-06-29T10:12:00.000Z","_content":"\n**第一步：制作前期准备**\n\n* 16 GB 以上的U盘\n\n* 微 PE 工具箱 exe 文件\n\n* 系统镜像（官方渠道/MSDN）\n\n[微PE官网](https://www.wepe.com.cn/download.html)\n如下图所示下载微 PE 工具箱 exe 文件本地\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607215929483-1525301003.png)\n\n\n[MSDN 镜像下载](https://msdn.itellyou.cn/)\n\n建议采用哈希比对下载，直接下载到 U 盘里，防止文件下载等传输出错，下载完成后然后进行哈希比对。\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607220059511-1290163714.png)\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607220127585-1741352083.png)\n\n\n**第二步：制作U盘启动盘**\n\n双击 exe 文件\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607215951418-741813094.png)\n\n设置安装方式（本文选取安装到 U 盘）\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607215959604-689320937.png)\n\n进行简单设置，安装即可。\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607220047549-1268062378.png)\n","source":"_posts/微 PE 制作 U 盘启动盘教程.md","raw":"---\ntitle: '微PE制作U盘启动盘教程'\ncopyright: true\ndate: '2022-06-29 18:12'\ntags: '微PE'\ncategories: 'categories'\n---\n\n**第一步：制作前期准备**\n\n* 16 GB 以上的U盘\n\n* 微 PE 工具箱 exe 文件\n\n* 系统镜像（官方渠道/MSDN）\n\n[微PE官网](https://www.wepe.com.cn/download.html)\n如下图所示下载微 PE 工具箱 exe 文件本地\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607215929483-1525301003.png)\n\n\n[MSDN 镜像下载](https://msdn.itellyou.cn/)\n\n建议采用哈希比对下载，直接下载到 U 盘里，防止文件下载等传输出错，下载完成后然后进行哈希比对。\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607220059511-1290163714.png)\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607220127585-1741352083.png)\n\n\n**第二步：制作U盘启动盘**\n\n双击 exe 文件\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607215951418-741813094.png)\n\n设置安装方式（本文选取安装到 U 盘）\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607215959604-689320937.png)\n\n进行简单设置，安装即可。\n\n![](微 PE 制作 U 盘启动盘教程/2291368-20220607220047549-1268062378.png)\n","slug":"微 PE 制作 U 盘启动盘教程","published":1,"updated":"2022-12-07T09:49:37.344Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu10039sw6x64p2eebj","content":"<p><strong>第一步：制作前期准备</strong></p>\n<ul>\n<li><p>16 GB 以上的U盘</p>\n</li>\n<li><p>微 PE 工具箱 exe 文件</p>\n</li>\n<li><p>系统镜像（官方渠道/MSDN）</p>\n</li>\n</ul>\n<p><a href=\"https://www.wepe.com.cn/download.html\">微PE官网</a><br>如下图所示下载微 PE 工具箱 exe 文件本地</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215929483-1525301003.png\" class=\"\">\n\n\n<p><a href=\"https://msdn.itellyou.cn/\">MSDN 镜像下载</a></p>\n<p>建议采用哈希比对下载，直接下载到 U 盘里，防止文件下载等传输出错，下载完成后然后进行哈希比对。</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220059511-1290163714.png\" class=\"\">\n\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220127585-1741352083.png\" class=\"\">\n\n\n<p><strong>第二步：制作U盘启动盘</strong></p>\n<p>双击 exe 文件</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215951418-741813094.png\" class=\"\">\n\n<p>设置安装方式（本文选取安装到 U 盘）</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215959604-689320937.png\" class=\"\">\n\n<p>进行简单设置，安装即可。</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220047549-1268062378.png\" class=\"\">\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/rr/wallhaven-rr222w.jpg","excerpt":"","more":"<p><strong>第一步：制作前期准备</strong></p>\n<ul>\n<li><p>16 GB 以上的U盘</p>\n</li>\n<li><p>微 PE 工具箱 exe 文件</p>\n</li>\n<li><p>系统镜像（官方渠道/MSDN）</p>\n</li>\n</ul>\n<p><a href=\"https://www.wepe.com.cn/download.html\">微PE官网</a><br>如下图所示下载微 PE 工具箱 exe 文件本地</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215929483-1525301003.png\" class=\"\">\n\n\n<p><a href=\"https://msdn.itellyou.cn/\">MSDN 镜像下载</a></p>\n<p>建议采用哈希比对下载，直接下载到 U 盘里，防止文件下载等传输出错，下载完成后然后进行哈希比对。</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220059511-1290163714.png\" class=\"\">\n\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220127585-1741352083.png\" class=\"\">\n\n\n<p><strong>第二步：制作U盘启动盘</strong></p>\n<p>双击 exe 文件</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215951418-741813094.png\" class=\"\">\n\n<p>设置安装方式（本文选取安装到 U 盘）</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607215959604-689320937.png\" class=\"\">\n\n<p>进行简单设置，安装即可。</p>\n<img src=\"/2022/06/29/%E5%BE%AE%20PE%20%E5%88%B6%E4%BD%9C%20U%20%E7%9B%98%E5%90%AF%E5%8A%A8%E7%9B%98%E6%95%99%E7%A8%8B/2291368-20220607220047549-1268062378.png\" class=\"\">\n"},{"title":"房屋出租系统【韩顺平 Java 基础案例复现】","date":"2022-03-24T07:31:36.000Z","sticky":null,"pic":null,"comments":1,"toc":true,"expire":true,"only":["home","category","tag"],"_content":"\n本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。<!-- more -->\n\n# 房屋出租系统【韩顺平 Java 基础案例复现】\n\n## 前言\n本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。\n\n## 需求\n实现房屋出租系统，基本功能包括对房屋信息的增删改查（存储用数组实现）。\n\n## 项目设计-程序框架图\n![2291368-20220227144414328-1953458094](房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227144414328-1953458094.png)\n\n## 项目代码实现\n\n### 文件夹结构\n\n![2291368-20220227160905796-630586732](房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227160905796-630586732.png)\n\n\n### 工具类准备\n\n这里的 Utility 类是韩顺平Utility工具类(java房屋出租项目)，创建工具类文件复制到自己的项目里即可。\n\n```java\npackage com.codedog.houserent.utils;    //改为自己的目录\n\n\n/**\n\t工具类的作用:\n\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。\n*/\n\nimport java.util.*;\n\npublic class Utility {\n\t//静态属性。。。\n    private static Scanner scanner = new Scanner(System.in);\n\n    \n    /**\n     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围\n     * @return 1——5\n     */\n\tpublic static char readMenuSelection() {\n        char c;\n        for (; ; ) {\n            String str = readKeyBoard(1, false);//包含一个字符的字符串\n            c = str.charAt(0);//将字符串转换成字符char类型\n            if (c != '1' && c != '2' && \n                c != '3' && c != '4' && c != '5') {\n                System.out.print(\"选择错误，请重新输入：\");\n            } else break;\n        }\n        return c;\n    }\n\n\t/**\n\t * 功能：读取键盘输入的一个字符\n\t * @return 一个字符\n\t */\n    public static char readChar() {\n        String str = readKeyBoard(1, false);//就是一个字符\n        return str.charAt(0);\n    }\n    /**\n     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符\n     * @param defaultValue 指定的默认值\n     * @return 默认值或输入的字符\n     */\n    \n    public static char readChar(char defaultValue) {\n        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符\n        return (str.length() == 0) ? defaultValue : str.charAt(0);\n    }\n\t\n    /**\n     * 功能：读取键盘输入的整型，长度小于10位\n     * @return 整数\n     */\n    public static int readInt() {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, false);//一个整数，长度<=10位\n            try {\n                n = Integer.parseInt(str);//将字符串转换成整数\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n    /**\n     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数\n     * @param defaultValue 指定的默认值\n     * @return 整数或默认值\n     */\n    public static int readInt(int defaultValue) {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, true);\n            if (str.equals(\"\")) {\n                return defaultValue;\n            }\n\t\t\t\n\t\t\t//异常处理...\n            try {\n                n = Integer.parseInt(str);\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串\n     * @param limit 限制的长度\n     * @return 指定长度的字符串\n     */\n\n    public static String readString(int limit) {\n        return readKeyBoard(limit, false);\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串\n     * @param limit 限制的长度\n     * @param defaultValue 指定的默认值\n     * @return 指定长度的字符串\n     */\n\t\n    public static String readString(int limit, String defaultValue) {\n        String str = readKeyBoard(limit, true);\n        return str.equals(\"\")? defaultValue : str;\n    }\n\n\n\t/**\n\t * 功能：读取键盘输入的确认选项，Y或N\n\t * 将小的功能，封装到一个方法中.\n\t * @return Y或N\n\t */\n    public static char readConfirmSelection() {\n        System.out.println(\"请输入你的选择(Y/N): 请小心选择\");\n        char c;\n        for (; ; ) {//无限循环\n        \t//在这里，将接受到字符，转成了大写字母\n        \t//y => Y n=>N\n            String str = readKeyBoard(1, false).toUpperCase();\n            c = str.charAt(0);\n            if (c == 'Y' || c == 'N') {\n                break;\n            } else {\n                System.out.print(\"选择错误，请重新输入：\");\n            }\n        }\n        return c;\n    }\n\n    /**\n     * 功能： 读取一个字符串\n     * @param limit 读取的长度\n     * @param blankReturn 如果为true ,表示 可以读空字符串。 \n     * \t\t\t\t\t  如果为false表示 不能读空字符串。\n     * \t\t\t\n\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。\n     * @return\n     */\n    private static String readKeyBoard(int limit, boolean blankReturn) {\n        \n\t\t//定义了字符串\n\t\tString line = \"\";\n\n\t\t//scanner.hasNextLine() 判断有没有下一行\n        while (scanner.hasNextLine()) {\n            line = scanner.nextLine();//读取这一行\n           \n\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车\n\t\t\tif (line.length() == 0) {\n                if (blankReturn) return line;//如果blankReturn=true,可以返回空串\n                else continue; //如果blankReturn=false,不接受空串，必须输入内容\n            }\n\n\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  \n\t\t\t//如果用户如的内容 >0 <= limit ,我就接受\n            if (line.length() < 1 || line.length() > limit) {\n                System.out.print(\"输入长度（不能大于\" + limit + \"）错误，请重新输入：\");\n                continue;\n            }\n            break;\n        }\n\n        return line;\n    }\n}\n```\n\n### 具体功能类\n\n#### House类\n\nHouse实体类的属性有编号，房主， 电话，地址，月租，状态。House的对象表示一个房屋信息。其中构造器、Get和Set方法、toSring方法快捷键Alt+Insert生成即可，toSring略微改成自己想要的格式。\n\n```java\npackage com.coderq.houserent.domain;\n\n/**\n * Created by Q on 2022/2/26.\n * House对象表示一个房屋信息\n */\npublic class House {\n    //编号  房主  电话  地址  月租  状态（未出租/已出租）\n    private int id;\n    private String name;\n    private String phone;\n    private String address;\n    private int rent;\n    private  String state;\n\n    public House(int id, String name, String phone, String address, int rent, String state) {\n        this.id = id;\n        this.name = name;\n        this.phone = phone;\n        this.address = address;\n        this.rent = rent;\n        this.state = state;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPhone() {\n        return phone;\n    }\n\n    public void setPhone(String phone) {\n        this.phone = phone;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public int getRent() {\n        return rent;\n    }\n\n    public void setRent(int rent) {\n        this.rent = rent;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n    //为了方便输出对象信息。实现toString方法\n    @Override\n    public String toString() {\n        //改为想要的格式\n        // 编号  房主  电话  地址  月租  状态（未出租/已出租）\n        return  id +\n                \"\\t\\t\" + name +\n                \"\\t\" + phone +\n                \"\\t\\t\" + address +\n                \"\\t\\t\" + rent +\n                \"\\t\\t\" + state ;\n    }\n}\n```\n\n#### HouseView类 \n\nHouseView类用于显示界面\n\n```java \npackage com.coderq.houserent.view;\n\nimport com.coderq.houserent.domain.House;\nimport com.coderq.houserent.service.HouseService;\nimport com.coderq.houserent.utils.Utility;\n\n/**\n * Created by Q on 2022/2/26.\n * <p>\n * 1.显示界面\n * 2.接收用户的输入\n * 3.调用HouseService完成对房屋信息的各种操作\n */\npublic class HouseView {\n    private boolean loop = true;  //控制显示菜单\n    private char key = ' ';  //接收用户输入\n    private HouseService houseService = new HouseService(10); //设置数组大小为10\n\n    //根据修改房屋信息\n    public void updateHouse() {\n        System.out.println(\"=================修改房屋==================\");\n        System.out.print(\"请输入待修改房屋id(-1退出查找)\");\n        int updateId = Utility.readInt();\n        if (updateId == -1) {\n            System.out.println(\"=================已退出修改房屋==================\");\n            return;\n        }\n\n        //注意点：\n        //返回的是引用类型[即就是数组的元素]，都指向同一对象\n        //因此用House.SetXX()方法会修改HouseService中的houses数组中的元素\n        House house = houseService.findById(updateId);\n        if (house == null) {\n            System.out.println(\"==============修改的房屋信息不存在===============\");\n            return;\n        }\n        System.out.println(\"姓名（\" + house.getName() + \"）：\");\n        String name = Utility.readString(8, \"\");\n        if ( !\"\".equals(name) ) { //修改\n            house.setName(name);\n        }\n        System.out.println(\"电话（\" + house.getPhone() + \"）：\");\n        String phone = Utility.readString(12,\"\");\n        if ( !\"\".equals(phone) ) { //修改\n            house.setPhone(phone);\n        }\n        System.out.println(\"地址（\" + house.getAddress() + \"）：\");\n        String address = Utility.readString(16,\"\");\n        if ( !\"\".equals(address) ) { //修改\n            house.setAddress(address);\n        }\n        System.out.println(\"月租（\" + house.getRent() + \"）：\");\n        int rent = Utility.readInt(-1);\n        if ( rent != -1 ) { //修改\n            house.setRent(rent);\n        }\n        System.out.println(\"状态（\" + house.getState() + \"）：\");\n        String state = Utility.readString(3,\"\");\n        if ( !\"\".equals(state) ) { //修改\n            house.setState(state);\n        }\n        System.out.println(\"=================修改房屋成功==================\");\n    }\n\n    //根据id查找房屋信息\n    //编写findHouse()接收输入的id，调用Service的find方法\n    public void findHouse() {\n        System.out.println(\"=================查找房屋==================\");\n        System.out.print(\"请输入待查找房屋id(-1退出查找)\");\n        int findId = Utility.readInt();\n        if (findId == -1) {\n            System.out.println(\"=================已退出删除房屋==================\");\n            return;\n        }\n\n        //执行查找\n        if (houseService.findById(findId) != null) {\n            House house = houseService.findById(findId);\n            System.out.println(house);\n            System.out.println(\"=================查找房屋成功==================\");\n        } else {\n            System.out.println(\"=================查找房屋失败==================\");\n        }\n    }\n\n    //退出\n    public void exit() {\n        char c = Utility.readConfirmSelection();\n        if (c == 'Y') {\n            loop = false;\n        }\n    }\n\n    //删除房屋信息\n    //编写delHouse()接收输入的id，调用Service的 del方法\n    public void delHouse() {\n        System.out.println(\"=================删除房屋==================\");\n        System.out.print(\"请输入待删除房屋id(-1退出删除)\");\n        int delId = Utility.readInt();\n        if (delId == -1) {\n            System.out.println(\"=================已退出删除房屋==================\");\n            return;\n        }\n        //该方法本身有循环，必须输出Y/N\n        char choice = Utility.readConfirmSelection();\n        if (choice == 'Y') {\n            //执行删除\n            if (houseService.del(delId)) {\n                System.out.println(\"=================删除房屋成功==================\");\n            } else {\n                System.out.println(\"=================删除房屋失败==================\");\n            }\n\n        } else {\n            System.out.println(\"=================退出删除房屋==================\");\n        }\n    }\n\n    //添加房屋\n    //编写addhouse()接收数据，创建House对象，调用add()方法\n    public void addHouse() {\n        System.out.println(\"=================添加房屋==================\");\n        System.out.println(\"姓名：\");\n        String name = Utility.readString(8);\n        System.out.println(\"电话：\");\n        String phone = Utility.readString(12);\n        System.out.println(\"地址：\");\n        String address = Utility.readString(16);\n        System.out.println(\"月租：\");\n        int rent = Utility.readInt();\n        System.out.println(\"状态：\");\n        String state = Utility.readString(3);\n        //创建一个新的House对象，注意id是系统分配，用户不能添加\n        House newHouse = new House(0, name, phone, address, rent, state);\n        if (houseService.add(newHouse)) {\n            System.out.println(\"=================添加房屋成功==================\");\n        } else {\n            System.out.println(\"=================添加房屋失败==================\");\n        }\n    }\n\n    //显示房屋列表\n    public void listHouses() {\n        System.out.println(\"=================房屋列表==================\");\n        System.out.println(\"编号\\t\\t房主\\t\\t电话\\t\\t地址\\t\\t月租\\t\\t状态（未出租/已出租）\");\n        House[] houses = houseService.list(); //获取到所有房屋信息\n        for (int i = 0; i < houses.length; i++) {\n            if (houses[i] == null) {\n                break;\n            }\n            System.out.println(houses[i]);\n        }\n        System.out.println(\"=============房屋列表显示完毕==============\\n\");\n    }\n\n    //显示主菜单\n    public void mainMenu() {\n        do {\n            System.out.println(\"=============房屋租赁系统菜单==============\");\n            System.out.println(\"\\t\\t\\t1 新 增 房 源\");\n            System.out.println(\"\\t\\t\\t2 查 找 房 源\");\n            System.out.println(\"\\t\\t\\t3 删 除 房 源 信 息\");\n            System.out.println(\"\\t\\t\\t4 修 改 房 源 信 息\");\n            System.out.println(\"\\t\\t\\t5 房 屋 列 表\");\n            System.out.println(\"\\t\\t\\t6 退       出\");\n            System.out.println(\"请输入你的选择（1-6）\");\n            key = Utility.readChar();\n            switch (key) {\n                case '1':\n                    //System.out.println(\"新增\");\n                    addHouse();\n                    break;\n                case '2':\n                    //System.out.println(\"查找 \");\n                    findHouse();\n                    break;\n                case '3':\n                    //System.out.println(\"删除\");\n                    delHouse();\n                    break;\n                case '4':\n                    //System.out.println(\"修改\");\n                    updateHouse();\n                    break;\n                case '5':\n                    //System.out.println(\"房屋列表\");\n                    listHouses();\n                    break;\n                case '6':\n                    //System.out.println(\"退出\");\n                    exit();\n                    break;\n            }\n        } while (loop);\n    }\n}\n```\n\n#### HouseService类\n\nHouseService类用于给HouseView类传输相应的数据，如HouseView中有listHouse()方法，而HouseService中的list()方法用于给listHouse()方法传送房屋列表的信息。\n\n```java\npackage com.coderq.houserent.service;\n\nimport com.coderq.houserent.domain.House;\n\n/**\n * Created by Q on 2022/2/26.\n *\n * 业务层\n * 定义House[],保存House对象\n * 1.响应HouseView的调用\n * 2.完成对房屋信息的增删改查（crud）\n */\npublic class HouseService {\n    private House[] houses; //保存House对象\n    private int houseNums = 1; //记录多少个房屋信息\n    private int idCounter = 1; //记录当前Id增加到哪\n    //构造器初始化数据\n    public HouseService(int size) {\n        //new houses\n        houses = new House[size]; //创建HouseService对象时，指定数组大小\n        //伪造数据，配合测试\n        houses[0] = new House(1,\"coderq\",\"188\",\"安徽\",500,\"未出租\");\n    }\n\n    //修改房屋信息\n\n\n    //find方法,查找房屋信息,返回House对象或null\n    public House findById(int findId){\n        //先找到要查找的房屋对应的下标\n        for (int i = 0; i < houseNums; i++) {\n            if (findId == houses[i].getId() ){ //要查找的房屋（id）\n                return houses[i];\n            }\n        }\n        return null;\n    }\n\n    //del方法,删除房屋信息\n    public boolean del(int delId){\n        //先找到要删除的房屋对应的下标\n        int index = -1;\n        for (int i = 0; i < houseNums; i++) {\n            if (delId == houses[i].getId() ){ //要删除的房屋（id），是数组下标为i的元素\n                index = i;\n            }\n        }\n        if (index == -1){\n            //System.out.println(\"该房屋不存在\");\n            return false;\n        }\n        //如果找到,有点难度\n        for (int i = index; i < houseNums - 1 ; i++) {\n            houses[i] = houses[i+1];\n        }\n        houses[--houseNums] = null; //当前房屋信息最后一个 设置null\n        return true;\n    }\n\n    //add方法，添加新对象，返回boolean\n    public boolean add(House newHouse){\n        //判断是否还可以添加，数组满如何扩容？\n        if(houseNums == houses.length){\n            System.out.println(\"数组已满，无法添加\");\n            return false;\n        }\n        //newHouse对象加入到数组\n        houses[houseNums++] = newHouse;\n        //id自增机制\n        newHouse.setId(++idCounter);\n        return true;\n    }\n\n    //list方法，返回houses\n    public House[] list(){\n        return houses;\n    }\n}\n```\n\n#### HouseRentApp类\n\n主程序启动类\n\n```java\npackage com.coderq.houserent;\n\nimport com.coderq.houserent.view.HouseView;\n\n/**\n * Created by Q on 2022/2/26.\n */\npublic class HouseRentApp {\n    public static void main(String[] args) {\n        //创建HouseView对象，显示主菜单，程序入口\n        new HouseView().mainMenu();\n        System.out.println(\"=============你退出了系统==============\");\n\n    }\n}\n```\n\n## 结束语\n\n以上就是房屋出租系统的全部内容, 本项目也算是Java基础的一个小案例, 增删两个功能看着老韩的视频逐步写下来的，查改是自己尝试了去实现一下，然后发现自己实现确实思路上还有点乱，磕磕绊绊也算是最终实现了。本项目也算简单有了一点增删改查的小锻炼，希望接下来的岁月里继续脚踏实地，努力努力再努力。","source":"_posts/房屋出租系统【韩顺平 Java 基础案例复现】.md","raw":"---\ntitle: 房屋出租系统【韩顺平 Java 基础案例复现】\ndate: 2022-03-24 15:31:36\ncategories: 项目梳理\ntags:\n- Java\n- 韩顺平\n- 项目实战\nsticky: \npic:\ncomments: true\ntoc: true\nexpire: true\nonly:\n- home\n- category\n- tag\n---\n\n本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。<!-- more -->\n\n# 房屋出租系统【韩顺平 Java 基础案例复现】\n\n## 前言\n本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。\n\n## 需求\n实现房屋出租系统，基本功能包括对房屋信息的增删改查（存储用数组实现）。\n\n## 项目设计-程序框架图\n![2291368-20220227144414328-1953458094](房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227144414328-1953458094.png)\n\n## 项目代码实现\n\n### 文件夹结构\n\n![2291368-20220227160905796-630586732](房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227160905796-630586732.png)\n\n\n### 工具类准备\n\n这里的 Utility 类是韩顺平Utility工具类(java房屋出租项目)，创建工具类文件复制到自己的项目里即可。\n\n```java\npackage com.codedog.houserent.utils;    //改为自己的目录\n\n\n/**\n\t工具类的作用:\n\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。\n*/\n\nimport java.util.*;\n\npublic class Utility {\n\t//静态属性。。。\n    private static Scanner scanner = new Scanner(System.in);\n\n    \n    /**\n     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围\n     * @return 1——5\n     */\n\tpublic static char readMenuSelection() {\n        char c;\n        for (; ; ) {\n            String str = readKeyBoard(1, false);//包含一个字符的字符串\n            c = str.charAt(0);//将字符串转换成字符char类型\n            if (c != '1' && c != '2' && \n                c != '3' && c != '4' && c != '5') {\n                System.out.print(\"选择错误，请重新输入：\");\n            } else break;\n        }\n        return c;\n    }\n\n\t/**\n\t * 功能：读取键盘输入的一个字符\n\t * @return 一个字符\n\t */\n    public static char readChar() {\n        String str = readKeyBoard(1, false);//就是一个字符\n        return str.charAt(0);\n    }\n    /**\n     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符\n     * @param defaultValue 指定的默认值\n     * @return 默认值或输入的字符\n     */\n    \n    public static char readChar(char defaultValue) {\n        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符\n        return (str.length() == 0) ? defaultValue : str.charAt(0);\n    }\n\t\n    /**\n     * 功能：读取键盘输入的整型，长度小于10位\n     * @return 整数\n     */\n    public static int readInt() {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, false);//一个整数，长度<=10位\n            try {\n                n = Integer.parseInt(str);//将字符串转换成整数\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n    /**\n     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数\n     * @param defaultValue 指定的默认值\n     * @return 整数或默认值\n     */\n    public static int readInt(int defaultValue) {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, true);\n            if (str.equals(\"\")) {\n                return defaultValue;\n            }\n\t\t\t\n\t\t\t//异常处理...\n            try {\n                n = Integer.parseInt(str);\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串\n     * @param limit 限制的长度\n     * @return 指定长度的字符串\n     */\n\n    public static String readString(int limit) {\n        return readKeyBoard(limit, false);\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串\n     * @param limit 限制的长度\n     * @param defaultValue 指定的默认值\n     * @return 指定长度的字符串\n     */\n\t\n    public static String readString(int limit, String defaultValue) {\n        String str = readKeyBoard(limit, true);\n        return str.equals(\"\")? defaultValue : str;\n    }\n\n\n\t/**\n\t * 功能：读取键盘输入的确认选项，Y或N\n\t * 将小的功能，封装到一个方法中.\n\t * @return Y或N\n\t */\n    public static char readConfirmSelection() {\n        System.out.println(\"请输入你的选择(Y/N): 请小心选择\");\n        char c;\n        for (; ; ) {//无限循环\n        \t//在这里，将接受到字符，转成了大写字母\n        \t//y => Y n=>N\n            String str = readKeyBoard(1, false).toUpperCase();\n            c = str.charAt(0);\n            if (c == 'Y' || c == 'N') {\n                break;\n            } else {\n                System.out.print(\"选择错误，请重新输入：\");\n            }\n        }\n        return c;\n    }\n\n    /**\n     * 功能： 读取一个字符串\n     * @param limit 读取的长度\n     * @param blankReturn 如果为true ,表示 可以读空字符串。 \n     * \t\t\t\t\t  如果为false表示 不能读空字符串。\n     * \t\t\t\n\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。\n     * @return\n     */\n    private static String readKeyBoard(int limit, boolean blankReturn) {\n        \n\t\t//定义了字符串\n\t\tString line = \"\";\n\n\t\t//scanner.hasNextLine() 判断有没有下一行\n        while (scanner.hasNextLine()) {\n            line = scanner.nextLine();//读取这一行\n           \n\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车\n\t\t\tif (line.length() == 0) {\n                if (blankReturn) return line;//如果blankReturn=true,可以返回空串\n                else continue; //如果blankReturn=false,不接受空串，必须输入内容\n            }\n\n\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  \n\t\t\t//如果用户如的内容 >0 <= limit ,我就接受\n            if (line.length() < 1 || line.length() > limit) {\n                System.out.print(\"输入长度（不能大于\" + limit + \"）错误，请重新输入：\");\n                continue;\n            }\n            break;\n        }\n\n        return line;\n    }\n}\n```\n\n### 具体功能类\n\n#### House类\n\nHouse实体类的属性有编号，房主， 电话，地址，月租，状态。House的对象表示一个房屋信息。其中构造器、Get和Set方法、toSring方法快捷键Alt+Insert生成即可，toSring略微改成自己想要的格式。\n\n```java\npackage com.coderq.houserent.domain;\n\n/**\n * Created by Q on 2022/2/26.\n * House对象表示一个房屋信息\n */\npublic class House {\n    //编号  房主  电话  地址  月租  状态（未出租/已出租）\n    private int id;\n    private String name;\n    private String phone;\n    private String address;\n    private int rent;\n    private  String state;\n\n    public House(int id, String name, String phone, String address, int rent, String state) {\n        this.id = id;\n        this.name = name;\n        this.phone = phone;\n        this.address = address;\n        this.rent = rent;\n        this.state = state;\n    }\n\n    public int getId() {\n        return id;\n    }\n\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPhone() {\n        return phone;\n    }\n\n    public void setPhone(String phone) {\n        this.phone = phone;\n    }\n\n    public String getAddress() {\n        return address;\n    }\n\n    public void setAddress(String address) {\n        this.address = address;\n    }\n\n    public int getRent() {\n        return rent;\n    }\n\n    public void setRent(int rent) {\n        this.rent = rent;\n    }\n\n    public String getState() {\n        return state;\n    }\n\n    public void setState(String state) {\n        this.state = state;\n    }\n\n    //为了方便输出对象信息。实现toString方法\n    @Override\n    public String toString() {\n        //改为想要的格式\n        // 编号  房主  电话  地址  月租  状态（未出租/已出租）\n        return  id +\n                \"\\t\\t\" + name +\n                \"\\t\" + phone +\n                \"\\t\\t\" + address +\n                \"\\t\\t\" + rent +\n                \"\\t\\t\" + state ;\n    }\n}\n```\n\n#### HouseView类 \n\nHouseView类用于显示界面\n\n```java \npackage com.coderq.houserent.view;\n\nimport com.coderq.houserent.domain.House;\nimport com.coderq.houserent.service.HouseService;\nimport com.coderq.houserent.utils.Utility;\n\n/**\n * Created by Q on 2022/2/26.\n * <p>\n * 1.显示界面\n * 2.接收用户的输入\n * 3.调用HouseService完成对房屋信息的各种操作\n */\npublic class HouseView {\n    private boolean loop = true;  //控制显示菜单\n    private char key = ' ';  //接收用户输入\n    private HouseService houseService = new HouseService(10); //设置数组大小为10\n\n    //根据修改房屋信息\n    public void updateHouse() {\n        System.out.println(\"=================修改房屋==================\");\n        System.out.print(\"请输入待修改房屋id(-1退出查找)\");\n        int updateId = Utility.readInt();\n        if (updateId == -1) {\n            System.out.println(\"=================已退出修改房屋==================\");\n            return;\n        }\n\n        //注意点：\n        //返回的是引用类型[即就是数组的元素]，都指向同一对象\n        //因此用House.SetXX()方法会修改HouseService中的houses数组中的元素\n        House house = houseService.findById(updateId);\n        if (house == null) {\n            System.out.println(\"==============修改的房屋信息不存在===============\");\n            return;\n        }\n        System.out.println(\"姓名（\" + house.getName() + \"）：\");\n        String name = Utility.readString(8, \"\");\n        if ( !\"\".equals(name) ) { //修改\n            house.setName(name);\n        }\n        System.out.println(\"电话（\" + house.getPhone() + \"）：\");\n        String phone = Utility.readString(12,\"\");\n        if ( !\"\".equals(phone) ) { //修改\n            house.setPhone(phone);\n        }\n        System.out.println(\"地址（\" + house.getAddress() + \"）：\");\n        String address = Utility.readString(16,\"\");\n        if ( !\"\".equals(address) ) { //修改\n            house.setAddress(address);\n        }\n        System.out.println(\"月租（\" + house.getRent() + \"）：\");\n        int rent = Utility.readInt(-1);\n        if ( rent != -1 ) { //修改\n            house.setRent(rent);\n        }\n        System.out.println(\"状态（\" + house.getState() + \"）：\");\n        String state = Utility.readString(3,\"\");\n        if ( !\"\".equals(state) ) { //修改\n            house.setState(state);\n        }\n        System.out.println(\"=================修改房屋成功==================\");\n    }\n\n    //根据id查找房屋信息\n    //编写findHouse()接收输入的id，调用Service的find方法\n    public void findHouse() {\n        System.out.println(\"=================查找房屋==================\");\n        System.out.print(\"请输入待查找房屋id(-1退出查找)\");\n        int findId = Utility.readInt();\n        if (findId == -1) {\n            System.out.println(\"=================已退出删除房屋==================\");\n            return;\n        }\n\n        //执行查找\n        if (houseService.findById(findId) != null) {\n            House house = houseService.findById(findId);\n            System.out.println(house);\n            System.out.println(\"=================查找房屋成功==================\");\n        } else {\n            System.out.println(\"=================查找房屋失败==================\");\n        }\n    }\n\n    //退出\n    public void exit() {\n        char c = Utility.readConfirmSelection();\n        if (c == 'Y') {\n            loop = false;\n        }\n    }\n\n    //删除房屋信息\n    //编写delHouse()接收输入的id，调用Service的 del方法\n    public void delHouse() {\n        System.out.println(\"=================删除房屋==================\");\n        System.out.print(\"请输入待删除房屋id(-1退出删除)\");\n        int delId = Utility.readInt();\n        if (delId == -1) {\n            System.out.println(\"=================已退出删除房屋==================\");\n            return;\n        }\n        //该方法本身有循环，必须输出Y/N\n        char choice = Utility.readConfirmSelection();\n        if (choice == 'Y') {\n            //执行删除\n            if (houseService.del(delId)) {\n                System.out.println(\"=================删除房屋成功==================\");\n            } else {\n                System.out.println(\"=================删除房屋失败==================\");\n            }\n\n        } else {\n            System.out.println(\"=================退出删除房屋==================\");\n        }\n    }\n\n    //添加房屋\n    //编写addhouse()接收数据，创建House对象，调用add()方法\n    public void addHouse() {\n        System.out.println(\"=================添加房屋==================\");\n        System.out.println(\"姓名：\");\n        String name = Utility.readString(8);\n        System.out.println(\"电话：\");\n        String phone = Utility.readString(12);\n        System.out.println(\"地址：\");\n        String address = Utility.readString(16);\n        System.out.println(\"月租：\");\n        int rent = Utility.readInt();\n        System.out.println(\"状态：\");\n        String state = Utility.readString(3);\n        //创建一个新的House对象，注意id是系统分配，用户不能添加\n        House newHouse = new House(0, name, phone, address, rent, state);\n        if (houseService.add(newHouse)) {\n            System.out.println(\"=================添加房屋成功==================\");\n        } else {\n            System.out.println(\"=================添加房屋失败==================\");\n        }\n    }\n\n    //显示房屋列表\n    public void listHouses() {\n        System.out.println(\"=================房屋列表==================\");\n        System.out.println(\"编号\\t\\t房主\\t\\t电话\\t\\t地址\\t\\t月租\\t\\t状态（未出租/已出租）\");\n        House[] houses = houseService.list(); //获取到所有房屋信息\n        for (int i = 0; i < houses.length; i++) {\n            if (houses[i] == null) {\n                break;\n            }\n            System.out.println(houses[i]);\n        }\n        System.out.println(\"=============房屋列表显示完毕==============\\n\");\n    }\n\n    //显示主菜单\n    public void mainMenu() {\n        do {\n            System.out.println(\"=============房屋租赁系统菜单==============\");\n            System.out.println(\"\\t\\t\\t1 新 增 房 源\");\n            System.out.println(\"\\t\\t\\t2 查 找 房 源\");\n            System.out.println(\"\\t\\t\\t3 删 除 房 源 信 息\");\n            System.out.println(\"\\t\\t\\t4 修 改 房 源 信 息\");\n            System.out.println(\"\\t\\t\\t5 房 屋 列 表\");\n            System.out.println(\"\\t\\t\\t6 退       出\");\n            System.out.println(\"请输入你的选择（1-6）\");\n            key = Utility.readChar();\n            switch (key) {\n                case '1':\n                    //System.out.println(\"新增\");\n                    addHouse();\n                    break;\n                case '2':\n                    //System.out.println(\"查找 \");\n                    findHouse();\n                    break;\n                case '3':\n                    //System.out.println(\"删除\");\n                    delHouse();\n                    break;\n                case '4':\n                    //System.out.println(\"修改\");\n                    updateHouse();\n                    break;\n                case '5':\n                    //System.out.println(\"房屋列表\");\n                    listHouses();\n                    break;\n                case '6':\n                    //System.out.println(\"退出\");\n                    exit();\n                    break;\n            }\n        } while (loop);\n    }\n}\n```\n\n#### HouseService类\n\nHouseService类用于给HouseView类传输相应的数据，如HouseView中有listHouse()方法，而HouseService中的list()方法用于给listHouse()方法传送房屋列表的信息。\n\n```java\npackage com.coderq.houserent.service;\n\nimport com.coderq.houserent.domain.House;\n\n/**\n * Created by Q on 2022/2/26.\n *\n * 业务层\n * 定义House[],保存House对象\n * 1.响应HouseView的调用\n * 2.完成对房屋信息的增删改查（crud）\n */\npublic class HouseService {\n    private House[] houses; //保存House对象\n    private int houseNums = 1; //记录多少个房屋信息\n    private int idCounter = 1; //记录当前Id增加到哪\n    //构造器初始化数据\n    public HouseService(int size) {\n        //new houses\n        houses = new House[size]; //创建HouseService对象时，指定数组大小\n        //伪造数据，配合测试\n        houses[0] = new House(1,\"coderq\",\"188\",\"安徽\",500,\"未出租\");\n    }\n\n    //修改房屋信息\n\n\n    //find方法,查找房屋信息,返回House对象或null\n    public House findById(int findId){\n        //先找到要查找的房屋对应的下标\n        for (int i = 0; i < houseNums; i++) {\n            if (findId == houses[i].getId() ){ //要查找的房屋（id）\n                return houses[i];\n            }\n        }\n        return null;\n    }\n\n    //del方法,删除房屋信息\n    public boolean del(int delId){\n        //先找到要删除的房屋对应的下标\n        int index = -1;\n        for (int i = 0; i < houseNums; i++) {\n            if (delId == houses[i].getId() ){ //要删除的房屋（id），是数组下标为i的元素\n                index = i;\n            }\n        }\n        if (index == -1){\n            //System.out.println(\"该房屋不存在\");\n            return false;\n        }\n        //如果找到,有点难度\n        for (int i = index; i < houseNums - 1 ; i++) {\n            houses[i] = houses[i+1];\n        }\n        houses[--houseNums] = null; //当前房屋信息最后一个 设置null\n        return true;\n    }\n\n    //add方法，添加新对象，返回boolean\n    public boolean add(House newHouse){\n        //判断是否还可以添加，数组满如何扩容？\n        if(houseNums == houses.length){\n            System.out.println(\"数组已满，无法添加\");\n            return false;\n        }\n        //newHouse对象加入到数组\n        houses[houseNums++] = newHouse;\n        //id自增机制\n        newHouse.setId(++idCounter);\n        return true;\n    }\n\n    //list方法，返回houses\n    public House[] list(){\n        return houses;\n    }\n}\n```\n\n#### HouseRentApp类\n\n主程序启动类\n\n```java\npackage com.coderq.houserent;\n\nimport com.coderq.houserent.view.HouseView;\n\n/**\n * Created by Q on 2022/2/26.\n */\npublic class HouseRentApp {\n    public static void main(String[] args) {\n        //创建HouseView对象，显示主菜单，程序入口\n        new HouseView().mainMenu();\n        System.out.println(\"=============你退出了系统==============\");\n\n    }\n}\n```\n\n## 结束语\n\n以上就是房屋出租系统的全部内容, 本项目也算是Java基础的一个小案例, 增删两个功能看着老韩的视频逐步写下来的，查改是自己尝试了去实现一下，然后发现自己实现确实思路上还有点乱，磕磕绊绊也算是最终实现了。本项目也算简单有了一点增删改查的小锻炼，希望接下来的岁月里继续脚踏实地，努力努力再努力。","slug":"房屋出租系统【韩顺平 Java 基础案例复现】","published":1,"updated":"2022-12-08T02:27:26.094Z","layout":"post","photos":[],"link":"","_id":"clbexyfu2003dsw6x6ioc8ktq","content":"<p>本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。<span id=\"more\"></span></p>\n<h1 id=\"房屋出租系统【韩顺平-Java-基础案例复现】\"><a href=\"#房屋出租系统【韩顺平-Java-基础案例复现】\" class=\"headerlink\" title=\"房屋出租系统【韩顺平 Java 基础案例复现】\"></a>房屋出租系统【韩顺平 Java 基础案例复现】</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>实现房屋出租系统，基本功能包括对房屋信息的增删改查（存储用数组实现）。</p>\n<h2 id=\"项目设计-程序框架图\"><a href=\"#项目设计-程序框架图\" class=\"headerlink\" title=\"项目设计-程序框架图\"></a>项目设计-程序框架图</h2><img src=\"/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/2291368-20220227144414328-1953458094.png\" class=\"\" title=\"2291368-20220227144414328-1953458094\">\n\n<h2 id=\"项目代码实现\"><a href=\"#项目代码实现\" class=\"headerlink\" title=\"项目代码实现\"></a>项目代码实现</h2><h3 id=\"文件夹结构\"><a href=\"#文件夹结构\" class=\"headerlink\" title=\"文件夹结构\"></a>文件夹结构</h3><img src=\"/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/2291368-20220227160905796-630586732.png\" class=\"\" title=\"2291368-20220227160905796-630586732\">\n\n\n<h3 id=\"工具类准备\"><a href=\"#工具类准备\" class=\"headerlink\" title=\"工具类准备\"></a>工具类准备</h3><p>这里的 Utility 类是韩顺平Utility工具类(java房屋出租项目)，创建工具类文件复制到自己的项目里即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.codedog.houserent.utils;    <span class=\"comment\">//改为自己的目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t工具类的作用:</span></span><br><span class=\"line\"><span class=\"comment\">\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Utility</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//静态属性。。。</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 1——5</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readMenuSelection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> c;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">false</span>);<span class=\"comment\">//包含一个字符的字符串</span></span><br><span class=\"line\">            c = str.charAt(<span class=\"number\">0</span>);<span class=\"comment\">//将字符串转换成字符char类型</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c != <span class=\"string\">&#x27;1&#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;2&#x27;</span> &amp;&amp; </span><br><span class=\"line\">                c != <span class=\"string\">&#x27;3&#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;4&#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;5&#x27;</span>) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 功能：读取键盘输入的一个字符</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 一个字符</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readChar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">false</span>);<span class=\"comment\">//就是一个字符</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> defaultValue 指定的默认值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 默认值或输入的字符</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readChar</span><span class=\"params\">(<span class=\"type\">char</span> defaultValue)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">true</span>);<span class=\"comment\">//要么是空字符串，要么是一个字符</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (str.length() == <span class=\"number\">0</span>) ? defaultValue : str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的整型，长度小于10位</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 整数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">readInt</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">10</span>, <span class=\"literal\">false</span>);<span class=\"comment\">//一个整数，长度&lt;=10位</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);<span class=\"comment\">//将字符串转换成整数</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> defaultValue 指定的默认值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 整数或默认值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">readInt</span><span class=\"params\">(<span class=\"type\">int</span> defaultValue)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">10</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str.equals(<span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> defaultValue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//异常处理...</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的指定长度的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> limit 限制的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 指定长度的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">readString</span><span class=\"params\">(<span class=\"type\">int</span> limit)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> readKeyBoard(limit, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> limit 限制的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> defaultValue 指定的默认值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 指定长度的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">readString</span><span class=\"params\">(<span class=\"type\">int</span> limit, String defaultValue)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(limit, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str.equals(<span class=\"string\">&quot;&quot;</span>)? defaultValue : str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 功能：读取键盘输入的确认选项，Y或N</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将小的功能，封装到一个方法中.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> Y或N</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readConfirmSelection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入你的选择(Y/N): 请小心选择&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">char</span> c;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;<span class=\"comment\">//无限循环</span></span><br><span class=\"line\">        \t<span class=\"comment\">//在这里，将接受到字符，转成了大写字母</span></span><br><span class=\"line\">        \t<span class=\"comment\">//y =&gt; Y n=&gt;N</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">false</span>).toUpperCase();</span><br><span class=\"line\">            c = str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;Y&#x27;</span> || c == <span class=\"string\">&#x27;N&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能： 读取一个字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> limit 读取的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> blankReturn 如果为true ,表示 可以读空字符串。 </span></span><br><span class=\"line\"><span class=\"comment\">     * \t\t\t\t\t  如果为false表示 不能读空字符串。</span></span><br><span class=\"line\"><span class=\"comment\">     * \t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">readKeyBoard</span><span class=\"params\">(<span class=\"type\">int</span> limit, <span class=\"type\">boolean</span> blankReturn)</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//定义了字符串</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">line</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//scanner.hasNextLine() 判断有没有下一行</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (scanner.hasNextLine()) &#123;</span><br><span class=\"line\">            line = scanner.nextLine();<span class=\"comment\">//读取这一行</span></span><br><span class=\"line\">           </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果line.length=0, 即用户没有输入任何内容，直接回车</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (line.length() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (blankReturn) <span class=\"keyword\">return</span> line;<span class=\"comment\">//如果blankReturn=true,可以返回空串</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">continue</span>; <span class=\"comment\">//如果blankReturn=false,不接受空串，必须输入内容</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果用户输入的内容大于了 limit，就提示重写输入  </span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果用户如的内容 &gt;0 &lt;= limit ,我就接受</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (line.length() &lt; <span class=\"number\">1</span> || line.length() &gt; limit) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;输入长度（不能大于&quot;</span> + limit + <span class=\"string\">&quot;）错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> line;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"具体功能类\"><a href=\"#具体功能类\" class=\"headerlink\" title=\"具体功能类\"></a>具体功能类</h3><h4 id=\"House类\"><a href=\"#House类\" class=\"headerlink\" title=\"House类\"></a>House类</h4><p>House实体类的属性有编号，房主， 电话，地址，月租，状态。House的对象表示一个房屋信息。其中构造器、Get和Set方法、toSring方法快捷键Alt+Insert生成即可，toSring略微改成自己想要的格式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent.domain;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> * House对象表示一个房屋信息</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">House</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//编号  房主  电话  地址  月租  状态（未出租/已出租）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String address;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> rent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">House</span><span class=\"params\">(<span class=\"type\">int</span> id, String name, String phone, String address, <span class=\"type\">int</span> rent, String state)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.phone = phone;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.address = address;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rent = rent;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.state = state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPhone</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> phone;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPhone</span><span class=\"params\">(String phone)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.phone = phone;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getAddress</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> address;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAddress</span><span class=\"params\">(String address)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.address = address;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getRent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRent</span><span class=\"params\">(<span class=\"type\">int</span> rent)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rent = rent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getState</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setState</span><span class=\"params\">(String state)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.state = state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//为了方便输出对象信息。实现toString方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//改为想要的格式</span></span><br><span class=\"line\">        <span class=\"comment\">// 编号  房主  电话  地址  月租  状态（未出租/已出租）</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  id +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + name +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t&quot;</span> + phone +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + address +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + rent +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + state ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HouseView类\"><a href=\"#HouseView类\" class=\"headerlink\" title=\"HouseView类\"></a>HouseView类</h4><p>HouseView类用于显示界面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent.view;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.domain.House;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.service.HouseService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.utils.Utility;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 1.显示界面</span></span><br><span class=\"line\"><span class=\"comment\"> * 2.接收用户的输入</span></span><br><span class=\"line\"><span class=\"comment\"> * 3.调用HouseService完成对房屋信息的各种操作</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HouseView</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">loop</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;  <span class=\"comment\">//控制显示菜单</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">char</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27; &#x27;</span>;  <span class=\"comment\">//接收用户输入</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">HouseService</span> <span class=\"variable\">houseService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HouseService</span>(<span class=\"number\">10</span>); <span class=\"comment\">//设置数组大小为10</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据修改房屋信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================修改房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入待修改房屋id(-1退出查找)&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">updateId</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (updateId == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================已退出修改房屋==================&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//注意点：</span></span><br><span class=\"line\">        <span class=\"comment\">//返回的是引用类型[即就是数组的元素]，都指向同一对象</span></span><br><span class=\"line\">        <span class=\"comment\">//因此用House.SetXX()方法会修改HouseService中的houses数组中的元素</span></span><br><span class=\"line\">        <span class=\"type\">House</span> <span class=\"variable\">house</span> <span class=\"operator\">=</span> houseService.findById(updateId);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (house == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;==============修改的房屋信息不存在===============&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;姓名（&quot;</span> + house.getName() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">8</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(name) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setName(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;电话（&quot;</span> + house.getPhone() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">phone</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">12</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(phone) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setPhone(phone);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;地址（&quot;</span> + house.getAddress() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">address</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">16</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(address) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setAddress(address);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;月租（&quot;</span> + house.getRent() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rent</span> <span class=\"operator\">=</span> Utility.readInt(-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( rent != -<span class=\"number\">1</span> ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setRent(rent);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;状态（&quot;</span> + house.getState() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">3</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(state) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setState(state);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================修改房屋成功==================&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据id查找房屋信息</span></span><br><span class=\"line\">    <span class=\"comment\">//编写findHouse()接收输入的id，调用Service的find方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">findHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================查找房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入待查找房屋id(-1退出查找)&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">findId</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (findId == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================已退出删除房屋==================&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//执行查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (houseService.findById(findId) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">House</span> <span class=\"variable\">house</span> <span class=\"operator\">=</span> houseService.findById(findId);</span><br><span class=\"line\">            System.out.println(house);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================查找房屋成功==================&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================查找房屋失败==================&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//退出</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">exit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Utility.readConfirmSelection();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;Y&#x27;</span>) &#123;</span><br><span class=\"line\">            loop = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//删除房屋信息</span></span><br><span class=\"line\">    <span class=\"comment\">//编写delHouse()接收输入的id，调用Service的 del方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================删除房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入待删除房屋id(-1退出删除)&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">delId</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (delId == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================已退出删除房屋==================&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//该方法本身有循环，必须输出Y/N</span></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">choice</span> <span class=\"operator\">=</span> Utility.readConfirmSelection();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (choice == <span class=\"string\">&#x27;Y&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//执行删除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (houseService.del(delId)) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=================删除房屋成功==================&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=================删除房屋失败==================&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================退出删除房屋==================&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//添加房屋</span></span><br><span class=\"line\">    <span class=\"comment\">//编写addhouse()接收数据，创建House对象，调用add()方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================添加房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;姓名：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">8</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;电话：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">phone</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">12</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;地址：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">address</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">16</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;月租：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rent</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;状态：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//创建一个新的House对象，注意id是系统分配，用户不能添加</span></span><br><span class=\"line\">        <span class=\"type\">House</span> <span class=\"variable\">newHouse</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">House</span>(<span class=\"number\">0</span>, name, phone, address, rent, state);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (houseService.add(newHouse)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================添加房屋成功==================&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================添加房屋失败==================&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//显示房屋列表</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">listHouses</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================房屋列表==================&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;编号\\t\\t房主\\t\\t电话\\t\\t地址\\t\\t月租\\t\\t状态（未出租/已出租）&quot;</span>);</span><br><span class=\"line\">        House[] houses = houseService.list(); <span class=\"comment\">//获取到所有房屋信息</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; houses.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (houses[i] == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(houses[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=============房屋列表显示完毕==============\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//显示主菜单</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mainMenu</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=============房屋租赁系统菜单==============&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t1 新 增 房 源&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t2 查 找 房 源&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t3 删 除 房 源 信 息&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t4 修 改 房 源 信 息&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t5 房 屋 列 表&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t6 退       出&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入你的选择（1-6）&quot;</span>);</span><br><span class=\"line\">            key = Utility.readChar();</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;新增&quot;);</span></span><br><span class=\"line\">                    addHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;查找 &quot;);</span></span><br><span class=\"line\">                    findHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;删除&quot;);</span></span><br><span class=\"line\">                    delHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;修改&quot;);</span></span><br><span class=\"line\">                    updateHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;房屋列表&quot;);</span></span><br><span class=\"line\">                    listHouses();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;退出&quot;);</span></span><br><span class=\"line\">                    exit();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (loop);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HouseService类\"><a href=\"#HouseService类\" class=\"headerlink\" title=\"HouseService类\"></a>HouseService类</h4><p>HouseService类用于给HouseView类传输相应的数据，如HouseView中有listHouse()方法，而HouseService中的list()方法用于给listHouse()方法传送房屋列表的信息。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.domain.House;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 业务层</span></span><br><span class=\"line\"><span class=\"comment\"> * 定义House[],保存House对象</span></span><br><span class=\"line\"><span class=\"comment\"> * 1.响应HouseView的调用</span></span><br><span class=\"line\"><span class=\"comment\"> * 2.完成对房屋信息的增删改查（crud）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HouseService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> House[] houses; <span class=\"comment\">//保存House对象</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">houseNums</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"comment\">//记录多少个房屋信息</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">idCounter</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"comment\">//记录当前Id增加到哪</span></span><br><span class=\"line\">    <span class=\"comment\">//构造器初始化数据</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">HouseService</span><span class=\"params\">(<span class=\"type\">int</span> size)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//new houses</span></span><br><span class=\"line\">        houses = <span class=\"keyword\">new</span> <span class=\"title class_\">House</span>[size]; <span class=\"comment\">//创建HouseService对象时，指定数组大小</span></span><br><span class=\"line\">        <span class=\"comment\">//伪造数据，配合测试</span></span><br><span class=\"line\">        houses[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">House</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;coderq&quot;</span>,<span class=\"string\">&quot;188&quot;</span>,<span class=\"string\">&quot;安徽&quot;</span>,<span class=\"number\">500</span>,<span class=\"string\">&quot;未出租&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//修改房屋信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//find方法,查找房屋信息,返回House对象或null</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> House <span class=\"title function_\">findById</span><span class=\"params\">(<span class=\"type\">int</span> findId)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先找到要查找的房屋对应的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; houseNums; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (findId == houses[i].getId() )&#123; <span class=\"comment\">//要查找的房屋（id）</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> houses[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//del方法,删除房屋信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">del</span><span class=\"params\">(<span class=\"type\">int</span> delId)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先找到要删除的房屋对应的下标</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; houseNums; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (delId == houses[i].getId() )&#123; <span class=\"comment\">//要删除的房屋（id），是数组下标为i的元素</span></span><br><span class=\"line\">                index = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index == -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//System.out.println(&quot;该房屋不存在&quot;);</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果找到,有点难度</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> index; i &lt; houseNums - <span class=\"number\">1</span> ; i++) &#123;</span><br><span class=\"line\">            houses[i] = houses[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        houses[--houseNums] = <span class=\"literal\">null</span>; <span class=\"comment\">//当前房屋信息最后一个 设置null</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//add方法，添加新对象，返回boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">add</span><span class=\"params\">(House newHouse)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断是否还可以添加，数组满如何扩容？</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(houseNums == houses.length)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数组已满，无法添加&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//newHouse对象加入到数组</span></span><br><span class=\"line\">        houses[houseNums++] = newHouse;</span><br><span class=\"line\">        <span class=\"comment\">//id自增机制</span></span><br><span class=\"line\">        newHouse.setId(++idCounter);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//list方法，返回houses</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> House[] list()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> houses;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HouseRentApp类\"><a href=\"#HouseRentApp类\" class=\"headerlink\" title=\"HouseRentApp类\"></a>HouseRentApp类</h4><p>主程序启动类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.view.HouseView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HouseRentApp</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建HouseView对象，显示主菜单，程序入口</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">HouseView</span>().mainMenu();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=============你退出了系统==============&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>以上就是房屋出租系统的全部内容, 本项目也算是Java基础的一个小案例, 增删两个功能看着老韩的视频逐步写下来的，查改是自己尝试了去实现一下，然后发现自己实现确实思路上还有点乱，磕磕绊绊也算是最终实现了。本项目也算简单有了一点增删改查的小锻炼，希望接下来的岁月里继续脚踏实地，努力努力再努力。</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","excerpt":"<p>本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。","more":"</p>\n<h1 id=\"房屋出租系统【韩顺平-Java-基础案例复现】\"><a href=\"#房屋出租系统【韩顺平-Java-基础案例复现】\" class=\"headerlink\" title=\"房屋出租系统【韩顺平 Java 基础案例复现】\"></a>房屋出租系统【韩顺平 Java 基础案例复现】</h1><h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p>本项目是根据B站韩顺平【零基础快速 Java】课程进行的。项目的主要目的是学习巩固 Java 基础知识。</p>\n<h2 id=\"需求\"><a href=\"#需求\" class=\"headerlink\" title=\"需求\"></a>需求</h2><p>实现房屋出租系统，基本功能包括对房屋信息的增删改查（存储用数组实现）。</p>\n<h2 id=\"项目设计-程序框架图\"><a href=\"#项目设计-程序框架图\" class=\"headerlink\" title=\"项目设计-程序框架图\"></a>项目设计-程序框架图</h2><img src=\"/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/2291368-20220227144414328-1953458094.png\" class=\"\" title=\"2291368-20220227144414328-1953458094\">\n\n<h2 id=\"项目代码实现\"><a href=\"#项目代码实现\" class=\"headerlink\" title=\"项目代码实现\"></a>项目代码实现</h2><h3 id=\"文件夹结构\"><a href=\"#文件夹结构\" class=\"headerlink\" title=\"文件夹结构\"></a>文件夹结构</h3><img src=\"/2022/03/24/%E6%88%BF%E5%B1%8B%E5%87%BA%E7%A7%9F%E7%B3%BB%E7%BB%9F%E3%80%90%E9%9F%A9%E9%A1%BA%E5%B9%B3%20Java%20%E5%9F%BA%E7%A1%80%E6%A1%88%E4%BE%8B%E5%A4%8D%E7%8E%B0%E3%80%91/2291368-20220227160905796-630586732.png\" class=\"\" title=\"2291368-20220227160905796-630586732\">\n\n\n<h3 id=\"工具类准备\"><a href=\"#工具类准备\" class=\"headerlink\" title=\"工具类准备\"></a>工具类准备</h3><p>这里的 Utility 类是韩顺平Utility工具类(java房屋出租项目)，创建工具类文件复制到自己的项目里即可。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.codedog.houserent.utils;    <span class=\"comment\">//改为自己的目录</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t工具类的作用:</span></span><br><span class=\"line\"><span class=\"comment\">\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Utility</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//静态属性。。。</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 1——5</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readMenuSelection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> c;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">false</span>);<span class=\"comment\">//包含一个字符的字符串</span></span><br><span class=\"line\">            c = str.charAt(<span class=\"number\">0</span>);<span class=\"comment\">//将字符串转换成字符char类型</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c != <span class=\"string\">&#x27;1&#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;2&#x27;</span> &amp;&amp; </span><br><span class=\"line\">                c != <span class=\"string\">&#x27;3&#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;4&#x27;</span> &amp;&amp; c != <span class=\"string\">&#x27;5&#x27;</span>) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 功能：读取键盘输入的一个字符</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> 一个字符</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readChar</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">false</span>);<span class=\"comment\">//就是一个字符</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> defaultValue 指定的默认值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 默认值或输入的字符</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readChar</span><span class=\"params\">(<span class=\"type\">char</span> defaultValue)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">true</span>);<span class=\"comment\">//要么是空字符串，要么是一个字符</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (str.length() == <span class=\"number\">0</span>) ? defaultValue : str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的整型，长度小于10位</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 整数</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">readInt</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">10</span>, <span class=\"literal\">false</span>);<span class=\"comment\">//一个整数，长度&lt;=10位</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);<span class=\"comment\">//将字符串转换成整数</span></span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> defaultValue 指定的默认值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 整数或默认值</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">int</span> <span class=\"title function_\">readInt</span><span class=\"params\">(<span class=\"type\">int</span> defaultValue)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">int</span> n;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">10</span>, <span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (str.equals(<span class=\"string\">&quot;&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">return</span> defaultValue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t<span class=\"comment\">//异常处理...</span></span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;数字输入错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的指定长度的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> limit 限制的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 指定长度的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">readString</span><span class=\"params\">(<span class=\"type\">int</span> limit)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> readKeyBoard(limit, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> limit 限制的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> defaultValue 指定的默认值</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span> 指定长度的字符串</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">readString</span><span class=\"params\">(<span class=\"type\">int</span> limit, String defaultValue)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(limit, <span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> str.equals(<span class=\"string\">&quot;&quot;</span>)? defaultValue : str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">\t * 功能：读取键盘输入的确认选项，Y或N</span></span><br><span class=\"line\"><span class=\"comment\">\t * 将小的功能，封装到一个方法中.</span></span><br><span class=\"line\"><span class=\"comment\">\t * <span class=\"doctag\">@return</span> Y或N</span></span><br><span class=\"line\"><span class=\"comment\">\t */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"type\">char</span> <span class=\"title function_\">readConfirmSelection</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请输入你的选择(Y/N): 请小心选择&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">char</span> c;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (; ; ) &#123;<span class=\"comment\">//无限循环</span></span><br><span class=\"line\">        \t<span class=\"comment\">//在这里，将接受到字符，转成了大写字母</span></span><br><span class=\"line\">        \t<span class=\"comment\">//y =&gt; Y n=&gt;N</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">str</span> <span class=\"operator\">=</span> readKeyBoard(<span class=\"number\">1</span>, <span class=\"literal\">false</span>).toUpperCase();</span><br><span class=\"line\">            c = str.charAt(<span class=\"number\">0</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;Y&#x27;</span> || c == <span class=\"string\">&#x27;N&#x27;</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;选择错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 功能： 读取一个字符串</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> limit 读取的长度</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> blankReturn 如果为true ,表示 可以读空字符串。 </span></span><br><span class=\"line\"><span class=\"comment\">     * \t\t\t\t\t  如果为false表示 不能读空字符串。</span></span><br><span class=\"line\"><span class=\"comment\">     * \t\t\t</span></span><br><span class=\"line\"><span class=\"comment\">\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@return</span></span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> String <span class=\"title function_\">readKeyBoard</span><span class=\"params\">(<span class=\"type\">int</span> limit, <span class=\"type\">boolean</span> blankReturn)</span> &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t<span class=\"comment\">//定义了字符串</span></span><br><span class=\"line\">\t\t<span class=\"type\">String</span> <span class=\"variable\">line</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t<span class=\"comment\">//scanner.hasNextLine() 判断有没有下一行</span></span><br><span class=\"line\">        <span class=\"keyword\">while</span> (scanner.hasNextLine()) &#123;</span><br><span class=\"line\">            line = scanner.nextLine();<span class=\"comment\">//读取这一行</span></span><br><span class=\"line\">           </span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果line.length=0, 即用户没有输入任何内容，直接回车</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">if</span> (line.length() == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (blankReturn) <span class=\"keyword\">return</span> line;<span class=\"comment\">//如果blankReturn=true,可以返回空串</span></span><br><span class=\"line\">                <span class=\"keyword\">else</span> <span class=\"keyword\">continue</span>; <span class=\"comment\">//如果blankReturn=false,不接受空串，必须输入内容</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果用户输入的内容大于了 limit，就提示重写输入  </span></span><br><span class=\"line\">\t\t\t<span class=\"comment\">//如果用户如的内容 &gt;0 &lt;= limit ,我就接受</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (line.length() &lt; <span class=\"number\">1</span> || line.length() &gt; limit) &#123;</span><br><span class=\"line\">                System.out.print(<span class=\"string\">&quot;输入长度（不能大于&quot;</span> + limit + <span class=\"string\">&quot;）错误，请重新输入：&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">continue</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> line;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"具体功能类\"><a href=\"#具体功能类\" class=\"headerlink\" title=\"具体功能类\"></a>具体功能类</h3><h4 id=\"House类\"><a href=\"#House类\" class=\"headerlink\" title=\"House类\"></a>House类</h4><p>House实体类的属性有编号，房主， 电话，地址，月租，状态。House的对象表示一个房屋信息。其中构造器、Get和Set方法、toSring方法快捷键Alt+Insert生成即可，toSring略微改成自己想要的格式。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent.domain;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> * House对象表示一个房屋信息</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">House</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//编号  房主  电话  地址  月租  状态（未出租/已出租）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> id;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String phone;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String address;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> rent;</span><br><span class=\"line\">    <span class=\"keyword\">private</span>  String state;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">House</span><span class=\"params\">(<span class=\"type\">int</span> id, String name, String phone, String address, <span class=\"type\">int</span> rent, String state)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.phone = phone;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.address = address;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rent = rent;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.state = state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getId</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setId</span><span class=\"params\">(<span class=\"type\">int</span> id)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setName</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getPhone</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> phone;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setPhone</span><span class=\"params\">(String phone)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.phone = phone;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getAddress</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> address;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setAddress</span><span class=\"params\">(String address)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.address = address;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">getRent</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> rent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setRent</span><span class=\"params\">(<span class=\"type\">int</span> rent)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.rent = rent;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getState</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setState</span><span class=\"params\">(String state)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.state = state;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//为了方便输出对象信息。实现toString方法</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">toString</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//改为想要的格式</span></span><br><span class=\"line\">        <span class=\"comment\">// 编号  房主  电话  地址  月租  状态（未出租/已出租）</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span>  id +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + name +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t&quot;</span> + phone +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + address +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + rent +</span><br><span class=\"line\">                <span class=\"string\">&quot;\\t\\t&quot;</span> + state ;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HouseView类\"><a href=\"#HouseView类\" class=\"headerlink\" title=\"HouseView类\"></a>HouseView类</h4><p>HouseView类用于显示界面</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent.view;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.domain.House;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.service.HouseService;</span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.utils.Utility;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\"> * 1.显示界面</span></span><br><span class=\"line\"><span class=\"comment\"> * 2.接收用户的输入</span></span><br><span class=\"line\"><span class=\"comment\"> * 3.调用HouseService完成对房屋信息的各种操作</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HouseView</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"variable\">loop</span> <span class=\"operator\">=</span> <span class=\"literal\">true</span>;  <span class=\"comment\">//控制显示菜单</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">char</span> <span class=\"variable\">key</span> <span class=\"operator\">=</span> <span class=\"string\">&#x27; &#x27;</span>;  <span class=\"comment\">//接收用户输入</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">HouseService</span> <span class=\"variable\">houseService</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">HouseService</span>(<span class=\"number\">10</span>); <span class=\"comment\">//设置数组大小为10</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据修改房屋信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">updateHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================修改房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入待修改房屋id(-1退出查找)&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">updateId</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (updateId == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================已退出修改房屋==================&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//注意点：</span></span><br><span class=\"line\">        <span class=\"comment\">//返回的是引用类型[即就是数组的元素]，都指向同一对象</span></span><br><span class=\"line\">        <span class=\"comment\">//因此用House.SetXX()方法会修改HouseService中的houses数组中的元素</span></span><br><span class=\"line\">        <span class=\"type\">House</span> <span class=\"variable\">house</span> <span class=\"operator\">=</span> houseService.findById(updateId);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (house == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;==============修改的房屋信息不存在===============&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;姓名（&quot;</span> + house.getName() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">8</span>, <span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(name) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setName(name);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;电话（&quot;</span> + house.getPhone() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">phone</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">12</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(phone) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setPhone(phone);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;地址（&quot;</span> + house.getAddress() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">address</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">16</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(address) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setAddress(address);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;月租（&quot;</span> + house.getRent() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rent</span> <span class=\"operator\">=</span> Utility.readInt(-<span class=\"number\">1</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( rent != -<span class=\"number\">1</span> ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setRent(rent);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;状态（&quot;</span> + house.getState() + <span class=\"string\">&quot;）：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">3</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"string\">&quot;&quot;</span>.equals(state) ) &#123; <span class=\"comment\">//修改</span></span><br><span class=\"line\">            house.setState(state);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================修改房屋成功==================&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//根据id查找房屋信息</span></span><br><span class=\"line\">    <span class=\"comment\">//编写findHouse()接收输入的id，调用Service的find方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">findHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================查找房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入待查找房屋id(-1退出查找)&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">findId</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (findId == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================已退出删除房屋==================&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">//执行查找</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (houseService.findById(findId) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"type\">House</span> <span class=\"variable\">house</span> <span class=\"operator\">=</span> houseService.findById(findId);</span><br><span class=\"line\">            System.out.println(house);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================查找房屋成功==================&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================查找房屋失败==================&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//退出</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">exit</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Utility.readConfirmSelection();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (c == <span class=\"string\">&#x27;Y&#x27;</span>) &#123;</span><br><span class=\"line\">            loop = <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//删除房屋信息</span></span><br><span class=\"line\">    <span class=\"comment\">//编写delHouse()接收输入的id，调用Service的 del方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">delHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================删除房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入待删除房屋id(-1退出删除)&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">delId</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (delId == -<span class=\"number\">1</span>) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================已退出删除房屋==================&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//该方法本身有循环，必须输出Y/N</span></span><br><span class=\"line\">        <span class=\"type\">char</span> <span class=\"variable\">choice</span> <span class=\"operator\">=</span> Utility.readConfirmSelection();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (choice == <span class=\"string\">&#x27;Y&#x27;</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//执行删除</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (houseService.del(delId)) &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=================删除房屋成功==================&quot;</span>);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;=================删除房屋失败==================&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================退出删除房屋==================&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//添加房屋</span></span><br><span class=\"line\">    <span class=\"comment\">//编写addhouse()接收数据，创建House对象，调用add()方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">addHouse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================添加房屋==================&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;姓名：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">8</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;电话：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">phone</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">12</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;地址：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">address</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">16</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;月租：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">rent</span> <span class=\"operator\">=</span> Utility.readInt();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;状态：&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> Utility.readString(<span class=\"number\">3</span>);</span><br><span class=\"line\">        <span class=\"comment\">//创建一个新的House对象，注意id是系统分配，用户不能添加</span></span><br><span class=\"line\">        <span class=\"type\">House</span> <span class=\"variable\">newHouse</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">House</span>(<span class=\"number\">0</span>, name, phone, address, rent, state);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (houseService.add(newHouse)) &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================添加房屋成功==================&quot;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=================添加房屋失败==================&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//显示房屋列表</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">listHouses</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=================房屋列表==================&quot;</span>);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;编号\\t\\t房主\\t\\t电话\\t\\t地址\\t\\t月租\\t\\t状态（未出租/已出租）&quot;</span>);</span><br><span class=\"line\">        House[] houses = houseService.list(); <span class=\"comment\">//获取到所有房屋信息</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; houses.length; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (houses[i] == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            System.out.println(houses[i]);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=============房屋列表显示完毕==============\\n&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//显示主菜单</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mainMenu</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">do</span> &#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;=============房屋租赁系统菜单==============&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t1 新 增 房 源&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t2 查 找 房 源&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t3 删 除 房 源 信 息&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t4 修 改 房 源 信 息&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t5 房 屋 列 表&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;\\t\\t\\t6 退       出&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;请输入你的选择（1-6）&quot;</span>);</span><br><span class=\"line\">            key = Utility.readChar();</span><br><span class=\"line\">            <span class=\"keyword\">switch</span> (key) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;1&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;新增&quot;);</span></span><br><span class=\"line\">                    addHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;2&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;查找 &quot;);</span></span><br><span class=\"line\">                    findHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;3&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;删除&quot;);</span></span><br><span class=\"line\">                    delHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;4&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;修改&quot;);</span></span><br><span class=\"line\">                    updateHouse();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;5&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;房屋列表&quot;);</span></span><br><span class=\"line\">                    listHouses();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">                <span class=\"keyword\">case</span> <span class=\"string\">&#x27;6&#x27;</span>:</span><br><span class=\"line\">                    <span class=\"comment\">//System.out.println(&quot;退出&quot;);</span></span><br><span class=\"line\">                    exit();</span><br><span class=\"line\">                    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">while</span> (loop);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HouseService类\"><a href=\"#HouseService类\" class=\"headerlink\" title=\"HouseService类\"></a>HouseService类</h4><p>HouseService类用于给HouseView类传输相应的数据，如HouseView中有listHouse()方法，而HouseService中的list()方法用于给listHouse()方法传送房屋列表的信息。</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent.service;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.domain.House;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> *</span></span><br><span class=\"line\"><span class=\"comment\"> * 业务层</span></span><br><span class=\"line\"><span class=\"comment\"> * 定义House[],保存House对象</span></span><br><span class=\"line\"><span class=\"comment\"> * 1.响应HouseView的调用</span></span><br><span class=\"line\"><span class=\"comment\"> * 2.完成对房屋信息的增删改查（crud）</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HouseService</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> House[] houses; <span class=\"comment\">//保存House对象</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">houseNums</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"comment\">//记录多少个房屋信息</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> <span class=\"variable\">idCounter</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; <span class=\"comment\">//记录当前Id增加到哪</span></span><br><span class=\"line\">    <span class=\"comment\">//构造器初始化数据</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">HouseService</span><span class=\"params\">(<span class=\"type\">int</span> size)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//new houses</span></span><br><span class=\"line\">        houses = <span class=\"keyword\">new</span> <span class=\"title class_\">House</span>[size]; <span class=\"comment\">//创建HouseService对象时，指定数组大小</span></span><br><span class=\"line\">        <span class=\"comment\">//伪造数据，配合测试</span></span><br><span class=\"line\">        houses[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">House</span>(<span class=\"number\">1</span>,<span class=\"string\">&quot;coderq&quot;</span>,<span class=\"string\">&quot;188&quot;</span>,<span class=\"string\">&quot;安徽&quot;</span>,<span class=\"number\">500</span>,<span class=\"string\">&quot;未出租&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//修改房屋信息</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//find方法,查找房屋信息,返回House对象或null</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> House <span class=\"title function_\">findById</span><span class=\"params\">(<span class=\"type\">int</span> findId)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先找到要查找的房屋对应的下标</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; houseNums; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (findId == houses[i].getId() )&#123; <span class=\"comment\">//要查找的房屋（id）</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> houses[i];</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//del方法,删除房屋信息</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">del</span><span class=\"params\">(<span class=\"type\">int</span> delId)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//先找到要删除的房屋对应的下标</span></span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">index</span> <span class=\"operator\">=</span> -<span class=\"number\">1</span>;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; i &lt; houseNums; i++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (delId == houses[i].getId() )&#123; <span class=\"comment\">//要删除的房屋（id），是数组下标为i的元素</span></span><br><span class=\"line\">                index = i;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (index == -<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">            <span class=\"comment\">//System.out.println(&quot;该房屋不存在&quot;);</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//如果找到,有点难度</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> index; i &lt; houseNums - <span class=\"number\">1</span> ; i++) &#123;</span><br><span class=\"line\">            houses[i] = houses[i+<span class=\"number\">1</span>];</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        houses[--houseNums] = <span class=\"literal\">null</span>; <span class=\"comment\">//当前房屋信息最后一个 设置null</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//add方法，添加新对象，返回boolean</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">add</span><span class=\"params\">(House newHouse)</span>&#123;</span><br><span class=\"line\">        <span class=\"comment\">//判断是否还可以添加，数组满如何扩容？</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(houseNums == houses.length)&#123;</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数组已满，无法添加&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">//newHouse对象加入到数组</span></span><br><span class=\"line\">        houses[houseNums++] = newHouse;</span><br><span class=\"line\">        <span class=\"comment\">//id自增机制</span></span><br><span class=\"line\">        newHouse.setId(++idCounter);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//list方法，返回houses</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> House[] list()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> houses;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"HouseRentApp类\"><a href=\"#HouseRentApp类\" class=\"headerlink\" title=\"HouseRentApp类\"></a>HouseRentApp类</h4><p>主程序启动类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.coderq.houserent;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.coderq.houserent.view.HouseView;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * Created by Q on 2022/2/26.</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">HouseRentApp</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">//创建HouseView对象，显示主菜单，程序入口</span></span><br><span class=\"line\">        <span class=\"keyword\">new</span> <span class=\"title class_\">HouseView</span>().mainMenu();</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;=============你退出了系统==============&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"结束语\"><a href=\"#结束语\" class=\"headerlink\" title=\"结束语\"></a>结束语</h2><p>以上就是房屋出租系统的全部内容, 本项目也算是Java基础的一个小案例, 增删两个功能看着老韩的视频逐步写下来的，查改是自己尝试了去实现一下，然后发现自己实现确实思路上还有点乱，磕磕绊绊也算是最终实现了。本项目也算简单有了一点增删改查的小锻炼，希望接下来的岁月里继续脚踏实地，努力努力再努力。</p>"},{"title":"检查笔记本电池消耗","copyright":true,"date":"2022-02-20T12:20:00.000Z","_content":"\n1. 以管理员身份运行CMD\n\n   win+R 快捷键输入`cmd`打开命令行窗口 \n\n2. 使用以下命令获取电池检测报告\n  `Powercfg/batteryreport`\n  ![](检查笔记本电池消耗/2291368-20220220201236309-1100738058.png)\n\n3. 到指定目录下（如C:/Users/Q/battery-report.html)查看battery_report.html，其中电池的信息如图：\n\n  ![Battery Report](检查笔记本电池消耗/2291368-20220220200703803-528834853.png)\n\n  ![电池报告](检查笔记本电池消耗/2291368-20220220200725104-972245815.png)\n\n​\t\t   \n","source":"_posts/检查笔记本电池消耗.md","raw":"---\ntitle: '检查笔记本电池消耗'\ncopyright: true\ndate: '2022-02-20 20:20'\ntags: '电脑维修'\ncategories: 'categories'\n---\n\n1. 以管理员身份运行CMD\n\n   win+R 快捷键输入`cmd`打开命令行窗口 \n\n2. 使用以下命令获取电池检测报告\n  `Powercfg/batteryreport`\n  ![](检查笔记本电池消耗/2291368-20220220201236309-1100738058.png)\n\n3. 到指定目录下（如C:/Users/Q/battery-report.html)查看battery_report.html，其中电池的信息如图：\n\n  ![Battery Report](检查笔记本电池消耗/2291368-20220220200703803-528834853.png)\n\n  ![电池报告](检查笔记本电池消耗/2291368-20220220200725104-972245815.png)\n\n​\t\t   \n","slug":"检查笔记本电池消耗","published":1,"updated":"2022-12-08T05:29:42.462Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu2003fsw6xewrg9h4n","content":"<ol>\n<li><p>以管理员身份运行CMD</p>\n<p>win+R 快捷键输入<code>cmd</code>打开命令行窗口 </p>\n</li>\n<li><p>使用以下命令获取电池检测报告<br><code>Powercfg/batteryreport</code></p>\n<img src=\"/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220201236309-1100738058.png\" class=\"\"></li>\n<li><p>到指定目录下（如C:/Users/Q/battery-report.html)查看battery_report.html，其中电池的信息如图：</p>\n</li>\n</ol>\n  <img src=\"/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220200703803-528834853.png\" class=\"\" title=\"Battery Report\">\n\n  <img src=\"/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220200725104-972245815.png\" class=\"\" title=\"电池报告\">\n\n<p>​           </p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<ol>\n<li><p>以管理员身份运行CMD</p>\n<p>win+R 快捷键输入<code>cmd</code>打开命令行窗口 </p>\n</li>\n<li><p>使用以下命令获取电池检测报告<br><code>Powercfg/batteryreport</code></p>\n<img src=\"/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220201236309-1100738058.png\" class=\"\"></li>\n<li><p>到指定目录下（如C:/Users/Q/battery-report.html)查看battery_report.html，其中电池的信息如图：</p>\n</li>\n</ol>\n  <img src=\"/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220200703803-528834853.png\" class=\"\" title=\"Battery Report\">\n\n  <img src=\"/2022/02/20/%E6%A3%80%E6%9F%A5%E7%AC%94%E8%AE%B0%E6%9C%AC%E7%94%B5%E6%B1%A0%E6%B6%88%E8%80%97/2291368-20220220200725104-972245815.png\" class=\"\" title=\"电池报告\">\n\n<p>​           </p>\n"},{"title":"阿里云ECS服务器入门使用+宝塔安装使用","copyright":true,"date":"2022-07-21T11:03:00.000Z","_content":"\n\n## 背景\n\n通过一篇技术文 看到 Alibaba Java 技术图谱，就点进去看看大佬都学了哪些东西以及进阶路线，于是就点开一个课程，提示我注册账号，顺手就注册一把，之前就留意有羊毛可以薅，不过都给错过了，一看新用户免费白嫖一个月多种服务任选。看到阿里云 云服务器ECS 可以白嫖一个月，参数都没看，果断直接点进来。订单如下。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png)\n\n接下来使用一个月来简单玩玩这个东西。\n\n## 初探索\n\n首先留下两行血泪，选好cpu、内存、带宽，地域是非常重要的。其他可以默认选择。地域之前听说过买海外的不要备案，但是是白嫖就随便点了个华东地区，还要备案很头秃。\n\n**1、登陆控制台**\n\n其次探索一下登陆控制台，输入账号密码，进去看到服务界面，新手可能刚开始很蒙。\n\n操作如下，点击左侧菜单，\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png)\n\n点击购买的云服务器，\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png)\n\n显示界面如图：\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png)\n\n**2、简单配置**\n\n首先点击实例，点击创建实例，选择区域，一定要选对地域才能看到服务器。\n\n创建后可以尝试登录了，登录前有几个参数查看或者修改一下。\n\n其一连接密码修改\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png)\n\n其二操作系统查看一下是否是自己熟悉，停止运行的服务器，可以在更多配置修改。\n\n其三添加常用安全组端口\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png)\n\n建议直接点击快速添加把常用端口如 80，3306，6379，22 等添加上。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png)\n\n\n## 连接搞机\n\n### Alibaba Cloud Shell（显而易见阿里云命令行面板）\n\n点击菜单栏云命令行\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png)\n\n即可进入命令行界面\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png)\n\n上传文件也很方便有图形化界面。\n\n### xshell连接\n\n\n### 宝塔面板\n\n**1、宝塔安装**\n\n服务器上安装宝塔，不用 Linux 命令行，直接可视化安装一些环境真的太爽了。\n\n宝塔官网安装教程:https://www.bt.cn/admin/servers 给出了详细教程，总结下来就简单三步\n\n- 注册宝塔账号\n\n- 阿里云服务器上打开宝塔使用的安全组 8888 端口\n\n- 服务器上安装宝塔\n\n  未安装宝塔之前使用xshell 或者阿里云命令行连接上服务器，输入`yum install -y wget && wget -O install.sh http://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec `（Centos安装脚本 ，由于我的服务器安装的操作系统是Centos，接下来不在做说明，其他安装命令看宝塔官网安装教程）\n\n  下载完成后会有如下面板地址以及用户名和密码。打开网址输入用户名密码登陆即可。\n\n  ![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png)\n\n**2、宝塔使用**\n\n打开网址输入用户名密码登陆后，会提示绑定宝塔面板以及界面化推荐下载到服务器上一些环境如MySQL，nodes，nginx，按提示操作即可。\n\n登录后界面如图\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png)\n\n## 踩坑\n\n1、背景\n\n前一天在宝塔面板如下位置修改了安全入口，然后忘记了。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png)\n\n2、报错\n\nhttp://1xx.xx.xx.xx:8888/原来安全入口\n\n访问此修改前地址后报错：安全入口校验失败\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png)\n\n3、解决方案\n\n按照提示修改即可，就是连接上服务器输入`/etc/init.d/bt default`即可查看安全入口地址。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png)\n","source":"_posts/阿里云 ECS 服务器入门使用+宝塔安装使用.md","raw":"---\ntitle: '阿里云ECS服务器入门使用+宝塔安装使用'\ncopyright: true\ndate: '2022-07-21 19:03'\ntags: '阿里云'\ncategories: 'categories'\n---\n\n\n## 背景\n\n通过一篇技术文 看到 Alibaba Java 技术图谱，就点进去看看大佬都学了哪些东西以及进阶路线，于是就点开一个课程，提示我注册账号，顺手就注册一把，之前就留意有羊毛可以薅，不过都给错过了，一看新用户免费白嫖一个月多种服务任选。看到阿里云 云服务器ECS 可以白嫖一个月，参数都没看，果断直接点进来。订单如下。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png)\n\n接下来使用一个月来简单玩玩这个东西。\n\n## 初探索\n\n首先留下两行血泪，选好cpu、内存、带宽，地域是非常重要的。其他可以默认选择。地域之前听说过买海外的不要备案，但是是白嫖就随便点了个华东地区，还要备案很头秃。\n\n**1、登陆控制台**\n\n其次探索一下登陆控制台，输入账号密码，进去看到服务界面，新手可能刚开始很蒙。\n\n操作如下，点击左侧菜单，\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png)\n\n点击购买的云服务器，\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png)\n\n显示界面如图：\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png)\n\n**2、简单配置**\n\n首先点击实例，点击创建实例，选择区域，一定要选对地域才能看到服务器。\n\n创建后可以尝试登录了，登录前有几个参数查看或者修改一下。\n\n其一连接密码修改\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png)\n\n其二操作系统查看一下是否是自己熟悉，停止运行的服务器，可以在更多配置修改。\n\n其三添加常用安全组端口\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png)\n\n建议直接点击快速添加把常用端口如 80，3306，6379，22 等添加上。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png)\n\n\n## 连接搞机\n\n### Alibaba Cloud Shell（显而易见阿里云命令行面板）\n\n点击菜单栏云命令行\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png)\n\n即可进入命令行界面\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png)\n\n上传文件也很方便有图形化界面。\n\n### xshell连接\n\n\n### 宝塔面板\n\n**1、宝塔安装**\n\n服务器上安装宝塔，不用 Linux 命令行，直接可视化安装一些环境真的太爽了。\n\n宝塔官网安装教程:https://www.bt.cn/admin/servers 给出了详细教程，总结下来就简单三步\n\n- 注册宝塔账号\n\n- 阿里云服务器上打开宝塔使用的安全组 8888 端口\n\n- 服务器上安装宝塔\n\n  未安装宝塔之前使用xshell 或者阿里云命令行连接上服务器，输入`yum install -y wget && wget -O install.sh http://download.bt.cn/install/install_6.0.sh && sh install.sh ed8484bec `（Centos安装脚本 ，由于我的服务器安装的操作系统是Centos，接下来不在做说明，其他安装命令看宝塔官网安装教程）\n\n  下载完成后会有如下面板地址以及用户名和密码。打开网址输入用户名密码登陆即可。\n\n  ![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png)\n\n**2、宝塔使用**\n\n打开网址输入用户名密码登陆后，会提示绑定宝塔面板以及界面化推荐下载到服务器上一些环境如MySQL，nodes，nginx，按提示操作即可。\n\n登录后界面如图\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png)\n\n## 踩坑\n\n1、背景\n\n前一天在宝塔面板如下位置修改了安全入口，然后忘记了。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png)\n\n2、报错\n\nhttp://1xx.xx.xx.xx:8888/原来安全入口\n\n访问此修改前地址后报错：安全入口校验失败\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png)\n\n3、解决方案\n\n按照提示修改即可，就是连接上服务器输入`/etc/init.d/bt default`即可查看安全入口地址。\n\n![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png)\n","slug":"阿里云 ECS 服务器入门使用+宝塔安装使用","published":1,"updated":"2022-12-08T05:42:46.181Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu3003jsw6x05em3kvc","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>通过一篇技术文 看到 Alibaba Java 技术图谱，就点进去看看大佬都学了哪些东西以及进阶路线，于是就点开一个课程，提示我注册账号，顺手就注册一把，之前就留意有羊毛可以薅，不过都给错过了，一看新用户免费白嫖一个月多种服务任选。看到阿里云 云服务器ECS 可以白嫖一个月，参数都没看，果断直接点进来。订单如下。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png)</p>\n<p>接下来使用一个月来简单玩玩这个东西。</p>\n<h2 id=\"初探索\"><a href=\"#初探索\" class=\"headerlink\" title=\"初探索\"></a>初探索</h2><p>首先留下两行血泪，选好cpu、内存、带宽，地域是非常重要的。其他可以默认选择。地域之前听说过买海外的不要备案，但是是白嫖就随便点了个华东地区，还要备案很头秃。</p>\n<p><strong>1、登陆控制台</strong></p>\n<p>其次探索一下登陆控制台，输入账号密码，进去看到服务界面，新手可能刚开始很蒙。</p>\n<p>操作如下，点击左侧菜单，</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png)</p>\n<p>点击购买的云服务器，</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png)</p>\n<p>显示界面如图：</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png)</p>\n<p><strong>2、简单配置</strong></p>\n<p>首先点击实例，点击创建实例，选择区域，一定要选对地域才能看到服务器。</p>\n<p>创建后可以尝试登录了，登录前有几个参数查看或者修改一下。</p>\n<p>其一连接密码修改</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png)</p>\n<p>其二操作系统查看一下是否是自己熟悉，停止运行的服务器，可以在更多配置修改。</p>\n<p>其三添加常用安全组端口</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png)</p>\n<p>建议直接点击快速添加把常用端口如 80，3306，6379，22 等添加上。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png)</p>\n<h2 id=\"连接搞机\"><a href=\"#连接搞机\" class=\"headerlink\" title=\"连接搞机\"></a>连接搞机</h2><h3 id=\"Alibaba-Cloud-Shell（显而易见阿里云命令行面板）\"><a href=\"#Alibaba-Cloud-Shell（显而易见阿里云命令行面板）\" class=\"headerlink\" title=\"Alibaba Cloud Shell（显而易见阿里云命令行面板）\"></a>Alibaba Cloud Shell（显而易见阿里云命令行面板）</h3><p>点击菜单栏云命令行<br>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png)</p>\n<p>即可进入命令行界面<br>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png)</p>\n<p>上传文件也很方便有图形化界面。</p>\n<h3 id=\"xshell连接\"><a href=\"#xshell连接\" class=\"headerlink\" title=\"xshell连接\"></a>xshell连接</h3><h3 id=\"宝塔面板\"><a href=\"#宝塔面板\" class=\"headerlink\" title=\"宝塔面板\"></a>宝塔面板</h3><p><strong>1、宝塔安装</strong></p>\n<p>服务器上安装宝塔，不用 Linux 命令行，直接可视化安装一些环境真的太爽了。</p>\n<p>宝塔官网安装教程:<a href=\"https://www.bt.cn/admin/servers\">https://www.bt.cn/admin/servers</a> 给出了详细教程，总结下来就简单三步</p>\n<ul>\n<li><p>注册宝塔账号</p>\n</li>\n<li><p>阿里云服务器上打开宝塔使用的安全组 8888 端口</p>\n</li>\n<li><p>服务器上安装宝塔</p>\n<p>未安装宝塔之前使用xshell 或者阿里云命令行连接上服务器，输入<code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec </code>（Centos安装脚本 ，由于我的服务器安装的操作系统是Centos，接下来不在做说明，其他安装命令看宝塔官网安装教程）</p>\n<p>下载完成后会有如下面板地址以及用户名和密码。打开网址输入用户名密码登陆即可。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png)</p>\n</li>\n</ul>\n<p><strong>2、宝塔使用</strong></p>\n<p>打开网址输入用户名密码登陆后，会提示绑定宝塔面板以及界面化推荐下载到服务器上一些环境如MySQL，nodes，nginx，按提示操作即可。</p>\n<p>登录后界面如图</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png)</p>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>1、背景</p>\n<p>前一天在宝塔面板如下位置修改了安全入口，然后忘记了。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png)</p>\n<p>2、报错</p>\n<p><a href=\"http://1xx.xx.xx.xx:8888/%E5%8E%9F%E6%9D%A5%E5%AE%89%E5%85%A8%E5%85%A5%E5%8F%A3\">http://1xx.xx.xx.xx:8888/原来安全入口</a></p>\n<p>访问此修改前地址后报错：安全入口校验失败</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png)</p>\n<p>3、解决方案</p>\n<p>按照提示修改即可，就是连接上服务器输入<code>/etc/init.d/bt default</code>即可查看安全入口地址。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png)</p>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/ex/wallhaven-exyw3o.jpg","excerpt":"","more":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>通过一篇技术文 看到 Alibaba Java 技术图谱，就点进去看看大佬都学了哪些东西以及进阶路线，于是就点开一个课程，提示我注册账号，顺手就注册一把，之前就留意有羊毛可以薅，不过都给错过了，一看新用户免费白嫖一个月多种服务任选。看到阿里云 云服务器ECS 可以白嫖一个月，参数都没看，果断直接点进来。订单如下。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png)</p>\n<p>接下来使用一个月来简单玩玩这个东西。</p>\n<h2 id=\"初探索\"><a href=\"#初探索\" class=\"headerlink\" title=\"初探索\"></a>初探索</h2><p>首先留下两行血泪，选好cpu、内存、带宽，地域是非常重要的。其他可以默认选择。地域之前听说过买海外的不要备案，但是是白嫖就随便点了个华东地区，还要备案很头秃。</p>\n<p><strong>1、登陆控制台</strong></p>\n<p>其次探索一下登陆控制台，输入账号密码，进去看到服务界面，新手可能刚开始很蒙。</p>\n<p>操作如下，点击左侧菜单，</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png)</p>\n<p>点击购买的云服务器，</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png)</p>\n<p>显示界面如图：</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png)</p>\n<p><strong>2、简单配置</strong></p>\n<p>首先点击实例，点击创建实例，选择区域，一定要选对地域才能看到服务器。</p>\n<p>创建后可以尝试登录了，登录前有几个参数查看或者修改一下。</p>\n<p>其一连接密码修改</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png)</p>\n<p>其二操作系统查看一下是否是自己熟悉，停止运行的服务器，可以在更多配置修改。</p>\n<p>其三添加常用安全组端口</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png)</p>\n<p>建议直接点击快速添加把常用端口如 80，3306，6379，22 等添加上。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png)</p>\n<h2 id=\"连接搞机\"><a href=\"#连接搞机\" class=\"headerlink\" title=\"连接搞机\"></a>连接搞机</h2><h3 id=\"Alibaba-Cloud-Shell（显而易见阿里云命令行面板）\"><a href=\"#Alibaba-Cloud-Shell（显而易见阿里云命令行面板）\" class=\"headerlink\" title=\"Alibaba Cloud Shell（显而易见阿里云命令行面板）\"></a>Alibaba Cloud Shell（显而易见阿里云命令行面板）</h3><p>点击菜单栏云命令行<br>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png)</p>\n<p>即可进入命令行界面<br>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png)</p>\n<p>上传文件也很方便有图形化界面。</p>\n<h3 id=\"xshell连接\"><a href=\"#xshell连接\" class=\"headerlink\" title=\"xshell连接\"></a>xshell连接</h3><h3 id=\"宝塔面板\"><a href=\"#宝塔面板\" class=\"headerlink\" title=\"宝塔面板\"></a>宝塔面板</h3><p><strong>1、宝塔安装</strong></p>\n<p>服务器上安装宝塔，不用 Linux 命令行，直接可视化安装一些环境真的太爽了。</p>\n<p>宝塔官网安装教程:<a href=\"https://www.bt.cn/admin/servers\">https://www.bt.cn/admin/servers</a> 给出了详细教程，总结下来就简单三步</p>\n<ul>\n<li><p>注册宝塔账号</p>\n</li>\n<li><p>阿里云服务器上打开宝塔使用的安全组 8888 端口</p>\n</li>\n<li><p>服务器上安装宝塔</p>\n<p>未安装宝塔之前使用xshell 或者阿里云命令行连接上服务器，输入<code>yum install -y wget &amp;&amp; wget -O install.sh http://download.bt.cn/install/install_6.0.sh &amp;&amp; sh install.sh ed8484bec </code>（Centos安装脚本 ，由于我的服务器安装的操作系统是Centos，接下来不在做说明，其他安装命令看宝塔官网安装教程）</p>\n<p>下载完成后会有如下面板地址以及用户名和密码。打开网址输入用户名密码登陆即可。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png)</p>\n</li>\n</ul>\n<p><strong>2、宝塔使用</strong></p>\n<p>打开网址输入用户名密码登陆后，会提示绑定宝塔面板以及界面化推荐下载到服务器上一些环境如MySQL，nodes，nginx，按提示操作即可。</p>\n<p>登录后界面如图</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png)</p>\n<h2 id=\"踩坑\"><a href=\"#踩坑\" class=\"headerlink\" title=\"踩坑\"></a>踩坑</h2><p>1、背景</p>\n<p>前一天在宝塔面板如下位置修改了安全入口，然后忘记了。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png)</p>\n<p>2、报错</p>\n<p><a href=\"http://1xx.xx.xx.xx:8888/%E5%8E%9F%E6%9D%A5%E5%AE%89%E5%85%A8%E5%85%A5%E5%8F%A3\">http://1xx.xx.xx.xx:8888/原来安全入口</a></p>\n<p>访问此修改前地址后报错：安全入口校验失败</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png)</p>\n<p>3、解决方案</p>\n<p>按照提示修改即可，就是连接上服务器输入<code>/etc/init.d/bt default</code>即可查看安全入口地址。</p>\n<p>![](阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png)</p>\n"},{"title":"韩顺平Utility工具类[Java基础房屋出租项目]","copyright":true,"date":"2022-02-26T05:16:00.000Z","_content":"\n\n```\npackage com.codedog.houserent.utils;    //改为自己的目录\n\n\n/**\n\t工具类的作用:\n\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。\n*/\n\nimport java.util.*;\n\npublic class Utility {\n\t//静态属性。。。\n    private static Scanner scanner = new Scanner(System.in);\n\n    \n    /**\n     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围\n     * @return 1——5\n     */\n\tpublic static char readMenuSelection() {\n        char c;\n        for (; ; ) {\n            String str = readKeyBoard(1, false);//包含一个字符的字符串\n            c = str.charAt(0);//将字符串转换成字符char类型\n            if (c != '1' && c != '2' && \n                c != '3' && c != '4' && c != '5') {\n                System.out.print(\"选择错误，请重新输入：\");\n            } else break;\n        }\n        return c;\n    }\n\n\t/**\n\t * 功能：读取键盘输入的一个字符\n\t * @return 一个字符\n\t */\n    public static char readChar() {\n        String str = readKeyBoard(1, false);//就是一个字符\n        return str.charAt(0);\n    }\n    /**\n     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符\n     * @param defaultValue 指定的默认值\n     * @return 默认值或输入的字符\n     */\n    \n    public static char readChar(char defaultValue) {\n        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符\n        return (str.length() == 0) ? defaultValue : str.charAt(0);\n    }\n\t\n    /**\n     * 功能：读取键盘输入的整型，长度小于10位\n     * @return 整数\n     */\n    public static int readInt() {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, false);//一个整数，长度<=10位\n            try {\n                n = Integer.parseInt(str);//将字符串转换成整数\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n    /**\n     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数\n     * @param defaultValue 指定的默认值\n     * @return 整数或默认值\n     */\n    public static int readInt(int defaultValue) {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, true);\n            if (str.equals(\"\")) {\n                return defaultValue;\n            }\n\t\t\t\n\t\t\t//异常处理...\n            try {\n                n = Integer.parseInt(str);\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串\n     * @param limit 限制的长度\n     * @return 指定长度的字符串\n     */\n\n    public static String readString(int limit) {\n        return readKeyBoard(limit, false);\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串\n     * @param limit 限制的长度\n     * @param defaultValue 指定的默认值\n     * @return 指定长度的字符串\n     */\n\t\n    public static String readString(int limit, String defaultValue) {\n        String str = readKeyBoard(limit, true);\n        return str.equals(\"\")? defaultValue : str;\n    }\n\n\n\t/**\n\t * 功能：读取键盘输入的确认选项，Y或N\n\t * 将小的功能，封装到一个方法中.\n\t * @return Y或N\n\t */\n    public static char readConfirmSelection() {\n        System.out.println(\"请输入你的选择(Y/N): 请小心选择\");\n        char c;\n        for (; ; ) {//无限循环\n        \t//在这里，将接受到字符，转成了大写字母\n        \t//y => Y n=>N\n            String str = readKeyBoard(1, false).toUpperCase();\n            c = str.charAt(0);\n            if (c == 'Y' || c == 'N') {\n                break;\n            } else {\n                System.out.print(\"选择错误，请重新输入：\");\n            }\n        }\n        return c;\n    }\n\n    /**\n     * 功能： 读取一个字符串\n     * @param limit 读取的长度\n     * @param blankReturn 如果为true ,表示 可以读空字符串。 \n     * \t\t\t\t\t  如果为false表示 不能读空字符串。\n     * \t\t\t\n\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。\n     * @return\n     */\n    private static String readKeyBoard(int limit, boolean blankReturn) {\n        \n\t\t//定义了字符串\n\t\tString line = \"\";\n\n\t\t//scanner.hasNextLine() 判断有没有下一行\n        while (scanner.hasNextLine()) {\n            line = scanner.nextLine();//读取这一行\n           \n\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车\n\t\t\tif (line.length() == 0) {\n                if (blankReturn) return line;//如果blankReturn=true,可以返回空串\n                else continue; //如果blankReturn=false,不接受空串，必须输入内容\n            }\n\n\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  \n\t\t\t//如果用户如的内容 >0 <= limit ,我就接受\n            if (line.length() < 1 || line.length() > limit) {\n                System.out.print(\"输入长度（不能大于\" + limit + \"）错误，请重新输入：\");\n                continue;\n            }\n            break;\n        }\n\n        return line;\n    }\n}\n```\n","source":"_posts/韩顺平Utility工具类[Java基础房屋出租项目].md","raw":"---\ntitle: '韩顺平Utility工具类[Java基础房屋出租项目]'\ncopyright: true\ndate: '2022-02-26 13:16'\ntags: '韩顺平'\ncategories: 'categories'\n---\n\n\n```\npackage com.codedog.houserent.utils;    //改为自己的目录\n\n\n/**\n\t工具类的作用:\n\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。\n*/\n\nimport java.util.*;\n\npublic class Utility {\n\t//静态属性。。。\n    private static Scanner scanner = new Scanner(System.in);\n\n    \n    /**\n     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围\n     * @return 1——5\n     */\n\tpublic static char readMenuSelection() {\n        char c;\n        for (; ; ) {\n            String str = readKeyBoard(1, false);//包含一个字符的字符串\n            c = str.charAt(0);//将字符串转换成字符char类型\n            if (c != '1' && c != '2' && \n                c != '3' && c != '4' && c != '5') {\n                System.out.print(\"选择错误，请重新输入：\");\n            } else break;\n        }\n        return c;\n    }\n\n\t/**\n\t * 功能：读取键盘输入的一个字符\n\t * @return 一个字符\n\t */\n    public static char readChar() {\n        String str = readKeyBoard(1, false);//就是一个字符\n        return str.charAt(0);\n    }\n    /**\n     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符\n     * @param defaultValue 指定的默认值\n     * @return 默认值或输入的字符\n     */\n    \n    public static char readChar(char defaultValue) {\n        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符\n        return (str.length() == 0) ? defaultValue : str.charAt(0);\n    }\n\t\n    /**\n     * 功能：读取键盘输入的整型，长度小于10位\n     * @return 整数\n     */\n    public static int readInt() {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, false);//一个整数，长度<=10位\n            try {\n                n = Integer.parseInt(str);//将字符串转换成整数\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n    /**\n     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数\n     * @param defaultValue 指定的默认值\n     * @return 整数或默认值\n     */\n    public static int readInt(int defaultValue) {\n        int n;\n        for (; ; ) {\n            String str = readKeyBoard(10, true);\n            if (str.equals(\"\")) {\n                return defaultValue;\n            }\n\t\t\t\n\t\t\t//异常处理...\n            try {\n                n = Integer.parseInt(str);\n                break;\n            } catch (NumberFormatException e) {\n                System.out.print(\"数字输入错误，请重新输入：\");\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串\n     * @param limit 限制的长度\n     * @return 指定长度的字符串\n     */\n\n    public static String readString(int limit) {\n        return readKeyBoard(limit, false);\n    }\n\n    /**\n     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串\n     * @param limit 限制的长度\n     * @param defaultValue 指定的默认值\n     * @return 指定长度的字符串\n     */\n\t\n    public static String readString(int limit, String defaultValue) {\n        String str = readKeyBoard(limit, true);\n        return str.equals(\"\")? defaultValue : str;\n    }\n\n\n\t/**\n\t * 功能：读取键盘输入的确认选项，Y或N\n\t * 将小的功能，封装到一个方法中.\n\t * @return Y或N\n\t */\n    public static char readConfirmSelection() {\n        System.out.println(\"请输入你的选择(Y/N): 请小心选择\");\n        char c;\n        for (; ; ) {//无限循环\n        \t//在这里，将接受到字符，转成了大写字母\n        \t//y => Y n=>N\n            String str = readKeyBoard(1, false).toUpperCase();\n            c = str.charAt(0);\n            if (c == 'Y' || c == 'N') {\n                break;\n            } else {\n                System.out.print(\"选择错误，请重新输入：\");\n            }\n        }\n        return c;\n    }\n\n    /**\n     * 功能： 读取一个字符串\n     * @param limit 读取的长度\n     * @param blankReturn 如果为true ,表示 可以读空字符串。 \n     * \t\t\t\t\t  如果为false表示 不能读空字符串。\n     * \t\t\t\n\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。\n     * @return\n     */\n    private static String readKeyBoard(int limit, boolean blankReturn) {\n        \n\t\t//定义了字符串\n\t\tString line = \"\";\n\n\t\t//scanner.hasNextLine() 判断有没有下一行\n        while (scanner.hasNextLine()) {\n            line = scanner.nextLine();//读取这一行\n           \n\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车\n\t\t\tif (line.length() == 0) {\n                if (blankReturn) return line;//如果blankReturn=true,可以返回空串\n                else continue; //如果blankReturn=false,不接受空串，必须输入内容\n            }\n\n\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  \n\t\t\t//如果用户如的内容 >0 <= limit ,我就接受\n            if (line.length() < 1 || line.length() > limit) {\n                System.out.print(\"输入长度（不能大于\" + limit + \"）错误，请重新输入：\");\n                continue;\n            }\n            break;\n        }\n\n        return line;\n    }\n}\n```\n","slug":"韩顺平Utility工具类[Java基础房屋出租项目]","published":1,"updated":"2022-12-08T02:28:09.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"clbexyfu3003msw6x9n9kddoj","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.codedog.houserent.utils;    //改为自己的目录</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">\t工具类的作用:</span><br><span class=\"line\">\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Utility &#123;</span><br><span class=\"line\">\t//静态属性。。。</span><br><span class=\"line\">    private static Scanner scanner = new Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围</span><br><span class=\"line\">     * @return 1——5</span><br><span class=\"line\">     */</span><br><span class=\"line\">\tpublic static char readMenuSelection() &#123;</span><br><span class=\"line\">        char c;</span><br><span class=\"line\">        for (; ; ) &#123;</span><br><span class=\"line\">            String str = readKeyBoard(1, false);//包含一个字符的字符串</span><br><span class=\"line\">            c = str.charAt(0);//将字符串转换成字符char类型</span><br><span class=\"line\">            if (c != &#x27;1&#x27; &amp;&amp; c != &#x27;2&#x27; &amp;&amp; </span><br><span class=\"line\">                c != &#x27;3&#x27; &amp;&amp; c != &#x27;4&#x27; &amp;&amp; c != &#x27;5&#x27;) &#123;</span><br><span class=\"line\">                System.out.print(&quot;选择错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125; else break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * 功能：读取键盘输入的一个字符</span><br><span class=\"line\">\t * @return 一个字符</span><br><span class=\"line\">\t */</span><br><span class=\"line\">    public static char readChar() &#123;</span><br><span class=\"line\">        String str = readKeyBoard(1, false);//就是一个字符</span><br><span class=\"line\">        return str.charAt(0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符</span><br><span class=\"line\">     * @param defaultValue 指定的默认值</span><br><span class=\"line\">     * @return 默认值或输入的字符</span><br><span class=\"line\">     */</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static char readChar(char defaultValue) &#123;</span><br><span class=\"line\">        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符</span><br><span class=\"line\">        return (str.length() == 0) ? defaultValue : str.charAt(0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的整型，长度小于10位</span><br><span class=\"line\">     * @return 整数</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static int readInt() &#123;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        for (; ; ) &#123;</span><br><span class=\"line\">            String str = readKeyBoard(10, false);//一个整数，长度&lt;=10位</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);//将字符串转换成整数</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; catch (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(&quot;数字输入错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数</span><br><span class=\"line\">     * @param defaultValue 指定的默认值</span><br><span class=\"line\">     * @return 整数或默认值</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static int readInt(int defaultValue) &#123;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        for (; ; ) &#123;</span><br><span class=\"line\">            String str = readKeyBoard(10, true);</span><br><span class=\"line\">            if (str.equals(&quot;&quot;)) &#123;</span><br><span class=\"line\">                return defaultValue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t//异常处理...</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; catch (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(&quot;数字输入错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的指定长度的字符串</span><br><span class=\"line\">     * @param limit 限制的长度</span><br><span class=\"line\">     * @return 指定长度的字符串</span><br><span class=\"line\">     */</span><br><span class=\"line\"></span><br><span class=\"line\">    public static String readString(int limit) &#123;</span><br><span class=\"line\">        return readKeyBoard(limit, false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串</span><br><span class=\"line\">     * @param limit 限制的长度</span><br><span class=\"line\">     * @param defaultValue 指定的默认值</span><br><span class=\"line\">     * @return 指定长度的字符串</span><br><span class=\"line\">     */</span><br><span class=\"line\">\t</span><br><span class=\"line\">    public static String readString(int limit, String defaultValue) &#123;</span><br><span class=\"line\">        String str = readKeyBoard(limit, true);</span><br><span class=\"line\">        return str.equals(&quot;&quot;)? defaultValue : str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * 功能：读取键盘输入的确认选项，Y或N</span><br><span class=\"line\">\t * 将小的功能，封装到一个方法中.</span><br><span class=\"line\">\t * @return Y或N</span><br><span class=\"line\">\t */</span><br><span class=\"line\">    public static char readConfirmSelection() &#123;</span><br><span class=\"line\">        System.out.println(&quot;请输入你的选择(Y/N): 请小心选择&quot;);</span><br><span class=\"line\">        char c;</span><br><span class=\"line\">        for (; ; ) &#123;//无限循环</span><br><span class=\"line\">        \t//在这里，将接受到字符，转成了大写字母</span><br><span class=\"line\">        \t//y =&gt; Y n=&gt;N</span><br><span class=\"line\">            String str = readKeyBoard(1, false).toUpperCase();</span><br><span class=\"line\">            c = str.charAt(0);</span><br><span class=\"line\">            if (c == &#x27;Y&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                System.out.print(&quot;选择错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能： 读取一个字符串</span><br><span class=\"line\">     * @param limit 读取的长度</span><br><span class=\"line\">     * @param blankReturn 如果为true ,表示 可以读空字符串。 </span><br><span class=\"line\">     * \t\t\t\t\t  如果为false表示 不能读空字符串。</span><br><span class=\"line\">     * \t\t\t</span><br><span class=\"line\">\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static String readKeyBoard(int limit, boolean blankReturn) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t//定义了字符串</span><br><span class=\"line\">\t\tString line = &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t//scanner.hasNextLine() 判断有没有下一行</span><br><span class=\"line\">        while (scanner.hasNextLine()) &#123;</span><br><span class=\"line\">            line = scanner.nextLine();//读取这一行</span><br><span class=\"line\">           </span><br><span class=\"line\">\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车</span><br><span class=\"line\">\t\t\tif (line.length() == 0) &#123;</span><br><span class=\"line\">                if (blankReturn) return line;//如果blankReturn=true,可以返回空串</span><br><span class=\"line\">                else continue; //如果blankReturn=false,不接受空串，必须输入内容</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  </span><br><span class=\"line\">\t\t\t//如果用户如的内容 &gt;0 &lt;= limit ,我就接受</span><br><span class=\"line\">            if (line.length() &lt; 1 || line.length() &gt; limit) &#123;</span><br><span class=\"line\">                System.out.print(&quot;输入长度（不能大于&quot; + limit + &quot;）错误，请重新输入：&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return line;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{"link":[{"class_name":"站点","class_desc":"本站相关站点","link_list":[{"name":"Code-Rain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://www.cnblogs.com/Code-Rain/","descr":"我的博客园"},{"name":"CodeRain","avatar":"https://avatars.githubusercontent.com/u/79618448?v=4","link":"https://blog.csdn.net/qq_44138925","descr":"我的CSDN"},{"name":"Butterfly","link":"https://butterfly.js.org/","avatar":null,"descr":"Hexo主题"}]},{"class_name":"摸鱼","class_desc":"值得推荐的网站","link_list":[{"name":"坦克大战","link":"https://hin.cool/c/tank.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"减压划碟","link":"https://hin.cool/c/dd.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"魔方","link":"https://hin.cool/c/mf.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"元素周期表","link":"https://hin.cool/c/yszq.html","avatar":"https://w.wallhaven.cc/full/m9/wallhaven-m9xyg8.jpg","descr":null},{"name":"Youtube","link":"https://www.youtube.com/","avatar":"https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png","descr":"视频网站"}]}],"widget":{"top":[{"class_name":"card-code","id_name":"card-code","name":"欢迎扫码","icon":"fas fa-qrcode","order":null,"html":"<div><i class=\"fab fa-weixin\"></i> <b> 公众号</b><p align=\"center\"><img src=\"/img/wechatpublic.png\" width=\"170\" alt=\"公众号\"></img></div></p><div><i class=\"fab fa-qq\"></i> <b> QQ群</b><p align=\"center\"><img src=\"/img/qq.png\" width=\"170\" alt=\"QQ群\"></img></div></p>"}]}}},"cover":"https://w.wallhaven.cc/full/zy/wallhaven-zyx9lw.jpg","excerpt":"","more":"<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package com.codedog.houserent.utils;    //改为自己的目录</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\">\t工具类的作用:</span><br><span class=\"line\">\t处理各种情况的用户输入，并且能够按照程序员的需求，得到用户的控制台输入。</span><br><span class=\"line\">*/</span><br><span class=\"line\"></span><br><span class=\"line\">import java.util.*;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Utility &#123;</span><br><span class=\"line\">\t//静态属性。。。</span><br><span class=\"line\">    private static Scanner scanner = new Scanner(System.in);</span><br><span class=\"line\"></span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的一个菜单选项，值：1——5的范围</span><br><span class=\"line\">     * @return 1——5</span><br><span class=\"line\">     */</span><br><span class=\"line\">\tpublic static char readMenuSelection() &#123;</span><br><span class=\"line\">        char c;</span><br><span class=\"line\">        for (; ; ) &#123;</span><br><span class=\"line\">            String str = readKeyBoard(1, false);//包含一个字符的字符串</span><br><span class=\"line\">            c = str.charAt(0);//将字符串转换成字符char类型</span><br><span class=\"line\">            if (c != &#x27;1&#x27; &amp;&amp; c != &#x27;2&#x27; &amp;&amp; </span><br><span class=\"line\">                c != &#x27;3&#x27; &amp;&amp; c != &#x27;4&#x27; &amp;&amp; c != &#x27;5&#x27;) &#123;</span><br><span class=\"line\">                System.out.print(&quot;选择错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125; else break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * 功能：读取键盘输入的一个字符</span><br><span class=\"line\">\t * @return 一个字符</span><br><span class=\"line\">\t */</span><br><span class=\"line\">    public static char readChar() &#123;</span><br><span class=\"line\">        String str = readKeyBoard(1, false);//就是一个字符</span><br><span class=\"line\">        return str.charAt(0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的一个字符，如果直接按回车，则返回指定的默认值；否则返回输入的那个字符</span><br><span class=\"line\">     * @param defaultValue 指定的默认值</span><br><span class=\"line\">     * @return 默认值或输入的字符</span><br><span class=\"line\">     */</span><br><span class=\"line\">    </span><br><span class=\"line\">    public static char readChar(char defaultValue) &#123;</span><br><span class=\"line\">        String str = readKeyBoard(1, true);//要么是空字符串，要么是一个字符</span><br><span class=\"line\">        return (str.length() == 0) ? defaultValue : str.charAt(0);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的整型，长度小于10位</span><br><span class=\"line\">     * @return 整数</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static int readInt() &#123;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        for (; ; ) &#123;</span><br><span class=\"line\">            String str = readKeyBoard(10, false);//一个整数，长度&lt;=10位</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);//将字符串转换成整数</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; catch (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(&quot;数字输入错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的 整数或默认值，如果直接回车，则返回默认值，否则返回输入的整数</span><br><span class=\"line\">     * @param defaultValue 指定的默认值</span><br><span class=\"line\">     * @return 整数或默认值</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public static int readInt(int defaultValue) &#123;</span><br><span class=\"line\">        int n;</span><br><span class=\"line\">        for (; ; ) &#123;</span><br><span class=\"line\">            String str = readKeyBoard(10, true);</span><br><span class=\"line\">            if (str.equals(&quot;&quot;)) &#123;</span><br><span class=\"line\">                return defaultValue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t//异常处理...</span><br><span class=\"line\">            try &#123;</span><br><span class=\"line\">                n = Integer.parseInt(str);</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; catch (NumberFormatException e) &#123;</span><br><span class=\"line\">                System.out.print(&quot;数字输入错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return n;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的指定长度的字符串</span><br><span class=\"line\">     * @param limit 限制的长度</span><br><span class=\"line\">     * @return 指定长度的字符串</span><br><span class=\"line\">     */</span><br><span class=\"line\"></span><br><span class=\"line\">    public static String readString(int limit) &#123;</span><br><span class=\"line\">        return readKeyBoard(limit, false);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能：读取键盘输入的指定长度的字符串或默认值，如果直接回车，返回默认值，否则返回字符串</span><br><span class=\"line\">     * @param limit 限制的长度</span><br><span class=\"line\">     * @param defaultValue 指定的默认值</span><br><span class=\"line\">     * @return 指定长度的字符串</span><br><span class=\"line\">     */</span><br><span class=\"line\">\t</span><br><span class=\"line\">    public static String readString(int limit, String defaultValue) &#123;</span><br><span class=\"line\">        String str = readKeyBoard(limit, true);</span><br><span class=\"line\">        return str.equals(&quot;&quot;)? defaultValue : str;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">\t/**</span><br><span class=\"line\">\t * 功能：读取键盘输入的确认选项，Y或N</span><br><span class=\"line\">\t * 将小的功能，封装到一个方法中.</span><br><span class=\"line\">\t * @return Y或N</span><br><span class=\"line\">\t */</span><br><span class=\"line\">    public static char readConfirmSelection() &#123;</span><br><span class=\"line\">        System.out.println(&quot;请输入你的选择(Y/N): 请小心选择&quot;);</span><br><span class=\"line\">        char c;</span><br><span class=\"line\">        for (; ; ) &#123;//无限循环</span><br><span class=\"line\">        \t//在这里，将接受到字符，转成了大写字母</span><br><span class=\"line\">        \t//y =&gt; Y n=&gt;N</span><br><span class=\"line\">            String str = readKeyBoard(1, false).toUpperCase();</span><br><span class=\"line\">            c = str.charAt(0);</span><br><span class=\"line\">            if (c == &#x27;Y&#x27; || c == &#x27;N&#x27;) &#123;</span><br><span class=\"line\">                break;</span><br><span class=\"line\">            &#125; else &#123;</span><br><span class=\"line\">                System.out.print(&quot;选择错误，请重新输入：&quot;);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return c;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 功能： 读取一个字符串</span><br><span class=\"line\">     * @param limit 读取的长度</span><br><span class=\"line\">     * @param blankReturn 如果为true ,表示 可以读空字符串。 </span><br><span class=\"line\">     * \t\t\t\t\t  如果为false表示 不能读空字符串。</span><br><span class=\"line\">     * \t\t\t</span><br><span class=\"line\">\t *\t如果输入为空，或者输入大于limit的长度，就会提示重新输入。</span><br><span class=\"line\">     * @return</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private static String readKeyBoard(int limit, boolean blankReturn) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">\t\t//定义了字符串</span><br><span class=\"line\">\t\tString line = &quot;&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t//scanner.hasNextLine() 判断有没有下一行</span><br><span class=\"line\">        while (scanner.hasNextLine()) &#123;</span><br><span class=\"line\">            line = scanner.nextLine();//读取这一行</span><br><span class=\"line\">           </span><br><span class=\"line\">\t\t\t//如果line.length=0, 即用户没有输入任何内容，直接回车</span><br><span class=\"line\">\t\t\tif (line.length() == 0) &#123;</span><br><span class=\"line\">                if (blankReturn) return line;//如果blankReturn=true,可以返回空串</span><br><span class=\"line\">                else continue; //如果blankReturn=false,不接受空串，必须输入内容</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t\t//如果用户输入的内容大于了 limit，就提示重写输入  </span><br><span class=\"line\">\t\t\t//如果用户如的内容 &gt;0 &lt;= limit ,我就接受</span><br><span class=\"line\">            if (line.length() &lt; 1 || line.length() &gt; limit) &#123;</span><br><span class=\"line\">                System.out.print(&quot;输入长度（不能大于&quot; + limit + &quot;）错误，请重新输入：&quot;);</span><br><span class=\"line\">                continue;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            break;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        return line;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/Centos7.X下Docker环境安装并配置加速镜像/2291368-20221128155713699-365566294.png","slug":"2291368-20221128155713699-365566294.png","post":"clbexyftc0009sw6x2qsh4l44","modified":0,"renderable":0},{"_id":"source/_posts/Hexo 页面中嵌入豆瓣插件展示豆瓣图书电影/2291368-20221129160808235-2056680578.png","slug":"2291368-20221129160808235-2056680578.png","post":"clbexyftd000bsw6x7cj0cl38","modified":0,"renderable":0},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211144391-144641139.jpg","slug":"2291368-20220618211144391-144641139.jpg","post":"clbexyft90003sw6x3tfed8np","modified":0,"renderable":0},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211352284-96900639.jpg","slug":"2291368-20220618211352284-96900639.jpg","post":"clbexyft90003sw6x3tfed8np","modified":0,"renderable":0},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211447243-2064752888.jpg","slug":"2291368-20220618211447243-2064752888.jpg","post":"clbexyft90003sw6x3tfed8np","modified":0,"renderable":0},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211750061-803600409.jpg","slug":"2291368-20220618211750061-803600409.jpg","post":"clbexyft90003sw6x3tfed8np","modified":0,"renderable":0},{"_id":"source/_posts/Dell Vostro 5568型号笔记本电脑更换电池教程/2291368-20220618211907063-2100004146.jpg","slug":"2291368-20220618211907063-2100004146.jpg","post":"clbexyft90003sw6x3tfed8np","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191515359-510796598.png","slug":"2291368-20220721191515359-510796598.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191538622-1742764931.png","slug":"2291368-20220721191538622-1742764931.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191608294-1205959101.png","slug":"2291368-20220721191608294-1205959101.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191652637-703350503.png","slug":"2291368-20220721191652637-703350503.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191749922-146783398.png","slug":"2291368-20220721191749922-146783398.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191906001-129999431.png","slug":"2291368-20220721191906001-129999431.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191926832-623454467.png","slug":"2291368-20220721191926832-623454467.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721191945273-633031838.png","slug":"2291368-20220721191945273-633031838.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192015456-1643726883.png","slug":"2291368-20220721192015456-1643726883.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192029555-1871185722.png","slug":"2291368-20220721192029555-1871185722.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192358791-779277970.png","slug":"2291368-20220721192358791-779277970.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192408284-1212976555.png","slug":"2291368-20220721192408284-1212976555.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192416373-1191184138.png","slug":"2291368-20220721192416373-1191184138.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/AJ-Report小白配置大屏教程/2291368-20220721192426073-764010738.png","slug":"2291368-20220721192426073-764010738.png","post":"clbexyftb0007sw6x0vok3bwe","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233223642-349131297.png","slug":"2291368-20220531233223642-349131297.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233240621-744853097.png","slug":"2291368-20220531233240621-744853097.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233317633-390444962.png","slug":"2291368-20220531233317633-390444962.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233337883-596107071.png","slug":"2291368-20220531233337883-596107071.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233356912-836859301.png","slug":"2291368-20220531233356912-836859301.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233422511-823096424.png","slug":"2291368-20220531233422511-823096424.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233443240-218493205.png","slug":"2291368-20220531233443240-218493205.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233458824-948378071.png","slug":"2291368-20220531233458824-948378071.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233522724-1594630480.png","slug":"2291368-20220531233522724-1594630480.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233545215-1500378559.png","slug":"2291368-20220531233545215-1500378559.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233607522-1071796197.png","slug":"2291368-20220531233607522-1071796197.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233627278-280180249.png","slug":"2291368-20220531233627278-280180249.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233644620-1741914965.png","slug":"2291368-20220531233644620-1741914965.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233729477-1011260416.png","slug":"2291368-20220531233729477-1011260416.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233742049-1219964528.png","slug":"2291368-20220531233742049-1219964528.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233757896-1394280158.png","slug":"2291368-20220531233757896-1394280158.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233817728-1392655527.png","slug":"2291368-20220531233817728-1392655527.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531233838933-422483785.png","slug":"2291368-20220531233838933-422483785.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531234214780-944416990.png","slug":"2291368-20220531234214780-944416990.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Github免费搭建博客教程/2291368-20220531234251609-427743523.png","slug":"2291368-20220531234251609-427743523.png","post":"clbexyftf000gsw6xbsz57dg5","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125458669-276341619.png","slug":"2291368-20221119125458669-276341619.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125502046-569979710.png","slug":"2291368-20221119125502046-569979710.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221119125806511-17842588.png","slug":"2291368-20221119125806511-17842588.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203047705-1415002471.png","slug":"2291368-20221201203047705-1415002471.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203055675-805963954.png","slug":"2291368-20221201203055675-805963954.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203101693-1156912262.png","slug":"2291368-20221201203101693-1156912262.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo+Butterfly主题设置背景透明度和字体/2291368-20221201203107165-240361835.png","slug":"2291368-20221201203107165-240361835.png","post":"clbexyfth000isw6xgh837vjk","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125458669-276341619.png","slug":"2291368-20221119125458669-276341619.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125502046-569979710.png","slug":"2291368-20221119125502046-569979710.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221119125806511-17842588.png","slug":"2291368-20221119125806511-17842588.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221129160808235-2056680578.png","slug":"2291368-20221129160808235-2056680578.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203047705-1415002471.png","slug":"2291368-20221201203047705-1415002471.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203055675-805963954.png","slug":"2291368-20221201203055675-805963954.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203101693-1156912262.png","slug":"2291368-20221201203101693-1156912262.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/2291368-20221201203107165-240361835.png","slug":"2291368-20221201203107165-240361835.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/Hexo主题Butterfly配置、踩坑及魔改/Snipaste_2022-11-29_19-45-45.png","slug":"Snipaste_2022-11-29_19-45-45.png","post":"clbexyfti000nsw6xgrb8a411","modified":0,"renderable":0},{"_id":"source/_posts/IDEA设置单行注释符在代码行首部/2291368-20220921110657870-1510098922.png","slug":"2291368-20220921110657870-1510098922.png","post":"clbexyftm000zsw6xfvkq09zl","modified":0,"renderable":0},{"_id":"source/_posts/IDEA设置单行注释符在代码行首部/2291368-20220921110702758-278199113.png","slug":"2291368-20220921110702758-278199113.png","post":"clbexyftm000zsw6xfvkq09zl","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509164251511-317252381.png","slug":"2291368-20220509164251511-317252381.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509164525444-1888185146.png","slug":"2291368-20220509164525444-1888185146.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509164533939-754309439.png","slug":"2291368-20220509164533939-754309439.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220509165538782-356118260.png","slug":"2291368-20220509165538782-356118260.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825152816881-2076432223.png","slug":"2291368-20220825152816881-2076432223.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825152855385-1081507081.png","slug":"2291368-20220825152855385-1081507081.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825153608481-312323332.png","slug":"2291368-20220825153608481-312323332.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3安装及破解教程/2291368-20220825154015874-1170150107.png","slug":"2291368-20220825154015874-1170150107.png","post":"clbexyftk000wsw6xfzpg8ju6","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831214155978-149933813.png","slug":"2291368-20220831214155978-149933813.png","post":"clbexyftj000rsw6x7bpo20tr","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831214203083-833526346.png","slug":"2291368-20220831214203083-833526346.png","post":"clbexyftj000rsw6x7bpo20tr","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831215842519-392248897.png","slug":"2291368-20220831215842519-392248897.png","post":"clbexyftj000rsw6x7bpo20tr","modified":0,"renderable":0},{"_id":"source/_posts/IDEA2021.3.3配置Maven（详细版）/2291368-20220831215848336-1055632127.png","slug":"2291368-20220831215848336-1055632127.png","post":"clbexyftj000rsw6x7bpo20tr","modified":0,"renderable":0},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727095004887-1021333814.png","slug":"2291368-20220727095004887-1021333814.png","post":"clbexyftn0013sw6xe30gequa","modified":0,"renderable":0},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727095323044-351600479.png","slug":"2291368-20220727095323044-351600479.png","post":"clbexyftn0013sw6xe30gequa","modified":0,"renderable":0},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727100744970-1033816311.png","slug":"2291368-20220727100744970-1033816311.png","post":"clbexyftn0013sw6xe30gequa","modified":0,"renderable":0},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727101157568-1260673146.png","slug":"2291368-20220727101157568-1260673146.png","post":"clbexyftn0013sw6xe30gequa","modified":0,"renderable":0},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220727101209601-1551997987.png","slug":"2291368-20220727101209601-1551997987.png","post":"clbexyftn0013sw6xe30gequa","modified":0,"renderable":0},{"_id":"source/_posts/IDEA热部署插件JRebel的安装与使用/2291368-20220729162029857-1803090724.png","slug":"2291368-20220729162029857-1803090724.png","post":"clbexyftn0013sw6xe30gequa","modified":0,"renderable":0},{"_id":"source/_posts/Java基础笔记/2291368-20220111152826346-1412372719.png","slug":"2291368-20220111152826346-1412372719.png","post":"clbexyftn0015sw6x4hqg8u7f","modified":0,"renderable":0},{"_id":"source/_posts/Java基础笔记/2291368-20220111153243576-122447391.png","slug":"2291368-20220111153243576-122447391.png","post":"clbexyftn0015sw6x4hqg8u7f","modified":0,"renderable":0},{"_id":"source/_posts/Java基础笔记/2291368-20220111153253987-2115695199.png","slug":"2291368-20220111153253987-2115695199.png","post":"clbexyftn0015sw6x4hqg8u7f","modified":0,"renderable":0},{"_id":"source/_posts/Java基础笔记/2291368-20220111153409714-1355163455.png","slug":"2291368-20220111153409714-1355163455.png","post":"clbexyftn0015sw6x4hqg8u7f","modified":0,"renderable":0},{"_id":"source/_posts/Java基础笔记/2291368-20220123223242579-694787793.png","slug":"2291368-20220123223242579-694787793.png","post":"clbexyftn0015sw6x4hqg8u7f","modified":0,"renderable":0},{"_id":"source/_posts/Java基础笔记/2291368-20221208094727144-1088422726.png","slug":"2291368-20221208094727144-1088422726.png","post":"clbexyftn0015sw6x4hqg8u7f","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193030780-141851887.png","slug":"2291368-20220629193030780-141851887.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193051710-860567096.png","slug":"2291368-20220629193051710-860567096.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193111863-1620087635.png","slug":"2291368-20220629193111863-1620087635.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193139564-1366743433.png","slug":"2291368-20220629193139564-1366743433.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193204294-338728882.png","slug":"2291368-20220629193204294-338728882.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193230336-1133392836.png","slug":"2291368-20220629193230336-1133392836.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Java开发环境安装与配置教程/2291368-20220629193243736-1465458166.png","slug":"2291368-20220629193243736-1465458166.png","post":"clbexyfto0018sw6x93cod165","modified":0,"renderable":0},{"_id":"source/_posts/Markdown语法/2291368-20220103211113078-6410979.jpg","slug":"2291368-20220103211113078-6410979.jpg","post":"clbexyfto001bsw6x0f365ddy","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-06-50.png","slug":"Snipaste_2022-05-13_09-06-50.png","post":"clbexyftq001ksw6xb8pv5jic","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-15-10.png","slug":"Snipaste_2022-05-13_09-15-10.png","post":"clbexyftq001ksw6xb8pv5jic","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_09-18-05.png","slug":"Snipaste_2022-05-13_09-18-05.png","post":"clbexyftq001ksw6xb8pv5jic","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Maven安装及配置教程/Snipaste_2022-05-13_10-23-28.png","slug":"Snipaste_2022-05-13_10-23-28.png","post":"clbexyftq001ksw6xb8pv5jic","modified":0,"renderable":0},{"_id":"source/_posts/Java集成ip2region2.x实现ip属地功能开发教程/Snipaste_2022-11-12_09-59-54.png","slug":"Snipaste_2022-11-12_09-59-54.png","post":"clbexyftp001esw6xcd522aie","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123152941797-1053419929.png","slug":"2291368-20221123152941797-1053419929.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153050837-236704868.png","slug":"2291368-20221123153050837-236704868.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153217942-618302738.png","slug":"2291368-20221123153217942-618302738.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153245736-1598997349.png","slug":"2291368-20221123153245736-1598997349.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153255337-1553269531.png","slug":"2291368-20221123153255337-1553269531.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153304496-1553677349.png","slug":"2291368-20221123153304496-1553677349.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153308813-1108409909.png","slug":"2291368-20221123153308813-1108409909.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153316742-1509047586.png","slug":"2291368-20221123153316742-1509047586.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153321534-953734721.png","slug":"2291368-20221123153321534-953734721.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153328602-574621719.png","slug":"2291368-20221123153328602-574621719.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153334434-1909134036.png","slug":"2291368-20221123153334434-1909134036.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153338693-731479448.png","slug":"2291368-20221123153338693-731479448.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153343093-1497482917.png","slug":"2291368-20221123153343093-1497482917.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153346388-2038670210.png","slug":"2291368-20221123153346388-2038670210.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153352114-920323856.png","slug":"2291368-20221123153352114-920323856.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153356066-462304454.png","slug":"2291368-20221123153356066-462304454.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153359657-726233578.png","slug":"2291368-20221123153359657-726233578.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153404682-549087824.png","slug":"2291368-20221123153404682-549087824.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153626401-341014184.png","slug":"2291368-20221123153626401-341014184.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows 下 ElasticSearch8.5.1下载安装及使用/2291368-20221123153915252-1831743221.png","slug":"2291368-20221123153915252-1831743221.png","post":"clbexyftq001hsw6x069nc1qf","modified":0,"renderable":0},{"_id":"source/_posts/Windows下RabbitMQ下载安装/2291368-20221113170308568-904817832.png","slug":"2291368-20221113170308568-904817832.png","post":"clbexyftr001nsw6x8mmm88ge","modified":0,"renderable":0},{"_id":"source/_posts/Windows下RabbitMQ下载安装/2291368-20221126132613809-1055551774.png","slug":"2291368-20221126132613809-1055551774.png","post":"clbexyftr001nsw6x8mmm88ge","modified":0,"renderable":0},{"_id":"source/_posts/Windows下RabbitMQ下载安装/2291368-20221126132646873-1365415137.png","slug":"2291368-20221126132646873-1365415137.png","post":"clbexyftr001nsw6x8mmm88ge","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624110939600-1386441975.png","slug":"2291368-20220624110939600-1386441975.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111124820-511486595.png","slug":"2291368-20220624111124820-511486595.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111210435-1959209711.png","slug":"2291368-20220624111210435-1959209711.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111431587-147049396.png","slug":"2291368-20220624111431587-147049396.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111449065-658791468.png","slug":"2291368-20220624111449065-658791468.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111536255-363256586.png","slug":"2291368-20220624111536255-363256586.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111609438-1454013709.png","slug":"2291368-20220624111609438-1454013709.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624111630877-1836009720.png","slug":"2291368-20220624111630877-1836009720.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows下mysql8.0解压版安装配置方法图文教程/2291368-20220624131402573-1864608199.png","slug":"2291368-20220624131402573-1864608199.png","post":"clbexyftz0032sw6xfwdo6hxk","modified":0,"renderable":0},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630212505473-523791158.png","slug":"2291368-20220630212505473-523791158.png","post":"clbexyfu00033sw6x50cle47r","modified":0,"renderable":0},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630213440738-1103491974.png","slug":"2291368-20220630213440738-1103491974.png","post":"clbexyfu00033sw6x50cle47r","modified":0,"renderable":0},{"_id":"source/_posts/Windows若依框架前后端项目分离部署（jar包+Nginx部署）/2291368-20220630214014835-585689483.png","slug":"2291368-20220630214014835-585689483.png","post":"clbexyfu00033sw6x50cle47r","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220629182352439-1266648941.png","slug":"2291368-20220629182352439-1266648941.png","post":"clbexyfu00035sw6x8bfc9wqx","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220629183153636-1436499922.png","slug":"2291368-20220629183153636-1436499922.png","post":"clbexyfu00035sw6x8bfc9wqx","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220630111206363-1150534863.png","slug":"2291368-20220630111206363-1150534863.png","post":"clbexyfu00035sw6x8bfc9wqx","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220630111940288-138478437.png","slug":"2291368-20220630111940288-138478437.png","post":"clbexyfu00035sw6x8bfc9wqx","modified":0,"renderable":0},{"_id":"source/_posts/Windows下Redis解压包安装及配置教程/2291368-20220630140021409-1360003831.png","slug":"2291368-20220630140021409-1360003831.png","post":"clbexyfu00035sw6x8bfc9wqx","modified":0,"renderable":0},{"_id":"source/_posts/房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227144414328-1953458094.png","slug":"2291368-20220227144414328-1953458094.png","post":"clbexyfu2003dsw6x6ioc8ktq","modified":0,"renderable":0},{"_id":"source/_posts/房屋出租系统【韩顺平 Java 基础案例复现】/2291368-20220227160905796-630586732.png","slug":"2291368-20220227160905796-630586732.png","post":"clbexyfu2003dsw6x6ioc8ktq","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161300895-837839242.png","slug":"2291368-20221122161300895-837839242.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161315069-1517471827.png","slug":"2291368-20221122161315069-1517471827.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161326879-2039517975.png","slug":"2291368-20221122161326879-2039517975.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161340344-243788459.png","slug":"2291368-20221122161340344-243788459.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161409227-1151488737.png","slug":"2291368-20221122161409227-1151488737.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161422145-1659631518.png","slug":"2291368-20221122161422145-1659631518.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161431578-1856504518.png","slug":"2291368-20221122161431578-1856504518.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161439551-1411541496.png","slug":"2291368-20221122161439551-1411541496.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161447243-1322403015.png","slug":"2291368-20221122161447243-1322403015.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161454039-1238665013.png","slug":"2291368-20221122161454039-1238665013.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161500321-1046594983.png","slug":"2291368-20221122161500321-1046594983.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161507343-2040709033.png","slug":"2291368-20221122161507343-2040709033.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161517671-301035636.png","slug":"2291368-20221122161517671-301035636.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161524219-1891531800.png","slug":"2291368-20221122161524219-1891531800.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/如何用油猴脚本免费观看如腾讯、爱奇艺、优酷等各大平台VIP视频/2291368-20221122161532207-1251520737.png","slug":"2291368-20221122161532207-1251520737.png","post":"clbexyfu10037sw6xb4pd24k9","modified":0,"renderable":0},{"_id":"source/_posts/检查笔记本电池消耗/2291368-20220220200703803-528834853.png","slug":"2291368-20220220200703803-528834853.png","post":"clbexyfu2003fsw6xewrg9h4n","modified":0,"renderable":0},{"_id":"source/_posts/检查笔记本电池消耗/2291368-20220220200725104-972245815.png","slug":"2291368-20220220200725104-972245815.png","post":"clbexyfu2003fsw6xewrg9h4n","modified":0,"renderable":0},{"_id":"source/_posts/检查笔记本电池消耗/2291368-20220220201236309-1100738058.png","slug":"2291368-20220220201236309-1100738058.png","post":"clbexyfu2003fsw6xewrg9h4n","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220703174221292-783421798.png","slug":"2291368-20220703174221292-783421798.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134550962-2127616759.png","slug":"2291368-20220708134550962-2127616759.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708134712749-586438047.png","slug":"2291368-20220708134712749-586438047.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708185207811-2085462801.png","slug":"2291368-20220708185207811-2085462801.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708190636586-311293119.png","slug":"2291368-20220708190636586-311293119.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210303969-584186827.png","slug":"2291368-20220708210303969-584186827.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708210314604-719126691.png","slug":"2291368-20220708210314604-719126691.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212647843-1388028046.png","slug":"2291368-20220708212647843-1388028046.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708212946084-2099028904.png","slug":"2291368-20220708212946084-2099028904.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708213859028-1983297036.png","slug":"2291368-20220708213859028-1983297036.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220708215037807-649703247.png","slug":"2291368-20220708215037807-649703247.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711185353769-843479461.png","slug":"2291368-20220711185353769-843479461.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190242039-1302334745.png","slug":"2291368-20220711190242039-1302334745.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/阿里云 ECS 服务器入门使用+宝塔安装使用/2291368-20220711190914179-1531734615.png","slug":"2291368-20220711190914179-1531734615.png","post":"clbexyfu3003jsw6x05em3kvc","modified":0,"renderable":0},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607215929483-1525301003.png","slug":"2291368-20220607215929483-1525301003.png","post":"clbexyfu10039sw6x64p2eebj","modified":0,"renderable":0},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607215951418-741813094.png","slug":"2291368-20220607215951418-741813094.png","post":"clbexyfu10039sw6x64p2eebj","modified":0,"renderable":0},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607215959604-689320937.png","slug":"2291368-20220607215959604-689320937.png","post":"clbexyfu10039sw6x64p2eebj","modified":0,"renderable":0},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607220047549-1268062378.png","slug":"2291368-20220607220047549-1268062378.png","post":"clbexyfu10039sw6x64p2eebj","modified":0,"renderable":0},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607220059511-1290163714.png","slug":"2291368-20220607220059511-1290163714.png","post":"clbexyfu10039sw6x64p2eebj","modified":0,"renderable":0},{"_id":"source/_posts/微 PE 制作 U 盘启动盘教程/2291368-20220607220127585-1741352083.png","slug":"2291368-20220607220127585-1741352083.png","post":"clbexyfu10039sw6x64p2eebj","modified":0,"renderable":0}],"PostCategory":[{"post_id":"clbexyftc0009sw6x2qsh4l44","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfth000jsw6xhk1l4i9e"},{"post_id":"clbexyft60001sw6x7c9z5rw1","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfti000osw6x0m6i0q0a"},{"post_id":"clbexyft90003sw6x3tfed8np","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyftj000tsw6x6e5mbugf"},{"post_id":"clbexyftb0007sw6x0vok3bwe","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyftm0010sw6x4iknhkiu"},{"post_id":"clbexyftd000bsw6x7cj0cl38","category_id":"clbexyftj000ssw6x3761c23k","_id":"clbexyftn0017sw6x7kb7brq4"},{"post_id":"clbexyftf000gsw6xbsz57dg5","category_id":"clbexyftj000ssw6x3761c23k","_id":"clbexyftp001dsw6xchkh56hl"},{"post_id":"clbexyfth000isw6xgh837vjk","category_id":"clbexyftj000ssw6x3761c23k","_id":"clbexyftq001jsw6xe6mia29r"},{"post_id":"clbexyfti000nsw6xgrb8a411","category_id":"clbexyftj000ssw6x3761c23k","_id":"clbexyftr001osw6xakire59x"},{"post_id":"clbexyftj000rsw6x7bpo20tr","category_id":"clbexyftq001isw6x1fvl43tv","_id":"clbexyfts001tsw6x2fqaby2k"},{"post_id":"clbexyftr001qsw6xawrngamo","category_id":"clbexyftj000ssw6x3761c23k","_id":"clbexyftt001wsw6xaczf0luk"},{"post_id":"clbexyftk000wsw6xfzpg8ju6","category_id":"clbexyftq001isw6x1fvl43tv","_id":"clbexyftt001zsw6xes6ucgc5"},{"post_id":"clbexyftm000zsw6xfvkq09zl","category_id":"clbexyftq001isw6x1fvl43tv","_id":"clbexyftt0024sw6x9y23c5f3"},{"post_id":"clbexyftn0013sw6xe30gequa","category_id":"clbexyftq001isw6x1fvl43tv","_id":"clbexyftu0026sw6x2he67t65"},{"post_id":"clbexyftn0015sw6x4hqg8u7f","category_id":"clbexyftt0023sw6x9vmw4qa7","_id":"clbexyftu002bsw6x8frieq1a"},{"post_id":"clbexyfto0018sw6x93cod165","category_id":"clbexyftu0028sw6xa9jmh534","_id":"clbexyftu002gsw6xg8n88y0t"},{"post_id":"clbexyfto001bsw6x0f365ddy","category_id":"clbexyftt0023sw6x9vmw4qa7","_id":"clbexyftv002ksw6xbvf2gwxj"},{"post_id":"clbexyftp001esw6xcd522aie","category_id":"clbexyftt0023sw6x9vmw4qa7","_id":"clbexyftv002nsw6x04jveblq"},{"post_id":"clbexyftq001hsw6x069nc1qf","category_id":"clbexyftv002jsw6xgptf4xdf","_id":"clbexyftw002ssw6xcf6e8f2z"},{"post_id":"clbexyftq001ksw6xb8pv5jic","category_id":"clbexyftu0028sw6xa9jmh534","_id":"clbexyftw002usw6x56ojb51q"},{"post_id":"clbexyftr001nsw6x8mmm88ge","category_id":"clbexyftv002jsw6xgptf4xdf","_id":"clbexyftw002xsw6xejk336jl"},{"post_id":"clbexyftz0032sw6xfwdo6hxk","category_id":"clbexyftu0028sw6xa9jmh534","_id":"clbexyfu10038sw6x804w73bu"},{"post_id":"clbexyfu00033sw6x50cle47r","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfu1003asw6x8quwefx1"},{"post_id":"clbexyfu00035sw6x8bfc9wqx","category_id":"clbexyftv002jsw6xgptf4xdf","_id":"clbexyfu2003esw6xei32dsq1"},{"post_id":"clbexyfu10037sw6xb4pd24k9","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfu2003gsw6xhs4q7mkz"},{"post_id":"clbexyfu10039sw6x64p2eebj","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfu3003ksw6xccll469p"},{"post_id":"clbexyfu2003fsw6xewrg9h4n","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfu4003psw6x4j4r73jq"},{"post_id":"clbexyfu3003jsw6x05em3kvc","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfu4003rsw6xaoba801b"},{"post_id":"clbexyfu3003msw6x9n9kddoj","category_id":"clbexyfta0004sw6x0umq92h7","_id":"clbexyfu4003tsw6x48b7bk1x"},{"post_id":"clbexyfu2003dsw6x6ioc8ktq","category_id":"clbexyfu2003isw6x1czr87z2","_id":"clbexyfu4003vsw6x2vdk7pur"}],"PostTag":[{"post_id":"clbexyft60001sw6x7c9z5rw1","tag_id":"clbexyftb0005sw6x10kmc0o1","_id":"clbexyftf000esw6x1kzrab22"},{"post_id":"clbexyft90003sw6x3tfed8np","tag_id":"clbexyftd000dsw6xborwa8rn","_id":"clbexyfti000psw6xg8t6dtck"},{"post_id":"clbexyftb0007sw6x0vok3bwe","tag_id":"clbexyfth000lsw6x72ekc1cj","_id":"clbexyftk000xsw6x4al90zwb"},{"post_id":"clbexyftc0009sw6x2qsh4l44","tag_id":"clbexyftj000usw6xh50vgch8","_id":"clbexyftn0014sw6xc6ag57c2"},{"post_id":"clbexyftd000bsw6x7cj0cl38","tag_id":"clbexyftm0012sw6xhufuhpox","_id":"clbexyfto001asw6xgs381ecw"},{"post_id":"clbexyftf000gsw6xbsz57dg5","tag_id":"clbexyftm0012sw6xhufuhpox","_id":"clbexyftq001gsw6xfvxbgidq"},{"post_id":"clbexyfth000isw6xgh837vjk","tag_id":"clbexyftm0012sw6xhufuhpox","_id":"clbexyftr001msw6x3a1e1s8r"},{"post_id":"clbexyftr001qsw6xawrngamo","tag_id":"clbexyftm0012sw6xhufuhpox","_id":"clbexyfts001usw6xf01r46y1"},{"post_id":"clbexyfti000nsw6xgrb8a411","tag_id":"clbexyftm0012sw6xhufuhpox","_id":"clbexyftt001xsw6x17xp5xl3"},{"post_id":"clbexyfti000nsw6xgrb8a411","tag_id":"clbexyfts001rsw6xdu7xfjzy","_id":"clbexyftt0020sw6x2dfobogc"},{"post_id":"clbexyftj000rsw6x7bpo20tr","tag_id":"clbexyfts001vsw6x4ps79i1m","_id":"clbexyftt0022sw6x7n9b5gvw"},{"post_id":"clbexyftk000wsw6xfzpg8ju6","tag_id":"clbexyftt0021sw6x37ja85gz","_id":"clbexyftu0027sw6xfhfef922"},{"post_id":"clbexyftm000zsw6xfvkq09zl","tag_id":"clbexyftt0021sw6x37ja85gz","_id":"clbexyftu002asw6xdzhn8aq2"},{"post_id":"clbexyftn0013sw6xe30gequa","tag_id":"clbexyftt0021sw6x37ja85gz","_id":"clbexyftu002esw6x97zfahu2"},{"post_id":"clbexyftn0015sw6x4hqg8u7f","tag_id":"clbexyftu002dsw6x344q456k","_id":"clbexyftv002isw6x3ik373ol"},{"post_id":"clbexyfto0018sw6x93cod165","tag_id":"clbexyftu002dsw6x344q456k","_id":"clbexyftv002msw6x8sh2dy0p"},{"post_id":"clbexyfto001bsw6x0f365ddy","tag_id":"clbexyftv002lsw6xc2yabm4c","_id":"clbexyftw002qsw6x2xzma4kz"},{"post_id":"clbexyftp001esw6xcd522aie","tag_id":"clbexyftv002psw6xcpdg7y4n","_id":"clbexyftw002vsw6xb852h8th"},{"post_id":"clbexyftq001hsw6x069nc1qf","tag_id":"clbexyftw002tsw6xho2d9x30","_id":"clbexyftw002ysw6xc8u76z9w"},{"post_id":"clbexyftq001ksw6xb8pv5jic","tag_id":"clbexyfts001vsw6x4ps79i1m","_id":"clbexyftw0030sw6xgbox1na9"},{"post_id":"clbexyftr001nsw6x8mmm88ge","tag_id":"clbexyftw002zsw6x57uq4dll","_id":"clbexyftw0031sw6x7la09wye"},{"post_id":"clbexyfu00033sw6x50cle47r","tag_id":"clbexyftb0005sw6x10kmc0o1","_id":"clbexyfu10036sw6x6oyo1ub5"},{"post_id":"clbexyftz0032sw6xfwdo6hxk","tag_id":"clbexyfu00034sw6xdya195vi","_id":"clbexyfu1003csw6xf89d02e1"},{"post_id":"clbexyfu00035sw6x8bfc9wqx","tag_id":"clbexyfu1003bsw6x4ihnhrr7","_id":"clbexyfu3003lsw6x254o0wwu"},{"post_id":"clbexyfu2003fsw6xewrg9h4n","tag_id":"clbexyftd000dsw6xborwa8rn","_id":"clbexyfu3003nsw6xe872h6p3"},{"post_id":"clbexyfu10037sw6xb4pd24k9","tag_id":"clbexyfu2003hsw6x3c77dlep","_id":"clbexyfu4003qsw6xhu02bikr"},{"post_id":"clbexyfu10039sw6x64p2eebj","tag_id":"clbexyfu3003osw6xenk17fod","_id":"clbexyfu4003usw6xbxmh0jwm"},{"post_id":"clbexyfu2003dsw6x6ioc8ktq","tag_id":"clbexyftu002dsw6x344q456k","_id":"clbexyfu4003ysw6xfjrrcmqd"},{"post_id":"clbexyfu2003dsw6x6ioc8ktq","tag_id":"clbexyfu4003ssw6x8nm45mts","_id":"clbexyfu4003zsw6xf8tf2cvq"},{"post_id":"clbexyfu2003dsw6x6ioc8ktq","tag_id":"clbexyfu4003wsw6xf1gi2mlc","_id":"clbexyfu50041sw6x2p6r87cd"},{"post_id":"clbexyfu3003jsw6x05em3kvc","tag_id":"clbexyfu4003xsw6x4a4let9x","_id":"clbexyfu50042sw6x8hozcm6f"},{"post_id":"clbexyfu3003msw6x9n9kddoj","tag_id":"clbexyfu4003ssw6x8nm45mts","_id":"clbexyfu50043sw6x2ivk62tr"}],"Tag":[{"name":"运维","_id":"clbexyftb0005sw6x10kmc0o1"},{"name":"电脑维修","_id":"clbexyftd000dsw6xborwa8rn"},{"name":"AJ-Report","_id":"clbexyfth000lsw6x72ekc1cj"},{"name":"Docker","_id":"clbexyftj000usw6xh50vgch8"},{"name":"Hexo","_id":"clbexyftm0012sw6xhufuhpox"},{"name":"Butterfly","_id":"clbexyfts001rsw6xdu7xfjzy"},{"name":"Maven","_id":"clbexyfts001vsw6x4ps79i1m"},{"name":"IDEA","_id":"clbexyftt0021sw6x37ja85gz"},{"name":"Java","_id":"clbexyftu002dsw6x344q456k"},{"name":"Markdown","_id":"clbexyftv002lsw6xc2yabm4c"},{"name":"ip属地","_id":"clbexyftv002psw6xcpdg7y4n"},{"name":"ElasticSearch","_id":"clbexyftw002tsw6xho2d9x30"},{"name":"RabbitMQ","_id":"clbexyftw002zsw6x57uq4dll"},{"name":"MySQL","_id":"clbexyfu00034sw6xdya195vi"},{"name":"Redis","_id":"clbexyfu1003bsw6x4ihnhrr7"},{"name":"油猴","_id":"clbexyfu2003hsw6x3c77dlep"},{"name":"微PE","_id":"clbexyfu3003osw6xenk17fod"},{"name":"韩顺平","_id":"clbexyfu4003ssw6x8nm45mts"},{"name":"项目实战","_id":"clbexyfu4003wsw6xf1gi2mlc"},{"name":"阿里云","_id":"clbexyfu4003xsw6x4a4let9x"}]}}